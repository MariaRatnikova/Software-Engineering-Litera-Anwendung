AboutPanel -> a:
    java.awt.Color COLOR_BG -> a
    java.awt.Color COLOR_ACCENT -> b
    java.awt.Color COLOR_BUTTON_BG -> c
    java.awt.Font UI_FONT -> d
    java.awt.CardLayout navigator -> e
    javax.swing.JPanel root -> f
    void <init>(java.awt.CardLayout,javax.swing.JPanel) -> <init>
    void goBack() -> a
    javax.swing.JComponent buildHeader() -> b
    javax.swing.JScrollPane buildScrollPane() -> c
    javax.swing.JComponent buildContentColumn() -> d
    javax.swing.JLabel title(java.lang.String) -> a
    javax.swing.JLabel section(java.lang.String) -> b
    javax.swing.JLabel pair(java.lang.String,java.lang.String) -> a
    javax.swing.JLabel bullet(java.lang.String) -> c
    javax.swing.JLabel wrap(java.lang.String) -> d
    javax.swing.JLabel makeLabel(java.lang.String,int,int,java.awt.Color) -> a
    java.awt.Component vGap(int) -> a
    void lambda$buildHeader$0(java.awt.event.ActionEvent) -> a
    void <clinit>() -> <clinit>
ApplicationInterface -> b:
    java.util.List buchsuche(java.lang.String) -> a
    java.util.List sucheNachAutor(java.lang.String) -> b
    java.util.List sucheNachGenre(java.lang.String) -> c
    java.util.List sucheNachVerlag(java.lang.String) -> d
    Buch buchdetails(java.lang.String) -> e
    java.util.List showRezensionen(java.lang.String) -> f
    void reviewHinzufuegen(java.lang.String,Rezension) -> a
    java.util.List aehnlich(java.lang.String) -> g
ApplicationWindow -> ApplicationWindow:
    int WIDTH -> a
    int HEIGHT -> b
    java.lang.String CARD_START -> c
    void <init>(ApplicationInterface) -> <init>
    void createScreens(javax.swing.JPanel,java.awt.CardLayout,ApplicationInterface) -> a
    void main(java.lang.String[]) -> main
    void lambda$main$0() -> a
Autor -> c:
    java.lang.String name -> a
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String toString() -> b
BookDetails -> d:
    java.awt.Color COLOR_BG -> a
    java.awt.Color COLOR_ACCENT -> b
    java.awt.Color COLOR_CARD_BG -> c
    java.awt.Color COLOR_BTN_FG -> d
    int WIDTH_MAX -> e
    java.awt.CardLayout navigator -> f
    javax.swing.JPanel parent -> g
    ApplicationInterface controller -> h
    Buch currentBook -> i
    javax.swing.JLabel titleLabel -> j
    javax.swing.JLabel authorLabel -> k
    javax.swing.JLabel publLabel -> l
    javax.swing.JLabel genreLabel -> m
    javax.swing.JTextArea descArea -> n
    javax.swing.JLabel coverLabel -> o
    javax.swing.JPanel reviewList -> p
    javax.swing.JScrollPane reviewPane -> q
    SimilarBooks similarBooks -> r
    java.lang.String ACCENT_HEX -> s
    void <init>(java.awt.CardLayout,javax.swing.JPanel,ApplicationInterface) -> <init>
    void showBook(Buch) -> a
    void loadReviews() -> a
    javax.swing.JPanel renderReview(Rezension) -> a
    void openAddDialog(Buch) -> b
    javax.swing.JLabel createLabel(java.lang.String,int,int,java.awt.Color) -> a
    javax.swing.JTextArea createTextArea() -> b
    javax.swing.JButton createButton(java.lang.String) -> a
    java.lang.String starLine(int) -> a
    java.lang.String green(java.lang.String) -> b
    java.lang.String htmlPair(java.lang.String,java.lang.String) -> a
    java.lang.String dash(java.lang.String) -> c
    java.lang.String genres(java.util.List) -> a
    void lambda$new$1(java.awt.event.ActionEvent) -> a
    void lambda$new$0(java.awt.event.ActionEvent) -> b
    void <clinit>() -> <clinit>
BookListPanel -> e:
    java.awt.Color COLOR_BG_DARK -> a
    java.awt.Color COLOR_BG_TOP -> b
    java.awt.Color COLOR_MINT -> c
    java.awt.Color COLOR_ROW_BG -> d
    java.awt.Color COLOR_ROW_TEXT -> e
    java.awt.Dimension TOP_SIZE -> f
    java.awt.Dimension FILTER_SIZE -> g
    java.awt.Dimension SEARCH_SIZE -> h
    java.awt.Dimension BTN_SIZE -> i
    java.awt.Dimension ROW_SIZE -> j
    ApplicationInterface controller -> k
    java.awt.CardLayout navigator -> l
    javax.swing.JPanel parent -> m
    javax.swing.JComboBox filterBox -> n
    javax.swing.JTextField searchField -> o
    javax.swing.JPanel resultsPanel -> p
    void <init>(java.awt.CardLayout,javax.swing.JPanel,ApplicationInterface) -> <init>
    void buildHeader() -> a
    void buildResultArea() -> b
    void refresh() -> c
    void print(java.util.List) -> a
    javax.swing.JPanel createRow(Buch) -> a
    void lambda$buildHeader$0(java.awt.event.ActionEvent) -> a
    void <clinit>() -> <clinit>
BookListPanel$1 -> e$1:
    Buch val$book -> a
    BookListPanel this$0 -> b
    void <init>(BookListPanel,Buch) -> <init>
    void mouseClicked(java.awt.event.MouseEvent) -> a
Buch -> f:
    java.lang.String bookId -> a
    java.lang.String title -> b
    java.lang.String author -> c
    java.lang.String publisher -> d
    java.util.List genres -> e
    java.lang.String description -> f
    java.lang.String image -> g
    void <init>() -> <init>
    java.lang.String getBookId() -> a
    void setBookId(java.lang.String) -> a
    java.lang.String getTitle() -> b
    void setTitle(java.lang.String) -> b
    java.lang.String getAuthor() -> c
    void setAuthor(java.lang.String) -> c
    java.lang.String getPublisher() -> d
    void setPublisher(java.lang.String) -> d
    java.util.List getGenres() -> e
    void setGenres(java.util.List) -> a
    java.lang.String getDescription() -> f
    void setDescription(java.lang.String) -> e
    java.lang.String getImage() -> g
    void setImage(java.lang.String) -> f
    java.lang.String toString() -> h
Buchkatalog -> g:
    java.util.List buecher -> a
    StorageService storage -> b
    void <init>(StorageService) -> <init>
    java.util.List buchsuche(java.lang.String) -> a
    java.util.List sucheNachAutor(java.lang.String) -> b
    java.util.List sucheNachGenre(java.lang.String) -> c
    java.util.List sucheNachVerlag(java.lang.String) -> d
    Buch buchDetails(java.lang.String) -> e
    boolean reviewHinzufuegen(java.lang.String,Rezension) -> a
    java.util.List showRezensionen(java.lang.String) -> f
    java.util.List aehnlich(Buch) -> a
    boolean lambda$aehnlich$9(java.util.List,Buch) -> a
    boolean lambda$aehnlich$8(Buch) -> b
    boolean lambda$aehnlich$7(Buch,Buch) -> a
    boolean lambda$showRezensionen$6(java.lang.String,Rezension) -> b
    boolean lambda$buchDetails$5(java.lang.String,Buch) -> a
    boolean lambda$sucheNachVerlag$4(java.lang.String,Buch) -> b
    boolean lambda$sucheNachGenre$3(java.lang.String,Buch) -> c
    boolean lambda$sucheNachGenre$2(java.lang.String,java.lang.String) -> a
    boolean lambda$sucheNachAutor$1(java.lang.String,Buch) -> d
    boolean lambda$buchsuche$0(java.lang.String,Buch) -> e
Controller -> h:
    Buchkatalog katalog -> a
    void <init>(StorageService) -> <init>
    java.util.List buchsuche(java.lang.String) -> a
    java.util.List sucheNachAutor(java.lang.String) -> b
    java.util.List sucheNachGenre(java.lang.String) -> c
    java.util.List sucheNachVerlag(java.lang.String) -> d
    Buch buchdetails(java.lang.String) -> e
    java.util.List showRezensionen(java.lang.String) -> f
    void reviewHinzufuegen(java.lang.String,Rezension) -> a
    java.util.List aehnlich(java.lang.String) -> g
Genre -> i:
    java.lang.String name -> a
    java.lang.String description -> b
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getDescription() -> b
    void setDescription(java.lang.String) -> b
    java.lang.String toString() -> c
Rezension -> j:
    java.lang.String bookId -> a
    int rating -> b
    java.lang.String comment -> c
    java.util.Date date -> d
    void <init>() -> <init>
    void <init>(java.lang.String,int,java.lang.String,java.util.Date) -> <init>
    java.lang.String getBookId() -> a
    void setBookId(java.lang.String) -> a
    int getBewertung() -> b
    void setBewertung(int) -> a
    java.lang.String getKommentar() -> c
    void setKommentar(java.lang.String) -> b
    java.util.Date getDatum() -> d
    void setDatum(java.util.Date) -> a
    java.lang.String toString() -> e
SimilarBooks -> k:
    int TILE_W -> a
    int TILE_H -> b
    int GAP_H -> c
    int GAP_V -> d
    int VIEW_W -> e
    int VIEW_H -> f
    java.awt.Color COLOR_TEXT -> g
    ApplicationInterface controller -> h
    BookDetails bookDetails -> i
    void <init>(ApplicationInterface,java.awt.CardLayout,javax.swing.JPanel,BookDetails) -> <init>
    void showFor(java.lang.String) -> a
    javax.swing.JPanel createTile(Buch) -> a
    void lambda$showFor$1(javax.swing.JPanel,Buch) -> a
    boolean lambda$showFor$0(java.lang.String,Buch) -> a
    void <clinit>() -> <clinit>
SimilarBooks$1 -> k$1:
    Buch val$b -> a
    SimilarBooks this$0 -> b
    void <init>(SimilarBooks,Buch) -> <init>
    void mousePressed(java.awt.event.MouseEvent) -> a
StartPanel -> l:
    java.awt.Color COLOR_BACKGROUND -> a
    java.awt.Color COLOR_ACCENT -> b
    java.awt.Dimension BUTTON_SIZE -> c
    void <init>(java.awt.CardLayout,javax.swing.JPanel) -> <init>
    void styleButton(javax.swing.JButton,java.awt.Dimension) -> a
    void lambda$new$1(java.awt.CardLayout,javax.swing.JPanel,java.awt.event.ActionEvent) -> a
    void lambda$new$0(java.awt.CardLayout,javax.swing.JPanel,java.awt.event.ActionEvent) -> b
    void <clinit>() -> <clinit>
StorageService -> m:
    java.lang.String BOOKS_RESOURCE -> a
    java.nio.file.Path APP_DIR -> b
    java.nio.file.Path DATA_DIR -> c
    java.nio.file.Path REVIEWS_PATH -> d
    com.fasterxml.jackson.databind.ObjectMapper mapper -> e
    void <init>() -> <init>
    java.util.List ladeBuecher() -> a
    java.util.List ladeRezensionen() -> b
    void speichereRezension(Rezension) -> a
    java.nio.file.Path resolveAppDirectory() -> c
    void ensureReviewsFileExists() -> d
    void <clinit>() -> <clinit>
StorageService$1 -> m$1:
    StorageService this$0 -> a
    void <init>(StorageService) -> <init>
StorageService$2 -> m$2:
    StorageService this$0 -> a
    void <init>(StorageService) -> <init>
Verlag -> n:
    java.lang.String name -> a
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String toString() -> b
com.fasterxml.jackson.annotation.JacksonAnnotation -> com.fasterxml.jackson.annotation.JacksonAnnotation:
com.fasterxml.jackson.annotation.JacksonAnnotationValue -> com.fasterxml.jackson.annotation.JacksonAnnotationValue:
    java.lang.Class valueFor() -> valueFor
com.fasterxml.jackson.annotation.JacksonAnnotationsInside -> com.fasterxml.jackson.annotation.JacksonAnnotationsInside:
com.fasterxml.jackson.annotation.JacksonInject -> com.fasterxml.jackson.annotation.JacksonInject:
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.OptBoolean useInput() -> useInput
com.fasterxml.jackson.annotation.JacksonInject$Value -> com.fasterxml.jackson.annotation.JacksonInject$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JacksonInject$Value EMPTY -> EMPTY
    java.lang.Object _id -> _id
    java.lang.Boolean _useInput -> _useInput
    void <init>(java.lang.Object,java.lang.Boolean) -> <init>
    java.lang.Class valueFor() -> valueFor
    com.fasterxml.jackson.annotation.JacksonInject$Value empty() -> empty
    com.fasterxml.jackson.annotation.JacksonInject$Value construct(java.lang.Object,java.lang.Boolean) -> construct
    com.fasterxml.jackson.annotation.JacksonInject$Value from(com.fasterxml.jackson.annotation.JacksonInject) -> from
    com.fasterxml.jackson.annotation.JacksonInject$Value forId(java.lang.Object) -> forId
    com.fasterxml.jackson.annotation.JacksonInject$Value withId(java.lang.Object) -> withId
    com.fasterxml.jackson.annotation.JacksonInject$Value withUseInput(java.lang.Boolean) -> withUseInput
    java.lang.Object getId() -> getId
    java.lang.Boolean getUseInput() -> getUseInput
    boolean hasId() -> hasId
    boolean willUseInput(boolean) -> willUseInput
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _empty(java.lang.Object,java.lang.Boolean) -> _empty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAlias -> com.fasterxml.jackson.annotation.JsonAlias:
    java.lang.String[] value() -> value
com.fasterxml.jackson.annotation.JsonAnyGetter -> com.fasterxml.jackson.annotation.JsonAnyGetter:
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAnySetter -> com.fasterxml.jackson.annotation.JsonAnySetter:
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAutoDetect -> com.fasterxml.jackson.annotation.JsonAutoDetect:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
com.fasterxml.jackson.annotation.JsonAutoDetect$1 -> com.fasterxml.jackson.annotation.JsonAutoDetect$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility -> $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Value -> com.fasterxml.jackson.annotation.JsonAutoDetect$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT_FIELD_VISIBILITY -> DEFAULT_FIELD_VISIBILITY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value NO_OVERRIDES -> NO_OVERRIDES
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldVisibility -> _fieldVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterVisibility -> _getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterVisibility -> _isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterVisibility -> _setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorVisibility -> _creatorVisibility
    void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value defaultVisibility() -> defaultVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value noOverrides() -> noOverrides
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value from(com.fasterxml.jackson.annotation.JsonAutoDetect) -> from
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value construct(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> construct
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value construct(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> construct
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value merge(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> merge
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    java.lang.Class valueFor() -> valueFor
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getFieldVisibility() -> getFieldVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getGetterVisibility() -> getGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getIsGetterVisibility() -> getIsGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getSetterVisibility() -> getSetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getCreatorVisibility() -> getCreatorVisibility
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value _predefined(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _predefined
    boolean _equals(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> _equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility -> com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY -> ANY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE -> NONE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values() -> values
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    boolean isVisible(java.lang.reflect.Member) -> isVisible
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonBackReference -> com.fasterxml.jackson.annotation.JsonBackReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonClassDescription -> com.fasterxml.jackson.annotation.JsonClassDescription:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonCreator -> com.fasterxml.jackson.annotation.JsonCreator:
    com.fasterxml.jackson.annotation.JsonCreator$Mode mode() -> mode
com.fasterxml.jackson.annotation.JsonCreator$Mode -> com.fasterxml.jackson.annotation.JsonCreator$Mode:
    com.fasterxml.jackson.annotation.JsonCreator$Mode DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonCreator$Mode DELEGATING -> DELEGATING
    com.fasterxml.jackson.annotation.JsonCreator$Mode PROPERTIES -> PROPERTIES
    com.fasterxml.jackson.annotation.JsonCreator$Mode DISABLED -> DISABLED
    com.fasterxml.jackson.annotation.JsonCreator$Mode[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonCreator$Mode[] values() -> values
    com.fasterxml.jackson.annotation.JsonCreator$Mode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonEnumDefaultValue -> com.fasterxml.jackson.annotation.JsonEnumDefaultValue:
com.fasterxml.jackson.annotation.JsonFilter -> com.fasterxml.jackson.annotation.JsonFilter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonFormat -> com.fasterxml.jackson.annotation.JsonFormat:
    java.lang.String DEFAULT_LOCALE -> DEFAULT_LOCALE
    java.lang.String DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    java.lang.String pattern() -> pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape() -> shape
    java.lang.String locale() -> locale
    java.lang.String timezone() -> timezone
    com.fasterxml.jackson.annotation.OptBoolean lenient() -> lenient
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] with() -> with
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] without() -> without
com.fasterxml.jackson.annotation.JsonFormat$Feature -> com.fasterxml.jackson.annotation.JsonFormat$Feature:
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> ACCEPT_CASE_INSENSITIVE_PROPERTIES
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> READ_UNKNOWN_ENUM_VALUES_AS_NULL
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> READ_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES -> ACCEPT_CASE_INSENSITIVE_VALUES
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID -> WRITE_DATES_WITH_ZONE_ID
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES -> WRITE_SORTED_MAP_ENTRIES
    com.fasterxml.jackson.annotation.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> ADJUST_DATES_TO_CONTEXT_TIME_ZONE
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] values() -> values
    com.fasterxml.jackson.annotation.JsonFormat$Feature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Features -> com.fasterxml.jackson.annotation.JsonFormat$Features:
    int _enabled -> _enabled
    int _disabled -> _disabled
    com.fasterxml.jackson.annotation.JsonFormat$Features EMPTY -> EMPTY
    void <init>(int,int) -> <init>
    com.fasterxml.jackson.annotation.JsonFormat$Features empty() -> empty
    com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat) -> construct
    com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat$Feature[],com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> construct
    com.fasterxml.jackson.annotation.JsonFormat$Features withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Features) -> withOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Features with(com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> with
    com.fasterxml.jackson.annotation.JsonFormat$Features without(com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> without
    java.lang.Boolean get(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> get
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Shape -> com.fasterxml.jackson.annotation.JsonFormat$Shape:
    com.fasterxml.jackson.annotation.JsonFormat$Shape ANY -> ANY
    com.fasterxml.jackson.annotation.JsonFormat$Shape NATURAL -> NATURAL
    com.fasterxml.jackson.annotation.JsonFormat$Shape SCALAR -> SCALAR
    com.fasterxml.jackson.annotation.JsonFormat$Shape ARRAY -> ARRAY
    com.fasterxml.jackson.annotation.JsonFormat$Shape OBJECT -> OBJECT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER -> NUMBER
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_FLOAT -> NUMBER_FLOAT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_INT -> NUMBER_INT
    com.fasterxml.jackson.annotation.JsonFormat$Shape STRING -> STRING
    com.fasterxml.jackson.annotation.JsonFormat$Shape BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.annotation.JsonFormat$Shape BINARY -> BINARY
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] values() -> values
    com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    boolean isNumeric() -> isNumeric
    boolean isStructured() -> isStructured
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Value -> com.fasterxml.jackson.annotation.JsonFormat$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY -> EMPTY
    java.lang.String _pattern -> _pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape _shape -> _shape
    java.util.Locale _locale -> _locale
    java.lang.String _timezoneStr -> _timezoneStr
    java.lang.Boolean _lenient -> _lenient
    com.fasterxml.jackson.annotation.JsonFormat$Features _features -> _features
    java.util.TimeZone _timezone -> _timezone
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.annotation.JsonFormat) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    com.fasterxml.jackson.annotation.JsonFormat$Value empty() -> empty
    com.fasterxml.jackson.annotation.JsonFormat$Value merge(com.fasterxml.jackson.annotation.JsonFormat$Value,com.fasterxml.jackson.annotation.JsonFormat$Value) -> merge
    com.fasterxml.jackson.annotation.JsonFormat$Value mergeAll(com.fasterxml.jackson.annotation.JsonFormat$Value[]) -> mergeAll
    com.fasterxml.jackson.annotation.JsonFormat$Value from(com.fasterxml.jackson.annotation.JsonFormat) -> from
    com.fasterxml.jackson.annotation.JsonFormat$Value withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Value) -> withOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value forPattern(java.lang.String) -> forPattern
    com.fasterxml.jackson.annotation.JsonFormat$Value forShape(com.fasterxml.jackson.annotation.JsonFormat$Shape) -> forShape
    com.fasterxml.jackson.annotation.JsonFormat$Value forLeniency(boolean) -> forLeniency
    com.fasterxml.jackson.annotation.JsonFormat$Value withPattern(java.lang.String) -> withPattern
    com.fasterxml.jackson.annotation.JsonFormat$Value withShape(com.fasterxml.jackson.annotation.JsonFormat$Shape) -> withShape
    com.fasterxml.jackson.annotation.JsonFormat$Value withLocale(java.util.Locale) -> withLocale
    com.fasterxml.jackson.annotation.JsonFormat$Value withTimeZone(java.util.TimeZone) -> withTimeZone
    com.fasterxml.jackson.annotation.JsonFormat$Value withLenient(java.lang.Boolean) -> withLenient
    com.fasterxml.jackson.annotation.JsonFormat$Value withFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> withFeature
    com.fasterxml.jackson.annotation.JsonFormat$Value withoutFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> withoutFeature
    java.lang.Class valueFor() -> valueFor
    java.lang.String getPattern() -> getPattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape getShape() -> getShape
    java.util.Locale getLocale() -> getLocale
    java.lang.Boolean getLenient() -> getLenient
    boolean isLenient() -> isLenient
    java.lang.String timeZoneAsString() -> timeZoneAsString
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean hasShape() -> hasShape
    boolean hasPattern() -> hasPattern
    boolean hasLocale() -> hasLocale
    boolean hasTimeZone() -> hasTimeZone
    boolean hasLenient() -> hasLenient
    java.lang.Boolean getFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> getFeature
    com.fasterxml.jackson.annotation.JsonFormat$Features getFeatures() -> getFeatures
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _equal(java.lang.Object,java.lang.Object) -> _equal
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonGetter -> com.fasterxml.jackson.annotation.JsonGetter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonIdentityInfo -> com.fasterxml.jackson.annotation.JsonIdentityInfo:
    java.lang.String property() -> property
    java.lang.Class generator() -> generator
    java.lang.Class resolver() -> resolver
    java.lang.Class scope() -> scope
com.fasterxml.jackson.annotation.JsonIdentityReference -> com.fasterxml.jackson.annotation.JsonIdentityReference:
    boolean alwaysAsId() -> alwaysAsId
com.fasterxml.jackson.annotation.JsonIgnore -> com.fasterxml.jackson.annotation.JsonIgnore:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonIgnoreProperties -> com.fasterxml.jackson.annotation.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
    boolean allowGetters() -> allowGetters
    boolean allowSetters() -> allowSetters
com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value -> com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value EMPTY -> EMPTY
    java.util.Set _ignored -> _ignored
    boolean _ignoreUnknown -> _ignoreUnknown
    boolean _allowGetters -> _allowGetters
    boolean _allowSetters -> _allowSetters
    boolean _merge -> _merge
    void <init>(java.util.Set,boolean,boolean,boolean,boolean) -> <init>
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value from(com.fasterxml.jackson.annotation.JsonIgnoreProperties) -> from
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value construct(java.util.Set,boolean,boolean,boolean,boolean) -> construct
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value empty() -> empty
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value merge(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> merge
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value mergeAll(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value[]) -> mergeAll
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoredProperties(java.util.Set) -> forIgnoredProperties
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoredProperties(java.lang.String[]) -> forIgnoredProperties
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoreUnknown(boolean) -> forIgnoreUnknown
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> withOverrides
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnored(java.util.Set) -> withIgnored
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnored(java.lang.String[]) -> withIgnored
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutIgnored() -> withoutIgnored
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnoreUnknown() -> withIgnoreUnknown
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutIgnoreUnknown() -> withoutIgnoreUnknown
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withAllowGetters() -> withAllowGetters
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutAllowGetters() -> withoutAllowGetters
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withAllowSetters() -> withAllowSetters
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutAllowSetters() -> withoutAllowSetters
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withMerge() -> withMerge
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutMerge() -> withoutMerge
    java.lang.Class valueFor() -> valueFor
    java.lang.Object readResolve() -> readResolve
    java.util.Set getIgnored() -> getIgnored
    java.util.Set findIgnoredForSerialization() -> findIgnoredForSerialization
    java.util.Set findIgnoredForDeserialization() -> findIgnoredForDeserialization
    boolean getIgnoreUnknown() -> getIgnoreUnknown
    boolean getAllowGetters() -> getAllowGetters
    boolean getAllowSetters() -> getAllowSetters
    boolean getMerge() -> getMerge
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _equals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> _equals
    java.util.Set _asSet(java.lang.String[]) -> _asSet
    java.util.Set _merge(java.util.Set,java.util.Set) -> _merge
    boolean _empty(java.util.Set,boolean,boolean,boolean,boolean) -> _empty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIgnoreType -> com.fasterxml.jackson.annotation.JsonIgnoreType:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonInclude -> com.fasterxml.jackson.annotation.JsonInclude:
    com.fasterxml.jackson.annotation.JsonInclude$Include value() -> value
    com.fasterxml.jackson.annotation.JsonInclude$Include content() -> content
    java.lang.Class valueFilter() -> valueFilter
    java.lang.Class contentFilter() -> contentFilter
com.fasterxml.jackson.annotation.JsonInclude$Include -> com.fasterxml.jackson.annotation.JsonInclude$Include:
    com.fasterxml.jackson.annotation.JsonInclude$Include ALWAYS -> ALWAYS
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_NULL -> NON_NULL
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_ABSENT -> NON_ABSENT
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.annotation.JsonInclude$Include CUSTOM -> CUSTOM
    com.fasterxml.jackson.annotation.JsonInclude$Include USE_DEFAULTS -> USE_DEFAULTS
    com.fasterxml.jackson.annotation.JsonInclude$Include[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonInclude$Include[] values() -> values
    com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonInclude$Value -> com.fasterxml.jackson.annotation.JsonInclude$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY -> EMPTY
    com.fasterxml.jackson.annotation.JsonInclude$Include _valueInclusion -> _valueInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Include _contentInclusion -> _contentInclusion
    java.lang.Class _valueFilter -> _valueFilter
    java.lang.Class _contentFilter -> _contentFilter
    void <init>(com.fasterxml.jackson.annotation.JsonInclude) -> <init>
    void <init>(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> <init>
    com.fasterxml.jackson.annotation.JsonInclude$Value empty() -> empty
    com.fasterxml.jackson.annotation.JsonInclude$Value merge(com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonInclude$Value) -> merge
    com.fasterxml.jackson.annotation.JsonInclude$Value mergeAll(com.fasterxml.jackson.annotation.JsonInclude$Value[]) -> mergeAll
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.annotation.JsonInclude$Value withOverrides(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withOverrides
    com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> construct
    com.fasterxml.jackson.annotation.JsonInclude$Value from(com.fasterxml.jackson.annotation.JsonInclude) -> from
    com.fasterxml.jackson.annotation.JsonInclude$Value withValueInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withValueInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value withValueFilter(java.lang.Class) -> withValueFilter
    com.fasterxml.jackson.annotation.JsonInclude$Value withContentFilter(java.lang.Class) -> withContentFilter
    com.fasterxml.jackson.annotation.JsonInclude$Value withContentInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withContentInclusion
    java.lang.Class valueFor() -> valueFor
    com.fasterxml.jackson.annotation.JsonInclude$Include getValueInclusion() -> getValueInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Include getContentInclusion() -> getContentInclusion
    java.lang.Class getValueFilter() -> getValueFilter
    java.lang.Class getContentFilter() -> getContentFilter
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIncludeProperties -> com.fasterxml.jackson.annotation.JsonIncludeProperties:
    java.lang.String[] value() -> value
com.fasterxml.jackson.annotation.JsonIncludeProperties$Value -> com.fasterxml.jackson.annotation.JsonIncludeProperties$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value ALL -> ALL
    java.util.Set _included -> _included
    void <init>(java.util.Set) -> <init>
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value from(com.fasterxml.jackson.annotation.JsonIncludeProperties) -> from
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value all() -> all
    java.lang.Class valueFor() -> valueFor
    java.util.Set getIncluded() -> getIncluded
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIncludeProperties$Value) -> withOverrides
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _equals(java.util.Set,java.util.Set) -> _equals
    java.util.Set _asSet(java.lang.String[]) -> _asSet
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonKey -> com.fasterxml.jackson.annotation.JsonKey:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonManagedReference -> com.fasterxml.jackson.annotation.JsonManagedReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonMerge -> com.fasterxml.jackson.annotation.JsonMerge:
    com.fasterxml.jackson.annotation.OptBoolean value() -> value
com.fasterxml.jackson.annotation.JsonProperty -> com.fasterxml.jackson.annotation.JsonProperty:
    java.lang.String USE_DEFAULT_NAME -> USE_DEFAULT_NAME
    int INDEX_UNKNOWN -> INDEX_UNKNOWN
    java.lang.String value() -> value
    java.lang.String namespace() -> namespace
    boolean required() -> required
    int index() -> index
    java.lang.String defaultValue() -> defaultValue
    com.fasterxml.jackson.annotation.JsonProperty$Access access() -> access
com.fasterxml.jackson.annotation.JsonProperty$Access -> com.fasterxml.jackson.annotation.JsonProperty$Access:
    com.fasterxml.jackson.annotation.JsonProperty$Access AUTO -> AUTO
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_ONLY -> READ_ONLY
    com.fasterxml.jackson.annotation.JsonProperty$Access WRITE_ONLY -> WRITE_ONLY
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_WRITE -> READ_WRITE
    com.fasterxml.jackson.annotation.JsonProperty$Access[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonProperty$Access[] values() -> values
    com.fasterxml.jackson.annotation.JsonProperty$Access valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonPropertyDescription -> com.fasterxml.jackson.annotation.JsonPropertyDescription:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonPropertyOrder -> com.fasterxml.jackson.annotation.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
com.fasterxml.jackson.annotation.JsonRawValue -> com.fasterxml.jackson.annotation.JsonRawValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonRootName -> com.fasterxml.jackson.annotation.JsonRootName:
    java.lang.String value() -> value
    java.lang.String namespace() -> namespace
com.fasterxml.jackson.annotation.JsonSetter -> com.fasterxml.jackson.annotation.JsonSetter:
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.Nulls nulls() -> nulls
    com.fasterxml.jackson.annotation.Nulls contentNulls() -> contentNulls
com.fasterxml.jackson.annotation.JsonSetter$Value -> com.fasterxml.jackson.annotation.JsonSetter$Value:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.Nulls _nulls -> _nulls
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> _contentNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value EMPTY -> EMPTY
    void <init>(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    java.lang.Class valueFor() -> valueFor
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.annotation.JsonSetter$Value from(com.fasterxml.jackson.annotation.JsonSetter) -> from
    com.fasterxml.jackson.annotation.JsonSetter$Value construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> construct
    com.fasterxml.jackson.annotation.JsonSetter$Value empty() -> empty
    com.fasterxml.jackson.annotation.JsonSetter$Value merge(com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.annotation.JsonSetter$Value) -> merge
    com.fasterxml.jackson.annotation.JsonSetter$Value forValueNulls(com.fasterxml.jackson.annotation.Nulls) -> forValueNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value forValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> forValueNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value forContentNulls(com.fasterxml.jackson.annotation.Nulls) -> forContentNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value withOverrides(com.fasterxml.jackson.annotation.JsonSetter$Value) -> withOverrides
    com.fasterxml.jackson.annotation.JsonSetter$Value withValueNulls(com.fasterxml.jackson.annotation.Nulls) -> withValueNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value withValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> withValueNulls
    com.fasterxml.jackson.annotation.JsonSetter$Value withContentNulls(com.fasterxml.jackson.annotation.Nulls) -> withContentNulls
    com.fasterxml.jackson.annotation.Nulls getValueNulls() -> getValueNulls
    com.fasterxml.jackson.annotation.Nulls getContentNulls() -> getContentNulls
    com.fasterxml.jackson.annotation.Nulls nonDefaultValueNulls() -> nonDefaultValueNulls
    com.fasterxml.jackson.annotation.Nulls nonDefaultContentNulls() -> nonDefaultContentNulls
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _empty(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> _empty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonSubTypes -> com.fasterxml.jackson.annotation.JsonSubTypes:
    com.fasterxml.jackson.annotation.JsonSubTypes$Type[] value() -> value
    boolean failOnRepeatedNames() -> failOnRepeatedNames
com.fasterxml.jackson.annotation.JsonSubTypes$Type -> com.fasterxml.jackson.annotation.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
    java.lang.String[] names() -> names
com.fasterxml.jackson.annotation.JsonTypeId -> com.fasterxml.jackson.annotation.JsonTypeId:
com.fasterxml.jackson.annotation.JsonTypeInfo -> com.fasterxml.jackson.annotation.JsonTypeInfo:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id use() -> use
    com.fasterxml.jackson.annotation.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
    boolean visible() -> visible
com.fasterxml.jackson.annotation.JsonTypeInfo$As -> com.fasterxml.jackson.annotation.JsonTypeInfo$As:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY -> PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXISTING_PROPERTY -> EXISTING_PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values() -> values
    com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$Id -> com.fasterxml.jackson.annotation.JsonTypeInfo$Id:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE -> NONE
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS -> CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME -> NAME
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id DEDUCTION -> DEDUCTION
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values() -> values
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$None -> com.fasterxml.jackson.annotation.JsonTypeInfo$None:
    void <init>() -> <init>
com.fasterxml.jackson.annotation.JsonTypeName -> com.fasterxml.jackson.annotation.JsonTypeName:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonUnwrapped -> com.fasterxml.jackson.annotation.JsonUnwrapped:
    boolean enabled() -> enabled
    java.lang.String prefix() -> prefix
    java.lang.String suffix() -> suffix
com.fasterxml.jackson.annotation.JsonValue -> com.fasterxml.jackson.annotation.JsonValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonView -> com.fasterxml.jackson.annotation.JsonView:
    java.lang.Class[] value() -> value
com.fasterxml.jackson.annotation.Nulls -> com.fasterxml.jackson.annotation.Nulls:
    com.fasterxml.jackson.annotation.Nulls SET -> SET
    com.fasterxml.jackson.annotation.Nulls SKIP -> SKIP
    com.fasterxml.jackson.annotation.Nulls FAIL -> FAIL
    com.fasterxml.jackson.annotation.Nulls AS_EMPTY -> AS_EMPTY
    com.fasterxml.jackson.annotation.Nulls DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.Nulls[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.Nulls[] values() -> values
    com.fasterxml.jackson.annotation.Nulls valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.ObjectIdGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerator:
    void <init>() -> <init>
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    boolean maySerializeAsObject() -> maySerializeAsObject
    boolean isValidReferencePropertyName(java.lang.String,java.lang.Object) -> isValidReferencePropertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey -> com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey:
    long serialVersionUID -> serialVersionUID
    java.lang.Class type -> type
    java.lang.Class scope -> scope
    java.lang.Object key -> key
    int hashCode -> hashCode
    void <init>(java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.fasterxml.jackson.annotation.ObjectIdGenerators -> com.fasterxml.jackson.annotation.ObjectIdGenerators:
    void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$Base -> com.fasterxml.jackson.annotation.ObjectIdGenerators$Base:
    java.lang.Class _scope -> _scope
    void <init>(java.lang.Class) -> <init>
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator:
    long serialVersionUID -> serialVersionUID
    int _nextValue -> _nextValue
    void <init>() -> <init>
    void <init>(java.lang.Class,int) -> <init>
    int initialValue() -> initialValue
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Integer generateId(java.lang.Object) -> generateId
    java.lang.Object generateId(java.lang.Object) -> generateId
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$None -> com.fasterxml.jackson.annotation.ObjectIdGenerators$None:
    void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class) -> <init>
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    java.lang.String generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    java.util.UUID generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdResolver -> com.fasterxml.jackson.annotation.ObjectIdResolver:
    void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
com.fasterxml.jackson.annotation.OptBoolean -> com.fasterxml.jackson.annotation.OptBoolean:
    com.fasterxml.jackson.annotation.OptBoolean TRUE -> TRUE
    com.fasterxml.jackson.annotation.OptBoolean FALSE -> FALSE
    com.fasterxml.jackson.annotation.OptBoolean DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.OptBoolean[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.OptBoolean[] values() -> values
    com.fasterxml.jackson.annotation.OptBoolean valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    java.lang.Boolean asBoolean() -> asBoolean
    boolean asPrimitive() -> asPrimitive
    com.fasterxml.jackson.annotation.OptBoolean fromBoolean(java.lang.Boolean) -> fromBoolean
    boolean equals(java.lang.Boolean,java.lang.Boolean) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.PropertyAccessor -> com.fasterxml.jackson.annotation.PropertyAccessor:
    com.fasterxml.jackson.annotation.PropertyAccessor GETTER -> GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor SETTER -> SETTER
    com.fasterxml.jackson.annotation.PropertyAccessor CREATOR -> CREATOR
    com.fasterxml.jackson.annotation.PropertyAccessor FIELD -> FIELD
    com.fasterxml.jackson.annotation.PropertyAccessor IS_GETTER -> IS_GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor NONE -> NONE
    com.fasterxml.jackson.annotation.PropertyAccessor ALL -> ALL
    com.fasterxml.jackson.annotation.PropertyAccessor[] $VALUES -> $VALUES
    com.fasterxml.jackson.annotation.PropertyAccessor[] values() -> values
    com.fasterxml.jackson.annotation.PropertyAccessor valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    boolean creatorEnabled() -> creatorEnabled
    boolean getterEnabled() -> getterEnabled
    boolean isGetterEnabled() -> isGetterEnabled
    boolean setterEnabled() -> setterEnabled
    boolean fieldEnabled() -> fieldEnabled
    void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.SimpleObjectIdResolver -> com.fasterxml.jackson.annotation.SimpleObjectIdResolver:
    java.util.Map _items -> _items
    void <init>() -> <init>
    void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
    com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
com.fasterxml.jackson.annotation.package-info -> com.fasterxml.jackson.annotation.package-info:
com.fasterxml.jackson.core.Base64Variant -> com.fasterxml.jackson.core.Base64Variant:
    int INT_SPACE -> INT_SPACE
    long serialVersionUID -> serialVersionUID
    char PADDING_CHAR_NONE -> PADDING_CHAR_NONE
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    boolean _writePadding -> _writePadding
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour _paddingReadBehaviour -> _paddingReadBehaviour
    void <init>(java.lang.String,java.lang.String,boolean,char,int) -> <init>
    void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int) -> <init>
    void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int) -> <init>
    void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour,int) -> <init>
    void <init>(com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour) -> <init>
    com.fasterxml.jackson.core.Base64Variant withPaddingAllowed() -> withPaddingAllowed
    com.fasterxml.jackson.core.Base64Variant withPaddingRequired() -> withPaddingRequired
    com.fasterxml.jackson.core.Base64Variant withPaddingForbidden() -> withPaddingForbidden
    com.fasterxml.jackson.core.Base64Variant withReadPadding(com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour) -> withReadPadding
    com.fasterxml.jackson.core.Base64Variant withWritePadding(boolean) -> withWritePadding
    java.lang.Object readResolve() -> readResolve
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean requiresPaddingOnRead() -> requiresPaddingOnRead
    boolean acceptsPaddingOnRead() -> acceptsPaddingOnRead
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour paddingReadBehaviour() -> paddingReadBehaviour
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String encode(byte[],boolean,java.lang.String) -> encode
    byte[] decode(java.lang.String) -> decode
    void decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder) -> decode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void _reportInvalidBase64(char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportBase64UnexpectedPadding() -> _reportBase64UnexpectedPadding
    java.lang.String unexpectedPaddingMessage() -> unexpectedPaddingMessage
    java.lang.String missingPaddingMessage() -> missingPaddingMessage
com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour -> com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour:
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_FORBIDDEN -> PADDING_FORBIDDEN
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_REQUIRED -> PADDING_REQUIRED
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_ALLOWED -> PADDING_ALLOWED
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour[] values() -> values
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.Base64Variants -> com.fasterxml.jackson.core.Base64Variants:
    java.lang.String STD_BASE64_ALPHABET -> STD_BASE64_ALPHABET
    com.fasterxml.jackson.core.Base64Variant MIME -> MIME
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    com.fasterxml.jackson.core.Base64Variant PEM -> PEM
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    void <init>() -> <init>
    com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> getDefaultVariant
    com.fasterxml.jackson.core.Base64Variant valueOf(java.lang.String) -> valueOf
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.FormatFeature -> com.fasterxml.jackson.core.FormatFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.core.FormatSchema -> com.fasterxml.jackson.core.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
com.fasterxml.jackson.core.JacksonException -> com.fasterxml.jackson.core.JacksonException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.String getOriginalMessage() -> getOriginalMessage
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonEncoding -> com.fasterxml.jackson.core.JsonEncoding:
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> UTF8
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> UTF16_BE
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> UTF16_LE
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> UTF32_BE
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    int _bits -> _bits
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String,boolean,int) -> <init>
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
    int bits() -> bits
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory -> com.fasterxml.jackson.core.JsonFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_FACTORY_FEATURE_FLAGS -> DEFAULT_FACTORY_FEATURE_FLAGS
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    char DEFAULT_QUOTE_CHAR -> DEFAULT_QUOTE_CHAR
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer -> _byteSymbolCanonicalizer
    int _factoryFeatures -> _factoryFeatures
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> _inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> _outputDecorator
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    char _quoteChar -> _quoteChar
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.ObjectCodec) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactoryBuilder) -> <init>
    void <init>(com.fasterxml.jackson.core.TSFBuilder,boolean) -> <init>
    com.fasterxml.jackson.core.TSFBuilder rebuild() -> rebuild
    com.fasterxml.jackson.core.TSFBuilder builder() -> builder
    com.fasterxml.jackson.core.JsonFactory copy() -> copy
    void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    java.lang.Object readResolve() -> readResolve
    boolean requiresPropertyOrdering() -> requiresPropertyOrdering
    boolean canHandleBinaryNatively() -> canHandleBinaryNatively
    boolean canUseCharArrays() -> canUseCharArrays
    boolean canParseAsync() -> canParseAsync
    java.lang.Class getFormatReadFeatureType() -> getFormatReadFeatureType
    java.lang.Class getFormatWriteFeatureType() -> getFormatWriteFeatureType
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    java.lang.String getFormatName() -> getFormatName
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    int getParserFeatures() -> getParserFeatures
    int getGeneratorFeatures() -> getGeneratorFeatures
    int getFormatParserFeatures() -> getFormatParserFeatures
    int getFormatGeneratorFeatures() -> getFormatGeneratorFeatures
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    com.fasterxml.jackson.core.JsonFactory setStreamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> setStreamReadConstraints
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    com.fasterxml.jackson.core.io.InputDecorator getInputDecorator() -> getInputDecorator
    com.fasterxml.jackson.core.JsonFactory setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> setInputDecorator
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> setOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    java.lang.String getRootValueSeparator() -> getRootValueSeparator
    com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() -> createNonBlockingByteBufferParser
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createGenerator
    com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8Generator
    java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> _createWriter
    java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    java.io.DataInput _decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean) -> _createContext
    com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object) -> _createNonBlockingContext
    com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object) -> _createContentReference
    com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object,int,int) -> _createContentReference
    void _requireJSONFactory(java.lang.String) -> _requireJSONFactory
    boolean _isJSONFactory() -> _isJSONFactory
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory$Feature -> com.fasterxml.jackson.core.JsonFactory$Feature:
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW -> FAIL_ON_SYMBOL_HASH_OVERFLOW
    com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING -> USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING
    com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION -> CHARSET_DETECTION
    boolean _defaultState -> _defaultState
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactoryBuilder -> com.fasterxml.jackson.core.JsonFactoryBuilder:
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    char _quoteChar -> _quoteChar
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
    com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactoryBuilder characterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> characterEscapes
    com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(java.lang.String) -> rootValueSeparator
    com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> rootValueSeparator
    com.fasterxml.jackson.core.JsonFactoryBuilder highestNonEscapedChar(int) -> highestNonEscapedChar
    com.fasterxml.jackson.core.JsonFactoryBuilder quoteChar(char) -> quoteChar
    com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes() -> characterEscapes
    com.fasterxml.jackson.core.SerializableString rootValueSeparator() -> rootValueSeparator
    int highestNonEscapedChar() -> highestNonEscapedChar
    char quoteChar() -> quoteChar
    com.fasterxml.jackson.core.JsonFactory build() -> build
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
com.fasterxml.jackson.core.JsonGenerationException -> com.fasterxml.jackson.core.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    com.fasterxml.jackson.core.JsonGenerationException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    com.fasterxml.jackson.core.JsonGenerator getProcessor() -> getProcessor
    com.fasterxml.jackson.core.exc.StreamWriteException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonGenerator -> com.fasterxml.jackson.core.JsonGenerator:
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_WRITE_CAPABILITIES -> DEFAULT_WRITE_CAPABILITIES
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_TEXTUAL_WRITE_CAPABILITIES -> DEFAULT_TEXTUAL_WRITE_CAPABILITIES
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_BINARY_WRITE_CAPABILITIES -> DEFAULT_BINARY_WRITE_CAPABILITIES
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void <init>() -> <init>
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    java.lang.Object getOutputTarget() -> getOutputTarget
    java.lang.Object currentValue() -> currentValue
    void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    com.fasterxml.jackson.core.JsonGenerator configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    int getFormatFeatures() -> getFormatFeatures
    com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> overrideFormatFeatures
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    int getOutputBuffered() -> getOutputBuffered
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean canWriteObjectId() -> canWriteObjectId
    boolean canWriteTypeId() -> canWriteTypeId
    boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    boolean canOmitFields() -> canOmitFields
    boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    void writeStartArray() -> writeStartArray
    void writeStartArray(int) -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeFieldId(long) -> writeFieldId
    void writeArray(int[],int,int) -> writeArray
    void writeArray(long[],int,int) -> writeArray
    void writeArray(double[],int,int) -> writeArray
    void writeArray(java.lang.String[],int,int) -> writeArray
    void writeString(java.lang.String) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    int writeBinary(java.io.InputStream,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeNumber(char[],int,int) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    void writeObjectId(java.lang.Object) -> writeObjectId
    void writeObjectRef(java.lang.Object) -> writeObjectRef
    void writeTypeId(java.lang.Object) -> writeTypeId
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    void writePOJO(java.lang.Object) -> writePOJO
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeNumberField(java.lang.String,short) -> writeNumberField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigInteger) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writePOJOField(java.lang.String,java.lang.Object) -> writePOJOField
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void writeOmittedField(java.lang.String) -> writeOmittedField
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentEventExact(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEventExact
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    void _copyCurrentContents(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentContents
    void _copyCurrentFloatValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentFloatValue
    void _copyCurrentFloatValueExact(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentFloatValueExact
    void _copyCurrentIntValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentIntValue
    void _copyCurrentStringValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentStringValue
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
    void _reportError(java.lang.String) -> _reportError
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    void _verifyOffsets(int,int,int) -> _verifyOffsets
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$1 -> com.fasterxml.jackson.core.JsonGenerator$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion -> $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$Feature -> com.fasterxml.jackson.core.JsonGenerator$Feature:
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN -> WRITE_BIGDECIMAL_AS_PLAIN
    com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.JsonGenerator$Feature IGNORE_UNKNOWN -> IGNORE_UNKNOWN
    com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER -> USE_FAST_DOUBLE_WRITER
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE -> WRITE_HEX_UPPER_CASE
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonLocation -> com.fasterxml.jackson.core.JsonLocation:
    long serialVersionUID -> serialVersionUID
    int MAX_CONTENT_SNIPPET -> MAX_CONTENT_SNIPPET
    com.fasterxml.jackson.core.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    com.fasterxml.jackson.core.io.ContentReference _contentReference -> _contentReference
    java.lang.String _sourceDescription -> _sourceDescription
    void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int) -> <init>
    void <init>(com.fasterxml.jackson.core.io.ContentReference,long,long,int,int) -> <init>
    void <init>(java.lang.Object,long,int,int) -> <init>
    void <init>(java.lang.Object,long,long,int,int) -> <init>
    com.fasterxml.jackson.core.io.ContentReference _wrap(java.lang.Object) -> _wrap
    com.fasterxml.jackson.core.io.ContentReference contentReference() -> contentReference
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String sourceDescription() -> sourceDescription
    java.lang.String offsetDescription() -> offsetDescription
    java.lang.StringBuilder appendOffsetDescription(java.lang.StringBuilder) -> appendOffsetDescription
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParseException -> com.fasterxml.jackson.core.JsonParseException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    com.fasterxml.jackson.core.JsonParseException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    com.fasterxml.jackson.core.JsonParseException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    com.fasterxml.jackson.core.JsonParser getProcessor() -> getProcessor
    com.fasterxml.jackson.core.util.RequestPayload getRequestPayload() -> getRequestPayload
    java.lang.String getRequestPayloadAsString() -> getRequestPayloadAsString
    java.lang.String getMessage() -> getMessage
    com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonParser -> com.fasterxml.jackson.core.JsonParser:
    int MIN_BYTE_I -> MIN_BYTE_I
    int MAX_BYTE_I -> MAX_BYTE_I
    int MIN_SHORT_I -> MIN_SHORT_I
    int MAX_SHORT_I -> MAX_SHORT_I
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_READ_CAPABILITIES -> DEFAULT_READ_CAPABILITIES
    int _features -> _features
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> _requestPayload
    void <init>() -> <init>
    void <init>(int) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    java.lang.Object getInputSource() -> getInputSource
    void setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload) -> setRequestPayloadOnError
    void setRequestPayloadOnError(byte[],java.lang.String) -> setRequestPayloadOnError
    void setRequestPayloadOnError(java.lang.String) -> setRequestPayloadOnError
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean requiresCustomCodec() -> requiresCustomCodec
    boolean canParseAsync() -> canParseAsync
    com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    com.fasterxml.jackson.core.Version version() -> version
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation currentLocation() -> currentLocation
    com.fasterxml.jackson.core.JsonLocation currentTokenLocation() -> currentTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    java.lang.Object currentValue() -> currentValue
    void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    com.fasterxml.jackson.core.JsonParser configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    int getFormatFeatures() -> getFormatFeatures
    com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextFieldName() -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void finishToken() -> finishToken
    com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    int currentTokenId() -> currentTokenId
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    int getCurrentTokenId() -> getCurrentTokenId
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    boolean isNaN() -> isNaN
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String currentName() -> currentName
    java.lang.String getText() -> getText
    int getText(java.io.Writer) -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Number getNumberValueExact() -> getNumberValueExact
    java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int readBinaryValue(java.io.OutputStream) -> readBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    boolean canReadObjectId() -> canReadObjectId
    boolean canReadTypeId() -> canReadTypeId
    java.lang.Object getObjectId() -> getObjectId
    java.lang.Object getTypeId() -> getTypeId
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(com.fasterxml.jackson.core.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(com.fasterxml.jackson.core.type.TypeReference) -> readValuesAs
    com.fasterxml.jackson.core.TreeNode readValueAsTree() -> readValueAsTree
    com.fasterxml.jackson.core.ObjectCodec _codec() -> _codec
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> _constructError
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String) -> _constructReadException
    com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object) -> _constructReadException
    com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object,java.lang.Object) -> _constructReadException
    com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> _constructReadException
    com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Throwable) -> _constructReadException
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$Feature -> com.fasterxml.jackson.core.JsonParser$Feature:
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS -> ALLOW_YAML_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS -> ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS -> ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS -> ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES -> ALLOW_MISSING_VALUES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA -> ALLOW_TRAILING_COMMA
    com.fasterxml.jackson.core.JsonParser$Feature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.JsonParser$Feature IGNORE_UNDEFINED -> IGNORE_UNDEFINED
    com.fasterxml.jackson.core.JsonParser$Feature INCLUDE_SOURCE_IN_LOCATION -> INCLUDE_SOURCE_IN_LOCATION
    com.fasterxml.jackson.core.JsonParser$Feature USE_FAST_DOUBLE_PARSER -> USE_FAST_DOUBLE_PARSER
    com.fasterxml.jackson.core.JsonParser$Feature USE_FAST_BIG_NUMBER_PARSER -> USE_FAST_BIG_NUMBER_PARSER
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$NumberType -> com.fasterxml.jackson.core.JsonParser$NumberType:
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> INT
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> LONG
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> FLOAT
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> DOUBLE
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonPointer -> com.fasterxml.jackson.core.JsonPointer:
    long serialVersionUID -> serialVersionUID
    char SEPARATOR -> SEPARATOR
    com.fasterxml.jackson.core.JsonPointer EMPTY -> EMPTY
    com.fasterxml.jackson.core.JsonPointer _nextSegment -> _nextSegment
    com.fasterxml.jackson.core.JsonPointer _head -> _head
    java.lang.String _asString -> _asString
    int _asStringOffset -> _asStringOffset
    java.lang.String _matchingPropertyName -> _matchingPropertyName
    int _matchingElementIndex -> _matchingElementIndex
    int _hashCode -> _hashCode
    void <init>() -> <init>
    void <init>(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer) -> <init>
    void <init>(java.lang.String,int,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer) -> <init>
    com.fasterxml.jackson.core.JsonPointer compile(java.lang.String) -> compile
    com.fasterxml.jackson.core.JsonPointer valueOf(java.lang.String) -> valueOf
    com.fasterxml.jackson.core.JsonPointer empty() -> empty
    com.fasterxml.jackson.core.JsonPointer forPath(com.fasterxml.jackson.core.JsonStreamContext,boolean) -> forPath
    void _appendEscaped(java.lang.StringBuilder,java.lang.String) -> _appendEscaped
    int length() -> length
    boolean matches() -> matches
    java.lang.String getMatchingProperty() -> getMatchingProperty
    int getMatchingIndex() -> getMatchingIndex
    boolean mayMatchProperty() -> mayMatchProperty
    boolean mayMatchElement() -> mayMatchElement
    com.fasterxml.jackson.core.JsonPointer last() -> last
    com.fasterxml.jackson.core.JsonPointer append(com.fasterxml.jackson.core.JsonPointer) -> append
    com.fasterxml.jackson.core.JsonPointer appendProperty(java.lang.String) -> appendProperty
    com.fasterxml.jackson.core.JsonPointer appendIndex(int) -> appendIndex
    boolean matchesProperty(java.lang.String) -> matchesProperty
    com.fasterxml.jackson.core.JsonPointer matchProperty(java.lang.String) -> matchProperty
    boolean matchesElement(int) -> matchesElement
    com.fasterxml.jackson.core.JsonPointer matchElement(int) -> matchElement
    com.fasterxml.jackson.core.JsonPointer tail() -> tail
    com.fasterxml.jackson.core.JsonPointer head() -> head
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean _compare(java.lang.String,int,java.lang.String,int) -> _compare
    int _parseIndex(java.lang.String) -> _parseIndex
    com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String) -> _parseTail
    com.fasterxml.jackson.core.JsonPointer _buildPath(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer$PointerParent) -> _buildPath
    int _extractEscapedSegment(java.lang.String,int,int,java.lang.StringBuilder) -> _extractEscapedSegment
    void _appendEscape(java.lang.StringBuilder,char) -> _appendEscape
    com.fasterxml.jackson.core.JsonPointer _constructHead() -> _constructHead
    com.fasterxml.jackson.core.JsonPointer _constructHead(int,com.fasterxml.jackson.core.JsonPointer) -> _constructHead
    java.lang.Object writeReplace() -> writeReplace
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonPointer$PointerParent -> com.fasterxml.jackson.core.JsonPointer$PointerParent:
    com.fasterxml.jackson.core.JsonPointer$PointerParent parent -> parent
    int fullPathOffset -> fullPathOffset
    java.lang.String segment -> segment
    void <init>(com.fasterxml.jackson.core.JsonPointer$PointerParent,int,java.lang.String) -> <init>
com.fasterxml.jackson.core.JsonPointer$PointerSegment -> com.fasterxml.jackson.core.JsonPointer$PointerSegment:
    com.fasterxml.jackson.core.JsonPointer$PointerSegment next -> next
    java.lang.String property -> property
    int index -> index
    int pathOffset -> pathOffset
    com.fasterxml.jackson.core.JsonPointer$PointerSegment prev -> prev
    void <init>(com.fasterxml.jackson.core.JsonPointer$PointerSegment,java.lang.String,int) -> <init>
com.fasterxml.jackson.core.JsonPointer$Serialization -> com.fasterxml.jackson.core.JsonPointer$Serialization:
    java.lang.String _fullPath -> _fullPath
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.core.JsonProcessingException -> com.fasterxml.jackson.core.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    void clearLocation() -> clearLocation
    java.lang.String getOriginalMessage() -> getOriginalMessage
    java.lang.Object getProcessor() -> getProcessor
    java.lang.String getMessageSuffix() -> getMessageSuffix
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> com.fasterxml.jackson.core.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    int _nestingDepth -> _nestingDepth
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    void <init>(int,int) -> <init>
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    int getNestingDepth() -> getNestingDepth
    java.lang.String getTypeDesc() -> getTypeDesc
    java.lang.String typeDesc() -> typeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    boolean hasCurrentIndex() -> hasCurrentIndex
    boolean hasPathSegment() -> hasPathSegment
    java.lang.String getCurrentName() -> getCurrentName
    boolean hasCurrentName() -> hasCurrentName
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonPointer pathAsPointer() -> pathAsPointer
    com.fasterxml.jackson.core.JsonPointer pathAsPointer(boolean) -> pathAsPointer
    com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference) -> startLocation
    com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonToken -> com.fasterxml.jackson.core.JsonToken:
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> START_OBJECT
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> END_OBJECT
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> START_ARRAY
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> END_ARRAY
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> FIELD_NAME
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> VALUE_STRING
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    int _id -> _id
    boolean _isStructStart -> _isStructStart
    boolean _isStructEnd -> _isStructEnd
    boolean _isNumber -> _isNumber
    boolean _isBoolean -> _isBoolean
    boolean _isScalar -> _isScalar
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.JsonToken[] values() -> values
    com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    int id() -> id
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isStructStart() -> isStructStart
    boolean isStructEnd() -> isStructEnd
    boolean isScalarValue() -> isScalarValue
    boolean isBoolean() -> isBoolean
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonTokenId -> com.fasterxml.jackson.core.JsonTokenId:
    int ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    int ID_NO_TOKEN -> ID_NO_TOKEN
    int ID_START_OBJECT -> ID_START_OBJECT
    int ID_END_OBJECT -> ID_END_OBJECT
    int ID_START_ARRAY -> ID_START_ARRAY
    int ID_END_ARRAY -> ID_END_ARRAY
    int ID_FIELD_NAME -> ID_FIELD_NAME
    int ID_STRING -> ID_STRING
    int ID_NUMBER_INT -> ID_NUMBER_INT
    int ID_NUMBER_FLOAT -> ID_NUMBER_FLOAT
    int ID_TRUE -> ID_TRUE
    int ID_FALSE -> ID_FALSE
    int ID_NULL -> ID_NULL
    int ID_EMBEDDED_OBJECT -> ID_EMBEDDED_OBJECT
com.fasterxml.jackson.core.JsonpCharacterEscapes -> com.fasterxml.jackson.core.JsonpCharacterEscapes:
    long serialVersionUID -> serialVersionUID
    int[] asciiEscapes -> asciiEscapes
    com.fasterxml.jackson.core.io.SerializedString escapeFor2028 -> escapeFor2028
    com.fasterxml.jackson.core.io.SerializedString escapeFor2029 -> escapeFor2029
    com.fasterxml.jackson.core.JsonpCharacterEscapes sInstance -> sInstance
    void <init>() -> <init>
    com.fasterxml.jackson.core.JsonpCharacterEscapes instance() -> instance
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.ObjectCodec -> com.fasterxml.jackson.core.ObjectCodec:
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
com.fasterxml.jackson.core.PrettyPrinter -> com.fasterxml.jackson.core.PrettyPrinter:
    com.fasterxml.jackson.core.util.Separators DEFAULT_SEPARATORS -> DEFAULT_SEPARATORS
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.SerializableString -> com.fasterxml.jackson.core.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
com.fasterxml.jackson.core.StreamReadCapability -> com.fasterxml.jackson.core.StreamReadCapability:
    com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES -> DUPLICATE_PROPERTIES
    com.fasterxml.jackson.core.StreamReadCapability SCALARS_AS_OBJECTS -> SCALARS_AS_OBJECTS
    com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS -> UNTYPED_SCALARS
    com.fasterxml.jackson.core.StreamReadCapability EXACT_FLOATS -> EXACT_FLOATS
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.StreamReadCapability[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.StreamReadCapability[] values() -> values
    com.fasterxml.jackson.core.StreamReadCapability valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamReadConstraints -> com.fasterxml.jackson.core.StreamReadConstraints:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_MAX_DEPTH -> DEFAULT_MAX_DEPTH
    int DEFAULT_MAX_NUM_LEN -> DEFAULT_MAX_NUM_LEN
    int DEFAULT_MAX_STRING_LEN -> DEFAULT_MAX_STRING_LEN
    int MAX_BIGINT_SCALE_MAGNITUDE -> MAX_BIGINT_SCALE_MAGNITUDE
    int _maxNestingDepth -> _maxNestingDepth
    int _maxNumLen -> _maxNumLen
    int _maxStringLen -> _maxStringLen
    com.fasterxml.jackson.core.StreamReadConstraints DEFAULT -> DEFAULT
    void overrideDefaultStreamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> overrideDefaultStreamReadConstraints
    void <init>(int,int,int) -> <init>
    com.fasterxml.jackson.core.StreamReadConstraints$Builder builder() -> builder
    com.fasterxml.jackson.core.StreamReadConstraints defaults() -> defaults
    com.fasterxml.jackson.core.StreamReadConstraints$Builder rebuild() -> rebuild
    int getMaxNestingDepth() -> getMaxNestingDepth
    int getMaxNumberLength() -> getMaxNumberLength
    int getMaxStringLength() -> getMaxStringLength
    void validateNestingDepth(int) -> validateNestingDepth
    void validateFPLength(int) -> validateFPLength
    void validateIntegerLength(int) -> validateIntegerLength
    void validateStringLength(int) -> validateStringLength
    void validateBigIntegerScale(int) -> validateBigIntegerScale
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamReadConstraints$Builder -> com.fasterxml.jackson.core.StreamReadConstraints$Builder:
    int maxNestingDepth -> maxNestingDepth
    int maxNumLen -> maxNumLen
    int maxStringLen -> maxStringLen
    com.fasterxml.jackson.core.StreamReadConstraints$Builder maxNestingDepth(int) -> maxNestingDepth
    com.fasterxml.jackson.core.StreamReadConstraints$Builder maxNumberLength(int) -> maxNumberLength
    com.fasterxml.jackson.core.StreamReadConstraints$Builder maxStringLength(int) -> maxStringLength
    void <init>() -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(com.fasterxml.jackson.core.StreamReadConstraints) -> <init>
    com.fasterxml.jackson.core.StreamReadConstraints build() -> build
com.fasterxml.jackson.core.StreamReadFeature -> com.fasterxml.jackson.core.StreamReadFeature:
    com.fasterxml.jackson.core.StreamReadFeature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    com.fasterxml.jackson.core.StreamReadFeature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.StreamReadFeature IGNORE_UNDEFINED -> IGNORE_UNDEFINED
    com.fasterxml.jackson.core.StreamReadFeature INCLUDE_SOURCE_IN_LOCATION -> INCLUDE_SOURCE_IN_LOCATION
    com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER -> USE_FAST_DOUBLE_PARSER
    com.fasterxml.jackson.core.StreamReadFeature USE_FAST_BIG_NUMBER_PARSER -> USE_FAST_BIG_NUMBER_PARSER
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonParser$Feature _mappedFeature -> _mappedFeature
    com.fasterxml.jackson.core.StreamReadFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.StreamReadFeature[] values() -> values
    com.fasterxml.jackson.core.StreamReadFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonParser$Feature) -> <init>
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    com.fasterxml.jackson.core.JsonParser$Feature mappedFeature() -> mappedFeature
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamWriteCapability -> com.fasterxml.jackson.core.StreamWriteCapability:
    com.fasterxml.jackson.core.StreamWriteCapability CAN_WRITE_BINARY_NATIVELY -> CAN_WRITE_BINARY_NATIVELY
    com.fasterxml.jackson.core.StreamWriteCapability CAN_WRITE_FORMATTED_NUMBERS -> CAN_WRITE_FORMATTED_NUMBERS
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.StreamWriteCapability[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.StreamWriteCapability[] values() -> values
    com.fasterxml.jackson.core.StreamWriteCapability valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamWriteFeature -> com.fasterxml.jackson.core.StreamWriteFeature:
    com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_CONTENT -> AUTO_CLOSE_CONTENT
    com.fasterxml.jackson.core.StreamWriteFeature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    com.fasterxml.jackson.core.StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN -> WRITE_BIGDECIMAL_AS_PLAIN
    com.fasterxml.jackson.core.StreamWriteFeature STRICT_DUPLICATE_DETECTION -> STRICT_DUPLICATE_DETECTION
    com.fasterxml.jackson.core.StreamWriteFeature IGNORE_UNKNOWN -> IGNORE_UNKNOWN
    com.fasterxml.jackson.core.StreamWriteFeature USE_FAST_DOUBLE_WRITER -> USE_FAST_DOUBLE_WRITER
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature -> _mappedFeature
    com.fasterxml.jackson.core.StreamWriteFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.StreamWriteFeature[] values() -> values
    com.fasterxml.jackson.core.StreamWriteFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature) -> <init>
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature() -> mappedFeature
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.TSFBuilder -> com.fasterxml.jackson.core.TSFBuilder:
    int DEFAULT_FACTORY_FEATURE_FLAGS -> DEFAULT_FACTORY_FEATURE_FLAGS
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    int _factoryFeatures -> _factoryFeatures
    int _streamReadFeatures -> _streamReadFeatures
    int _streamWriteFeatures -> _streamWriteFeatures
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> _inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> _outputDecorator
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    void <init>(int,int,int) -> <init>
    int factoryFeaturesMask() -> factoryFeaturesMask
    int streamReadFeatures() -> streamReadFeatures
    int streamWriteFeatures() -> streamWriteFeatures
    com.fasterxml.jackson.core.io.InputDecorator inputDecorator() -> inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator outputDecorator() -> outputDecorator
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamReadFeature) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamReadFeature,com.fasterxml.jackson.core.StreamReadFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamReadFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamReadFeature,com.fasterxml.jackson.core.StreamReadFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.StreamReadFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature,com.fasterxml.jackson.core.StreamWriteFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature,com.fasterxml.jackson.core.StreamWriteFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder _failNonJSON(java.lang.Object) -> _failNonJSON
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    com.fasterxml.jackson.core.TSFBuilder inputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> inputDecorator
    com.fasterxml.jackson.core.TSFBuilder outputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> outputDecorator
    com.fasterxml.jackson.core.TSFBuilder streamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> streamReadConstraints
    com.fasterxml.jackson.core.JsonFactory build() -> build
    com.fasterxml.jackson.core.TSFBuilder _this() -> _this
    void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature) -> _legacyEnable
    void _legacyDisable(com.fasterxml.jackson.core.JsonParser$Feature) -> _legacyDisable
    void _legacyEnable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> _legacyEnable
    void _legacyDisable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> _legacyDisable
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.TokenStreamFactory -> com.fasterxml.jackson.core.TokenStreamFactory:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    boolean requiresPropertyOrdering() -> requiresPropertyOrdering
    boolean canHandleBinaryNatively() -> canHandleBinaryNatively
    boolean canParseAsync() -> canParseAsync
    java.lang.Class getFormatReadFeatureType() -> getFormatReadFeatureType
    java.lang.Class getFormatWriteFeatureType() -> getFormatWriteFeatureType
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    java.lang.String getFormatName() -> getFormatName
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    int getParserFeatures() -> getParserFeatures
    int getGeneratorFeatures() -> getGeneratorFeatures
    int getFormatParserFeatures() -> getFormatParserFeatures
    int getFormatGeneratorFeatures() -> getFormatGeneratorFeatures
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() -> createNonBlockingByteBufferParser
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput) -> _createDataOutputWrapper
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
    java.io.InputStream _fileInputStream(java.io.File) -> _fileInputStream
    java.io.OutputStream _fileOutputStream(java.io.File) -> _fileOutputStream
    void _checkRangeBoundsForByteArray(byte[],int,int) -> _checkRangeBoundsForByteArray
    void _checkRangeBoundsForCharArray(char[],int,int) -> _checkRangeBoundsForCharArray
    java.lang.Object _reportRangeError(java.lang.String) -> _reportRangeError
com.fasterxml.jackson.core.TreeCodec -> com.fasterxml.jackson.core.TreeCodec:
    void <init>() -> <init>
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
    com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
com.fasterxml.jackson.core.TreeNode -> com.fasterxml.jackson.core.TreeNode:
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    int size() -> size
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.core.TreeNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    com.fasterxml.jackson.core.TreeNode at(java.lang.String) -> at
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    com.fasterxml.jackson.core.JsonParser traverse(com.fasterxml.jackson.core.ObjectCodec) -> traverse
com.fasterxml.jackson.core.Version -> com.fasterxml.jackson.core.Version:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> UNKNOWN_VERSION
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _groupId -> _groupId
    java.lang.String _artifactId -> _artifactId
    java.lang.String _snapshotInfo -> _snapshotInfo
    void <init>(int,int,int,java.lang.String) -> <init>
    void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    com.fasterxml.jackson.core.Version unknownVersion() -> unknownVersion
    boolean isUnknownVersion() -> isUnknownVersion
    boolean isSnapshot() -> isSnapshot
    boolean isUknownVersion() -> isUknownVersion
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getArtifactId() -> getArtifactId
    java.lang.String toFullString() -> toFullString
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.fasterxml.jackson.core.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.Versioned -> com.fasterxml.jackson.core.Versioned:
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.core.async.ByteArrayFeeder -> com.fasterxml.jackson.core.async.ByteArrayFeeder:
    void feedInput(byte[],int,int) -> feedInput
com.fasterxml.jackson.core.async.ByteBufferFeeder -> com.fasterxml.jackson.core.async.ByteBufferFeeder:
    void feedInput(java.nio.ByteBuffer) -> feedInput
com.fasterxml.jackson.core.async.NonBlockingInputFeeder -> com.fasterxml.jackson.core.async.NonBlockingInputFeeder:
    boolean needMoreInput() -> needMoreInput
    void endOfInput() -> endOfInput
com.fasterxml.jackson.core.async.package-info -> com.fasterxml.jackson.core.async.package-info:
com.fasterxml.jackson.core.base.GeneratorBase -> com.fasterxml.jackson.core.base.GeneratorBase:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int DERIVED_FEATURES_MASK -> DERIVED_FEATURES_MASK
    java.lang.String WRITE_BINARY -> WRITE_BINARY
    java.lang.String WRITE_BOOLEAN -> WRITE_BOOLEAN
    java.lang.String WRITE_NULL -> WRITE_NULL
    java.lang.String WRITE_NUMBER -> WRITE_NUMBER
    java.lang.String WRITE_RAW -> WRITE_RAW
    java.lang.String WRITE_STRING -> WRITE_STRING
    int MAX_BIG_DECIMAL_SCALE -> MAX_BIG_DECIMAL_SCALE
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    void <init>(int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    void <init>(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.json.JsonWriteContext) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter() -> _constructDefaultPrettyPrinter
    java.lang.String _asString(java.math.BigDecimal) -> _asString
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _checkRangeBoundsForByteArray(byte[],int,int) -> _checkRangeBoundsForByteArray
    void _checkRangeBoundsForCharArray(char[],int,int) -> _checkRangeBoundsForCharArray
    void _checkRangeBoundsForString(java.lang.String,int,int) -> _checkRangeBoundsForString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserBase -> com.fasterxml.jackson.core.base.ParserBase:
    com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_READ_CAPABILITIES -> JSON_READ_CAPABILITIES
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> _parsingContext
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    float _numberFloat -> _numberFloat
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    java.lang.String _numberString -> _numberString
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    void <init>(com.fasterxml.jackson.core.io.IOContext,int) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    int _eofAsNextChar() -> _eofAsNextChar
    com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> reset
    com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> resetInt
    com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    boolean isNaN() -> isNaN
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Number getNumberValueExact() -> getNumberValueExact
    java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    void _parseNumericValue(int) -> _parseNumericValue
    int _parseIntValue() -> _parseIntValue
    void _parseSlowFloat(int) -> _parseSlowFloat
    void _parseSlowInt(int) -> _parseSlowInt
    void _reportTooLongIntegral(int,java.lang.String) -> _reportTooLongIntegral
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToFloat() -> convertNumberToFloat
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    java.math.BigInteger _convertBigDecimalToBigInteger(java.math.BigDecimal) -> _convertBigDecimalToBigInteger
    java.math.BigInteger _getBigInteger() -> _getBigInteger
    java.math.BigDecimal _getBigDecimal() -> _getBigDecimal
    double _getNumberDouble() -> _getNumberDouble
    float _getNumberFloat() -> _getNumberFloat
    void createChildArrayContext(int,int) -> createChildArrayContext
    void createChildObjectContext(int,int) -> createChildObjectContext
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    java.lang.String _validJsonTokenList() -> _validJsonTokenList
    java.lang.String _validJsonValueList() -> _validJsonValueList
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    void _handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant) -> _handleBase64MissingPadding
    java.lang.Object _getSourceReference() -> _getSourceReference
    com.fasterxml.jackson.core.io.ContentReference _contentReference() -> _contentReference
    int[] growArrayBy(int[],int) -> growArrayBy
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserMinimalBase -> com.fasterxml.jackson.core.base.ParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_APOS -> INT_APOS
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_ASTERISK -> INT_ASTERISK
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_HASH -> INT_HASH
    int INT_0 -> INT_0
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_PERIOD -> INT_PERIOD
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    byte[] NO_BYTES -> NO_BYTES
    int[] NO_INTS -> NO_INTS
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    int NR_FLOAT -> NR_FLOAT
    java.math.BigInteger BI_MIN_INT -> BI_MIN_INT
    java.math.BigInteger BI_MAX_INT -> BI_MAX_INT
    java.math.BigInteger BI_MIN_LONG -> BI_MIN_LONG
    java.math.BigInteger BI_MAX_LONG -> BI_MAX_LONG
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    long MIN_INT_L -> MIN_INT_L
    long MAX_INT_L -> MAX_INT_L
    double MIN_LONG_D -> MIN_LONG_D
    double MAX_LONG_D -> MAX_LONG_D
    double MIN_INT_D -> MIN_INT_D
    double MAX_INT_D -> MAX_INT_D
    int MAX_ERROR_TOKEN_LENGTH -> MAX_ERROR_TOKEN_LENGTH
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    void <init>() -> <init>
    void <init>(int) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    int currentTokenId() -> currentTokenId
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    int getCurrentTokenId() -> getCurrentTokenId
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    java.lang.Object _reportUnexpectedNumberChar(int,java.lang.String) -> _reportUnexpectedNumberChar
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowInt(java.lang.String) -> reportOverflowInt
    void reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    void reportOverflowLong(java.lang.String) -> reportOverflowLong
    void reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> reportOverflowLong
    void _reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class) -> _reportInputCoercion
    java.lang.String _longIntegerDesc(java.lang.String) -> _longIntegerDesc
    java.lang.String _longNumberDesc(java.lang.String) -> _longNumberDesc
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOFInValue
    void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportMissingRootWS(int) -> _reportMissingRootWS
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _reportError(java.lang.String,java.lang.Object) -> _reportError
    void _reportError(java.lang.String,java.lang.Object,java.lang.Object) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
    byte[] _asciiBytes(java.lang.String) -> _asciiBytes
    java.lang.String _ascii(byte[]) -> _ascii
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.package-info -> com.fasterxml.jackson.core.base.package-info:
com.fasterxml.jackson.core.exc.InputCoercionException -> com.fasterxml.jackson.core.exc.InputCoercionException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonToken _inputType -> _inputType
    java.lang.Class _targetType -> _targetType
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class) -> <init>
    com.fasterxml.jackson.core.exc.InputCoercionException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    com.fasterxml.jackson.core.exc.InputCoercionException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    com.fasterxml.jackson.core.JsonToken getInputType() -> getInputType
    java.lang.Class getTargetType() -> getTargetType
    com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
com.fasterxml.jackson.core.exc.StreamConstraintsException -> com.fasterxml.jackson.core.exc.StreamConstraintsException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
com.fasterxml.jackson.core.exc.StreamReadException -> com.fasterxml.jackson.core.exc.StreamReadException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonParser _processor -> _processor
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> _requestPayload
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    com.fasterxml.jackson.core.JsonParser getProcessor() -> getProcessor
    com.fasterxml.jackson.core.util.RequestPayload getRequestPayload() -> getRequestPayload
    java.lang.String getRequestPayloadAsString() -> getRequestPayloadAsString
    java.lang.String getMessage() -> getMessage
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.exc.StreamWriteException -> com.fasterxml.jackson.core.exc.StreamWriteException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonGenerator _processor -> _processor
    void <init>(java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    com.fasterxml.jackson.core.exc.StreamWriteException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    com.fasterxml.jackson.core.JsonGenerator getProcessor() -> getProcessor
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.exc.package-info -> com.fasterxml.jackson.core.exc.package-info:
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate -> com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate:
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> rootFilter
    boolean _allowMultipleMatches -> _allowMultipleMatches
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion _inclusion -> _inclusion
    com.fasterxml.jackson.core.filter.TokenFilterContext _filterContext -> _filterContext
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> _itemFilter
    int _matchCount -> _matchCount
    void <init>(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.filter.TokenFilter,com.fasterxml.jackson.core.filter.TokenFilter$Inclusion,boolean) -> <init>
    com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    com.fasterxml.jackson.core.JsonStreamContext getFilterContext() -> getFilterContext
    int getMatchCount() -> getMatchCount
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void writeStartArray() -> writeStartArray
    void writeStartArray(int) -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeFieldId(long) -> writeFieldId
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeNumber(char[],int,int) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeOmittedField(java.lang.String) -> writeOmittedField
    void writeObjectId(java.lang.Object) -> writeObjectId
    void writeObjectRef(java.lang.Object) -> writeObjectRef
    void writeTypeId(java.lang.Object) -> writeTypeId
    void _checkParentPath() -> _checkParentPath
    void _checkParentPath(boolean) -> _checkParentPath
    void _checkPropertyParentPath() -> _checkPropertyParentPath
    boolean _checkBinaryWrite() -> _checkBinaryWrite
    boolean _checkRawValueWrite() -> _checkRawValueWrite
com.fasterxml.jackson.core.filter.FilteringParserDelegate -> com.fasterxml.jackson.core.filter.FilteringParserDelegate:
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> rootFilter
    boolean _allowMultipleMatches -> _allowMultipleMatches
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion _inclusion -> _inclusion
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    com.fasterxml.jackson.core.filter.TokenFilterContext _headContext -> _headContext
    com.fasterxml.jackson.core.filter.TokenFilterContext _exposedContext -> _exposedContext
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> _itemFilter
    int _matchCount -> _matchCount
    void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,com.fasterxml.jackson.core.filter.TokenFilter$Inclusion,boolean) -> <init>
    com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    int getMatchCount() -> getMatchCount
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    int getCurrentTokenId() -> getCurrentTokenId
    int currentTokenId() -> currentTokenId
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String currentName() -> currentName
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextToken2() -> _nextToken2
    com.fasterxml.jackson.core.JsonToken _nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextTokenWithBuffering
    com.fasterxml.jackson.core.JsonToken _nextBuffered(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextBuffered
    boolean _verifyAllowedMatches() -> _verifyAllowedMatches
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    boolean hasTextCharacters() -> hasTextCharacters
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    boolean getBooleanValue() -> getBooleanValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonStreamContext _filterContext() -> _filterContext
com.fasterxml.jackson.core.filter.JsonPointerBasedFilter -> com.fasterxml.jackson.core.filter.JsonPointerBasedFilter:
    com.fasterxml.jackson.core.JsonPointer _pathToMatch -> _pathToMatch
    void <init>(java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonPointer) -> <init>
    com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> includeElement
    com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> includeProperty
    com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> filterStartArray
    com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> filterStartObject
    boolean _includeScalar() -> _includeScalar
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.filter.TokenFilter -> com.fasterxml.jackson.core.filter.TokenFilter:
    com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL -> INCLUDE_ALL
    void <init>() -> <init>
    com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> filterStartObject
    com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> filterStartArray
    void filterFinishObject() -> filterFinishObject
    void filterFinishArray() -> filterFinishArray
    com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> includeProperty
    com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> includeElement
    com.fasterxml.jackson.core.filter.TokenFilter includeRootValue(int) -> includeRootValue
    boolean includeValue(com.fasterxml.jackson.core.JsonParser) -> includeValue
    boolean includeBoolean(boolean) -> includeBoolean
    boolean includeNull() -> includeNull
    boolean includeString(java.lang.String) -> includeString
    boolean includeString(java.io.Reader,int) -> includeString
    boolean includeNumber(int) -> includeNumber
    boolean includeNumber(long) -> includeNumber
    boolean includeNumber(float) -> includeNumber
    boolean includeNumber(double) -> includeNumber
    boolean includeNumber(java.math.BigDecimal) -> includeNumber
    boolean includeNumber(java.math.BigInteger) -> includeNumber
    boolean includeBinary() -> includeBinary
    boolean includeRawValue() -> includeRawValue
    boolean includeEmbeddedValue(java.lang.Object) -> includeEmbeddedValue
    boolean includeEmptyArray(boolean) -> includeEmptyArray
    boolean includeEmptyObject(boolean) -> includeEmptyObject
    java.lang.String toString() -> toString
    boolean _includeScalar() -> _includeScalar
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilter$Inclusion -> com.fasterxml.jackson.core.filter.TokenFilter$Inclusion:
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion ONLY_INCLUDE_ALL -> ONLY_INCLUDE_ALL
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion INCLUDE_ALL_AND_PATH -> INCLUDE_ALL_AND_PATH
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion INCLUDE_NON_NULL -> INCLUDE_NON_NULL
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion[] values() -> values
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilterContext -> com.fasterxml.jackson.core.filter.TokenFilterContext:
    com.fasterxml.jackson.core.filter.TokenFilterContext _parent -> _parent
    com.fasterxml.jackson.core.filter.TokenFilterContext _child -> _child
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> _filter
    boolean _startHandled -> _startHandled
    boolean _needToHandleName -> _needToHandleName
    void <init>(int,com.fasterxml.jackson.core.filter.TokenFilterContext,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> <init>
    com.fasterxml.jackson.core.filter.TokenFilterContext reset(int,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> reset
    com.fasterxml.jackson.core.filter.TokenFilterContext createRootContext(com.fasterxml.jackson.core.filter.TokenFilter) -> createRootContext
    com.fasterxml.jackson.core.filter.TokenFilterContext createChildArrayContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildArrayContext
    com.fasterxml.jackson.core.filter.TokenFilterContext createChildObjectContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildObjectContext
    com.fasterxml.jackson.core.filter.TokenFilter setFieldName(java.lang.String) -> setFieldName
    com.fasterxml.jackson.core.filter.TokenFilter checkValue(com.fasterxml.jackson.core.filter.TokenFilter) -> checkValue
    void ensureFieldNameWritten(com.fasterxml.jackson.core.JsonGenerator) -> ensureFieldNameWritten
    void writePath(com.fasterxml.jackson.core.JsonGenerator) -> writePath
    void _writePath(com.fasterxml.jackson.core.JsonGenerator) -> _writePath
    com.fasterxml.jackson.core.filter.TokenFilterContext closeArray(com.fasterxml.jackson.core.JsonGenerator) -> closeArray
    com.fasterxml.jackson.core.filter.TokenFilterContext closeObject(com.fasterxml.jackson.core.JsonGenerator) -> closeObject
    void skipParentChecks() -> skipParentChecks
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.filter.TokenFilterContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    boolean hasCurrentName() -> hasCurrentName
    com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    boolean isStartHandled() -> isStartHandled
    com.fasterxml.jackson.core.JsonToken nextTokenToRead() -> nextTokenToRead
    com.fasterxml.jackson.core.filter.TokenFilterContext findChildOf(com.fasterxml.jackson.core.filter.TokenFilterContext) -> findChildOf
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.format.DataFormatDetector -> com.fasterxml.jackson.core.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    com.fasterxml.jackson.core.JsonFactory[] _detectors -> _detectors
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    void <init>(com.fasterxml.jackson.core.JsonFactory[]) -> <init>
    void <init>(java.util.Collection) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[],int,int) -> findFormat
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std) -> _findFormat
com.fasterxml.jackson.core.format.DataFormatMatcher -> com.fasterxml.jackson.core.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.core.JsonFactory _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    boolean hasMatch() -> hasMatch
    com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    com.fasterxml.jackson.core.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.core.format.InputAccessor -> com.fasterxml.jackson.core.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
com.fasterxml.jackson.core.format.InputAccessor$Std -> com.fasterxml.jackson.core.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedStart -> _bufferedStart
    int _bufferedEnd -> _bufferedEnd
    int _ptr -> _ptr
    void <init>(java.io.InputStream,byte[]) -> <init>
    void <init>(byte[]) -> <init>
    void <init>(byte[],int,int) -> <init>
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.core.format.MatchStrength -> com.fasterxml.jackson.core.format.MatchStrength:
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> NO_MATCH
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> FULL_MATCH
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.format.package-info -> com.fasterxml.jackson.core.format.package-info:
com.fasterxml.jackson.core.io.BigDecimalParser -> com.fasterxml.jackson.core.io.BigDecimalParser:
    int MAX_CHARS_TO_REPORT -> MAX_CHARS_TO_REPORT
    void <init>() -> <init>
    java.math.BigDecimal parse(java.lang.String) -> parse
    java.math.BigDecimal parse(char[],int,int) -> parse
    java.math.BigDecimal parse(char[]) -> parse
    java.math.BigDecimal parseWithFastParser(java.lang.String) -> parseWithFastParser
    java.math.BigDecimal parseWithFastParser(char[],int,int) -> parseWithFastParser
    java.math.BigDecimal parseBigDecimal(char[],int,int,int) -> parseBigDecimal
    int adjustScale(int,long) -> adjustScale
    java.math.BigDecimal toBigDecimalRec(char[],int,int,int,int) -> toBigDecimalRec
com.fasterxml.jackson.core.io.BigIntegerParser -> com.fasterxml.jackson.core.io.BigIntegerParser:
    void <init>() -> <init>
    java.math.BigInteger parseWithFastParser(java.lang.String) -> parseWithFastParser
    java.math.BigInteger parseWithFastParser(java.lang.String,int) -> parseWithFastParser
com.fasterxml.jackson.core.io.CharTypes -> com.fasterxml.jackson.core.io.CharTypes:
    char[] HC -> HC
    char[] HClower -> HClower
    byte[] HB -> HB
    byte[] HBlower -> HBlower
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUTF8 -> sInputCodesUTF8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sInputCodesWS -> sInputCodesWS
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    void <init>() -> <init>
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] getInputCodeWS() -> getInputCodeWS
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int[] get7BitOutputEscapes(int) -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    char hexToChar(int) -> hexToChar
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    char[] copyHexChars(boolean) -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
    byte[] copyHexBytes(boolean) -> copyHexBytes
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharTypes$AltEscapes -> com.fasterxml.jackson.core.io.CharTypes$AltEscapes:
    com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance -> instance
    int[][] _altEscapes -> _altEscapes
    void <init>() -> <init>
    int[] escapesFor(int) -> escapesFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharacterEscapes -> com.fasterxml.jackson.core.io.CharacterEscapes:
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    void <init>() -> <init>
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
com.fasterxml.jackson.core.io.ContentReference -> com.fasterxml.jackson.core.io.ContentReference:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.io.ContentReference UNKNOWN_CONTENT -> UNKNOWN_CONTENT
    int DEFAULT_MAX_CONTENT_SNIPPET -> DEFAULT_MAX_CONTENT_SNIPPET
    java.lang.Object _rawContent -> _rawContent
    int _offset -> _offset
    int _length -> _length
    boolean _isContentTextual -> _isContentTextual
    void <init>(boolean,java.lang.Object) -> <init>
    void <init>(boolean,java.lang.Object,int,int) -> <init>
    com.fasterxml.jackson.core.io.ContentReference unknown() -> unknown
    com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object) -> construct
    com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object,int,int) -> construct
    com.fasterxml.jackson.core.io.ContentReference rawReference(boolean,java.lang.Object) -> rawReference
    com.fasterxml.jackson.core.io.ContentReference rawReference(java.lang.Object) -> rawReference
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    java.lang.Object readResolve() -> readResolve
    boolean hasTextualContent() -> hasTextualContent
    java.lang.Object getRawContent() -> getRawContent
    int contentOffset() -> contentOffset
    int contentLength() -> contentLength
    int maxContentSnippetLength() -> maxContentSnippetLength
    java.lang.String buildSourceDescription() -> buildSourceDescription
    java.lang.StringBuilder appendSourceDescription(java.lang.StringBuilder) -> appendSourceDescription
    java.lang.String _truncate(java.lang.CharSequence,int[],int) -> _truncate
    java.lang.String _truncate(char[],int[],int) -> _truncate
    java.lang.String _truncate(byte[],int[],int) -> _truncate
    void _truncateOffsets(int[],int) -> _truncateOffsets
    int _append(java.lang.StringBuilder,java.lang.String) -> _append
    boolean _appendEscaped(java.lang.StringBuilder,int) -> _appendEscaped
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.DataOutputAsStream -> com.fasterxml.jackson.core.io.DataOutputAsStream:
    java.io.DataOutput _output -> _output
    void <init>(java.io.DataOutput) -> <init>
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.fasterxml.jackson.core.io.IOContext -> com.fasterxml.jackson.core.io.IOContext:
    com.fasterxml.jackson.core.io.ContentReference _contentReference -> _contentReference
    java.lang.Object _sourceRef -> _sourceRef
    com.fasterxml.jackson.core.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    byte[] _base64Buffer -> _base64Buffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    com.fasterxml.jackson.core.io.IOContext withEncoding(com.fasterxml.jackson.core.JsonEncoding) -> withEncoding
    com.fasterxml.jackson.core.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    com.fasterxml.jackson.core.io.ContentReference contentReference() -> contentReference
    java.lang.Object getSourceReference() -> getSourceReference
    com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    com.fasterxml.jackson.core.util.TextBuffer constructReadConstrainedTextBuffer() -> constructReadConstrainedTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocReadIOBuffer(int) -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    byte[] allocWriteEncodingBuffer(int) -> allocWriteEncodingBuffer
    byte[] allocBase64Buffer() -> allocBase64Buffer
    byte[] allocBase64Buffer(int) -> allocBase64Buffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocTokenBuffer(int) -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseBase64Buffer(byte[]) -> releaseBase64Buffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
    void _verifyAlloc(java.lang.Object) -> _verifyAlloc
    void _verifyRelease(byte[],byte[]) -> _verifyRelease
    void _verifyRelease(char[],char[]) -> _verifyRelease
    java.lang.IllegalArgumentException wrongBuf() -> wrongBuf
com.fasterxml.jackson.core.io.InputDecorator -> com.fasterxml.jackson.core.io.InputDecorator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> decorate
    java.io.DataInput decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput) -> decorate
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> decorate
com.fasterxml.jackson.core.io.JsonEOFException -> com.fasterxml.jackson.core.io.JsonEOFException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonToken _token -> _token
    void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> <init>
    com.fasterxml.jackson.core.JsonToken getTokenBeingDecoded() -> getTokenBeingDecoded
com.fasterxml.jackson.core.io.JsonStringEncoder -> com.fasterxml.jackson.core.io.JsonStringEncoder:
    char[] HC -> HC
    byte[] HB -> HB
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int MIN_CHAR_BUFFER_SIZE -> MIN_CHAR_BUFFER_SIZE
    int MAX_CHAR_BUFFER_SIZE -> MAX_CHAR_BUFFER_SIZE
    int MIN_BYTE_BUFFER_SIZE -> MIN_BYTE_BUFFER_SIZE
    int MAX_BYTE_BUFFER_SIZE -> MAX_BYTE_BUFFER_SIZE
    com.fasterxml.jackson.core.io.JsonStringEncoder instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.core.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    char[] quoteAsString(java.lang.CharSequence) -> quoteAsString
    void quoteAsString(java.lang.CharSequence,java.lang.StringBuilder) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    byte[] encodeAsUTF8(java.lang.CharSequence) -> encodeAsUTF8
    char[] _qbuf() -> _qbuf
    int _appendNumeric(int,char[]) -> _appendNumeric
    int _appendNamed(int,char[]) -> _appendNamed
    int _appendByte(int,int,com.fasterxml.jackson.core.util.ByteArrayBuilder,int) -> _appendByte
    int _convert(int,int) -> _convert
    void _illegal(int) -> _illegal
    int _initialCharBufSize(int) -> _initialCharBufSize
    int _initialByteBufSize(int) -> _initialByteBufSize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.MergedStream -> com.fasterxml.jackson.core.io.MergedStream:
    com.fasterxml.jackson.core.io.IOContext _ctxt -> _ctxt
    java.io.InputStream _in -> _in
    byte[] _b -> _b
    int _ptr -> _ptr
    int _end -> _end
    void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int) -> <init>
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void _free() -> _free
com.fasterxml.jackson.core.io.NumberInput -> com.fasterxml.jackson.core.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    long L_BILLION -> L_BILLION
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    void <init>() -> <init>
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong19(char[],int,boolean) -> parseLong19
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseAsDouble(java.lang.String,double,boolean) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
    double parseDouble(java.lang.String,boolean) -> parseDouble
    float parseFloat(java.lang.String) -> parseFloat
    float parseFloat(java.lang.String,boolean) -> parseFloat
    java.math.BigDecimal parseBigDecimal(java.lang.String) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(java.lang.String,boolean) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[],int,int) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[],int,int,boolean) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[]) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[],boolean) -> parseBigDecimal
    java.math.BigInteger parseBigInteger(java.lang.String) -> parseBigInteger
    java.math.BigInteger parseBigInteger(java.lang.String,boolean) -> parseBigInteger
    java.math.BigInteger parseBigIntegerWithRadix(java.lang.String,int,boolean) -> parseBigIntegerWithRadix
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.NumberOutput -> com.fasterxml.jackson.core.io.NumberOutput:
    int MILLION -> MILLION
    int BILLION -> BILLION
    long BILLION_L -> BILLION_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_INT -> SMALLEST_INT
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    int[] TRIPLET_TO_CHARS -> TRIPLET_TO_CHARS
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    void <init>() -> <init>
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    java.lang.String toString(double,boolean) -> toString
    java.lang.String toString(float) -> toString
    java.lang.String toString(float,boolean) -> toString
    boolean notFinite(double) -> notFinite
    boolean notFinite(float) -> notFinite
    int _outputUptoBillion(int,char[],int) -> _outputUptoBillion
    int _outputFullBillion(int,char[],int) -> _outputFullBillion
    int _outputUptoBillion(int,byte[],int) -> _outputUptoBillion
    int _outputFullBillion(int,byte[],int) -> _outputFullBillion
    int _outputUptoMillion(char[],int,int,int) -> _outputUptoMillion
    int _outputUptoMillion(byte[],int,int,int) -> _outputUptoMillion
    int _leading3(int,char[],int) -> _leading3
    int _leading3(int,byte[],int) -> _leading3
    int _full3(int,char[],int) -> _full3
    int _full3(int,byte[],int) -> _full3
    int _outputSmallestL(char[],int) -> _outputSmallestL
    int _outputSmallestL(byte[],int) -> _outputSmallestL
    int _outputSmallestI(char[],int) -> _outputSmallestI
    int _outputSmallestI(byte[],int) -> _outputSmallestI
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.OutputDecorator -> com.fasterxml.jackson.core.io.OutputDecorator:
    void <init>() -> <init>
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> decorate
com.fasterxml.jackson.core.io.SegmentedStringWriter -> com.fasterxml.jackson.core.io.SegmentedStringWriter:
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> _buffer
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> com.fasterxml.jackson.core.io.SerializedString:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER -> JSON_ENCODER
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String _jdkSerializeValue -> _jdkSerializeValue
    void <init>(java.lang.String) -> <init>
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    java.lang.Object readResolve() -> readResolve
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asQuotedUTF8() -> asQuotedUTF8
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.UTF32Reader -> com.fasterxml.jackson.core.io.UTF32Reader:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NC -> NC
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    boolean _bigEndian -> _bigEndian
    char _surrogate -> _surrogate
    int _charCount -> _charCount
    int _byteCount -> _byteCount
    boolean _managedBuffers -> _managedBuffers
    char[] _tmpBuf -> _tmpBuf
    void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean) -> <init>
    void close() -> close
    int read() -> read
    int read(char[],int,int) -> read
    void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    void reportInvalid(int,int,java.lang.String) -> reportInvalid
    boolean loadMore(int) -> loadMore
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
com.fasterxml.jackson.core.io.UTF8Writer -> com.fasterxml.jackson.core.io.UTF8Writer:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.OutputStream _out -> _out
    byte[] _outBuffer -> _outBuffer
    int _outBufferEnd -> _outBufferEnd
    int _outPtr -> _outPtr
    int _surrogate -> _surrogate
    void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> <init>
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> convertSurrogate
    void illegalSurrogate(int) -> illegalSurrogate
    java.lang.String illegalSurrogateDesc(int) -> illegalSurrogateDesc
    java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser -> com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    long MINIMAL_NINETEEN_DIGIT_INTEGER -> MINIMAL_NINETEEN_DIGIT_INTEGER
    int MAX_EXPONENT_NUMBER -> MAX_EXPONENT_NUMBER
    void <init>() -> <init>
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromByteArray:
    void <init>() -> <init>
    int skipWhitespace(byte[],int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long parseDecFloatLiteral(byte[],int,int,int,boolean,boolean) -> parseDecFloatLiteral
    long parseFloatingPointLiteral(byte[],int,int) -> parseFloatingPointLiteral
    long parseHexFloatingPointLiteral(byte[],int,int,int,boolean) -> parseHexFloatingPointLiteral
    long parseNaNOrInfinity(byte[],int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharArray:
    boolean CONDITIONAL_COMPILATION_PARSE_EIGHT_HEX_DIGITS -> CONDITIONAL_COMPILATION_PARSE_EIGHT_HEX_DIGITS
    void <init>() -> <init>
    int skipWhitespace(char[],int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long parseDecFloatLiteral(char[],int,int,int,boolean,boolean) -> parseDecFloatLiteral
    long parseFloatingPointLiteral(char[],int,int) -> parseFloatingPointLiteral
    long parseHexFloatLiteral(char[],int,int,int,boolean) -> parseHexFloatLiteral
    long parseNaNOrInfinity(char[],int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    long tryToParseEightHexDigits(char[],int) -> tryToParseEightHexDigits
    long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharSequence:
    void <init>() -> <init>
    int skipWhitespace(java.lang.CharSequence,int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long parseDecFloatLiteral(java.lang.CharSequence,int,int,int,boolean,boolean) -> parseDecFloatLiteral
    long parseFloatingPointLiteral(java.lang.CharSequence,int,int) -> parseFloatingPointLiteral
    long parseHexFloatLiteral(java.lang.CharSequence,int,int,int,boolean) -> parseHexFloatLiteral
    long parseNaNOrInfinity(java.lang.CharSequence,int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser -> com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser:
    java.lang.String ILLEGAL_OFFSET_OR_ILLEGAL_LENGTH -> ILLEGAL_OFFSET_OR_ILLEGAL_LENGTH
    java.lang.String SYNTAX_ERROR -> SYNTAX_ERROR
    java.lang.String VALUE_EXCEEDS_LIMITS -> VALUE_EXCEEDS_LIMITS
    byte DECIMAL_POINT_CLASS -> DECIMAL_POINT_CLASS
    byte OTHER_CLASS -> OTHER_CLASS
    byte[] CHAR_TO_HEX_MAP -> CHAR_TO_HEX_MAP
    void <init>() -> <init>
    byte charAt(byte[],int,int) -> charAt
    char charAt(char[],int,int) -> charAt
    char charAt(java.lang.CharSequence,int,int) -> charAt
    int lookupHex(byte) -> lookupHex
    int lookupHex(char) -> lookupHex
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.BigSignificand -> com.fasterxml.jackson.core.io.doubleparser.BigSignificand:
    long LONG_MASK -> LONG_MASK
    int numInts -> numInts
    int[] x -> x
    int firstNonZeroInt -> firstNonZeroInt
    void <init>(long) -> <init>
    void add(int) -> add
    void fma(int,int) -> fma
    java.math.BigInteger toBigInteger() -> toBigInteger
    void x(int,int) -> x
    int x(int) -> x
com.fasterxml.jackson.core.io.doubleparser.FastDoubleMath -> com.fasterxml.jackson.core.io.doubleparser.FastDoubleMath:
    int DOUBLE_EXPONENT_BIAS -> DOUBLE_EXPONENT_BIAS
    int DOUBLE_SIGNIFICAND_WIDTH -> DOUBLE_SIGNIFICAND_WIDTH
    int DOUBLE_MIN_EXPONENT_POWER_OF_TEN -> DOUBLE_MIN_EXPONENT_POWER_OF_TEN
    int DOUBLE_MAX_EXPONENT_POWER_OF_TEN -> DOUBLE_MAX_EXPONENT_POWER_OF_TEN
    long[] MANTISSA_64 -> MANTISSA_64
    long[] MANTISSA_128 -> MANTISSA_128
    int DOUBLE_MIN_EXPONENT_POWER_OF_TWO -> DOUBLE_MIN_EXPONENT_POWER_OF_TWO
    int DOUBLE_MAX_EXPONENT_POWER_OF_TWO -> DOUBLE_MAX_EXPONENT_POWER_OF_TWO
    double[] DOUBLE_POWERS_OF_TEN -> DOUBLE_POWERS_OF_TEN
    void <init>() -> <init>
    double tryDecFloatToDoubleTruncated(boolean,long,int,boolean,int) -> tryDecFloatToDoubleTruncated
    double tryDecToDoubleWithFastAlgorithm(boolean,long,int) -> tryDecToDoubleWithFastAlgorithm
    double tryHexFloatToDoubleTruncated(boolean,long,long,boolean,long) -> tryHexFloatToDoubleTruncated
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastDoubleSwar -> com.fasterxml.jackson.core.io.doubleparser.FastDoubleSwar:
    void <init>() -> <init>
    boolean isDigit(char) -> isDigit
    boolean isDigit(byte) -> isDigit
    boolean isEightDigits(byte[],int) -> isEightDigits
    boolean isEightDigits(char[],int) -> isEightDigits
    boolean isEightDigits(java.lang.CharSequence,int) -> isEightDigits
    boolean isEightDigitsUtf16(long,long) -> isEightDigitsUtf16
    boolean isEightDigitsUtf8(long) -> isEightDigitsUtf8
    boolean isEightZeroes(byte[],int) -> isEightZeroes
    boolean isEightZeroes(java.lang.CharSequence,int) -> isEightZeroes
    boolean isEightZeroes(char[],int) -> isEightZeroes
    boolean isEightZeroesUtf16(long,long) -> isEightZeroesUtf16
    boolean isEightZeroesUtf8(long) -> isEightZeroesUtf8
    int parseEightDigitsUtf16(long,long) -> parseEightDigitsUtf16
    int readIntBE(byte[],int) -> readIntBE
    int readIntLE(byte[],int) -> readIntLE
    long readLongBE(byte[],int) -> readLongBE
    long readLongLE(byte[],int) -> readLongLE
    int tryToParseEightDigits(char[],int) -> tryToParseEightDigits
    int tryToParseEightDigits(byte[],int) -> tryToParseEightDigits
    int tryToParseEightDigits(java.lang.CharSequence,int) -> tryToParseEightDigits
    int tryToParseEightDigitsUtf16(long,long) -> tryToParseEightDigitsUtf16
    int tryToParseEightDigitsUtf8(byte[],int) -> tryToParseEightDigitsUtf8
    int tryToParseEightDigitsUtf8(long) -> tryToParseEightDigitsUtf8
    long tryToParseEightHexDigits(java.lang.CharSequence,int) -> tryToParseEightHexDigits
    long tryToParseEightHexDigits(char[],int) -> tryToParseEightHexDigits
    long tryToParseEightHexDigits(byte[],int) -> tryToParseEightHexDigits
    long tryToParseEightHexDigitsUtf16(long,long) -> tryToParseEightHexDigitsUtf16
    long tryToParseEightHexDigitsUtf8(long) -> tryToParseEightHexDigitsUtf8
    int tryToParseFourDigits(char[],int) -> tryToParseFourDigits
    int tryToParseFourDigits(java.lang.CharSequence,int) -> tryToParseFourDigits
    int tryToParseFourDigits(byte[],int) -> tryToParseFourDigits
    int tryToParseFourDigitsUtf16(long) -> tryToParseFourDigitsUtf16
    int tryToParseFourDigitsUtf8(int) -> tryToParseFourDigitsUtf8
    long tryToParseFourHexDigitsUtf16(long) -> tryToParseFourHexDigitsUtf16
    int tryToParseUpTo7Digits(byte[],int,int) -> tryToParseUpTo7Digits
    int tryToParseUpTo7Digits(char[],int,int) -> tryToParseUpTo7Digits
    int tryToParseUpTo7Digits(java.lang.CharSequence,int,int) -> tryToParseUpTo7Digits
    void writeIntBE(byte[],int,int) -> writeIntBE
    void writeLongBE(byte[],int,long) -> writeLongBE
    double fma(double,double,double) -> fma
com.fasterxml.jackson.core.io.doubleparser.FastFloatMath -> com.fasterxml.jackson.core.io.doubleparser.FastFloatMath:
    int FLOAT_EXPONENT_BIAS -> FLOAT_EXPONENT_BIAS
    int FLOAT_SIGNIFICAND_WIDTH -> FLOAT_SIGNIFICAND_WIDTH
    int FLOAT_MIN_EXPONENT_POWER_OF_TEN -> FLOAT_MIN_EXPONENT_POWER_OF_TEN
    int FLOAT_MAX_EXPONENT_POWER_OF_TEN -> FLOAT_MAX_EXPONENT_POWER_OF_TEN
    int FLOAT_MIN_EXPONENT_POWER_OF_TWO -> FLOAT_MIN_EXPONENT_POWER_OF_TWO
    int FLOAT_MAX_EXPONENT_POWER_OF_TWO -> FLOAT_MAX_EXPONENT_POWER_OF_TWO
    float[] FLOAT_POWER_OF_TEN -> FLOAT_POWER_OF_TEN
    void <init>() -> <init>
    float decFloatLiteralToFloat(boolean,long,int,boolean,int) -> decFloatLiteralToFloat
    float hexFloatLiteralToFloat(boolean,long,int,boolean,int) -> hexFloatLiteralToFloat
    float tryDecToFloatWithFastAlgorithm(boolean,long,int) -> tryDecToFloatWithFastAlgorithm
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath -> com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath:
    java.math.BigInteger FIVE -> FIVE
    java.math.BigInteger TEN_POW_16 -> TEN_POW_16
    java.math.BigInteger FIVE_POW_16 -> FIVE_POW_16
    java.math.BigInteger[] SMALL_POWERS_OF_TEN -> SMALL_POWERS_OF_TEN
    void <init>() -> <init>
    java.math.BigInteger computePowerOfTen(java.util.NavigableMap,int) -> computePowerOfTen
    java.math.BigInteger computeTenRaisedByNFloor16Recursive(java.util.NavigableMap,int) -> computeTenRaisedByNFloor16Recursive
    java.util.NavigableMap createPowersOfTenFloor16Map() -> createPowersOfTenFloor16Map
    long estimateNumBits(long) -> estimateNumBits
    java.util.NavigableMap fillPowersOf10Floor16(int,int) -> fillPowersOf10Floor16
    void fillPowersOfNFloor16Recursive(java.util.NavigableMap,int,int) -> fillPowersOfNFloor16Recursive
    com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128 fullMultiplication(long,long) -> fullMultiplication
    int splitFloor16(int,int) -> splitFloor16
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$1 -> com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$1:
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128 -> com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128:
    long high -> high
    long low -> low
    void <init>(long,long) -> <init>
    void <init>(long,long,com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$1) -> <init>
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier -> com.fasterxml.jackson.core.io.doubleparser.FftMultiplier:
    double COS_0_25 -> COS_0_25
    double SIN_0_25 -> SIN_0_25
    int FFT_THRESHOLD -> FFT_THRESHOLD
    int MAX_MAG_LENGTH -> MAX_MAG_LENGTH
    int ROOTS3_CACHE_SIZE -> ROOTS3_CACHE_SIZE
    int ROOTS_CACHE2_SIZE -> ROOTS_CACHE2_SIZE
    int TOOM_COOK_THRESHOLD -> TOOM_COOK_THRESHOLD
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] ROOTS2_CACHE -> ROOTS2_CACHE
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] ROOTS3_CACHE -> ROOTS3_CACHE
    boolean $assertionsDisabled -> $assertionsDisabled
    void <init>() -> <init>
    int bitsPerFftPoint(int) -> bitsPerFftPoint
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector calculateRootsOfUnity(int) -> calculateRootsOfUnity
    void fft(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[]) -> fft
    void fft3(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,double) -> fft3
    void fftMixedRadix(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[],com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> fftMixedRadix
    java.math.BigInteger fromFftVector(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,int) -> fromFftVector
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] getRootsOfUnity2(int) -> getRootsOfUnity2
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector getRootsOfUnity3(int) -> getRootsOfUnity3
    void ifft(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[]) -> ifft
    void ifftMixedRadix(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[],com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> ifftMixedRadix
    java.math.BigInteger multiply(java.math.BigInteger,java.math.BigInteger) -> multiply
    java.math.BigInteger multiplyFft(java.math.BigInteger,java.math.BigInteger) -> multiplyFft
    java.math.BigInteger square(java.math.BigInteger) -> square
    java.math.BigInteger squareFft(java.math.BigInteger) -> squareFft
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector toFftVector(byte[],int,int) -> toFftVector
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector -> com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector:
    int COMPLEX_SIZE_SHIFT -> COMPLEX_SIZE_SHIFT
    int IMAG -> IMAG
    int REAL -> REAL
    double[] a -> a
    int length -> length
    int offset -> offset
    void <init>(int) -> <init>
    void <init>(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,int) -> <init>
    void add(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> add
    void addInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addInto
    void addTimesIInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesIInto
    void applyInverseWeights(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> applyInverseWeights
    void applyWeights(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> applyWeights
    void copyInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> copyInto
    double imag(int) -> imag
    void imag(int,double) -> imag
    int imagIdx(int) -> imagIdx
    void multiply(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiply
    void multiplyByIAnd(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyByIAnd
    void multiplyConjugate(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugate
    void multiplyConjugateInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugateInto
    void multiplyConjugateTimesI(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugateTimesI
    void multiplyInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyInto
    void multiplyPointwise(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> multiplyPointwise
    double part(int,int) -> part
    double real(int) -> real
    void real(int,double) -> real
    int realIdx(int) -> realIdx
    void set(int,double,double) -> set
    void squarePointwise() -> squarePointwise
    void subtractInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractInto
    void subtractTimesIInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesIInto
    void timesTwoToThe(int,int) -> timesTwoToThe
    int access$000(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> access$000
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex -> com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex:
    double real -> real
    double imag -> imag
    void <init>() -> <init>
    void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> add
    void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> add
    void addInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addInto
    void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesI
    void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> addTimesI
    void addTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesIInto
    void copyInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> copyInto
    void multiply(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiply
    void multiplyConjugate(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugate
    void set(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> set
    void squareInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> squareInto
    void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtract
    void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtract
    void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractInto
    void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtractInto
    void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesI
    void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtractTimesI
    void subtractTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesIInto
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MANY_DIGITS_THRESHOLD -> MANY_DIGITS_THRESHOLD
    long MAX_EXPONENT_NUMBER -> MAX_EXPONENT_NUMBER
    int MAX_DIGIT_COUNT -> MAX_DIGIT_COUNT
    void <init>() -> <init>
    java.math.BigDecimal parseBigDecimalString(byte[],int,int) -> parseBigDecimalString
    java.math.BigDecimal parseBigDecimalStringWithManyDigits(byte[],int,int) -> parseBigDecimalStringWithManyDigits
    java.math.BigDecimal valueOfBigDecimalString(byte[],int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MANY_DIGITS_THRESHOLD -> MANY_DIGITS_THRESHOLD
    int MAX_DIGIT_COUNT -> MAX_DIGIT_COUNT
    long MAX_EXPONENT_NUMBER -> MAX_EXPONENT_NUMBER
    void <init>() -> <init>
    java.math.BigDecimal parseBigDecimalString(char[],int,int) -> parseBigDecimalString
    java.math.BigDecimal parseBigDecimalStringWithManyDigits(char[],int,int) -> parseBigDecimalStringWithManyDigits
    java.math.BigDecimal valueOfBigDecimalString(char[],int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MANY_DIGITS_THRESHOLD -> MANY_DIGITS_THRESHOLD
    int MAX_DIGIT_COUNT -> MAX_DIGIT_COUNT
    long MAX_EXPONENT_NUMBER -> MAX_EXPONENT_NUMBER
    void <init>() -> <init>
    java.math.BigDecimal parseBigDecimalString(java.lang.CharSequence,int,int) -> parseBigDecimalString
    java.math.BigDecimal parseBigDecimalStringWithManyDigits(java.lang.CharSequence,int,int) -> parseBigDecimalStringWithManyDigits
    java.math.BigDecimal valueOfBigDecimalString(java.lang.CharSequence,int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser -> com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser:
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray BYTE_ARRAY_PARSER -> BYTE_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray CHAR_ARRAY_PARSER -> CHAR_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence CHAR_SEQUENCE_PARSER -> CHAR_SEQUENCE_PARSER
    void <init>() -> <init>
    java.math.BigDecimal parseBigDecimal(java.lang.CharSequence) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(java.lang.CharSequence,int,int) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(byte[]) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(byte[],int,int) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[]) -> parseBigDecimal
    java.math.BigDecimal parseBigDecimal(char[],int,int) -> parseBigDecimal
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromByteArray:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MAX_DECIMAL_DIGITS -> MAX_DECIMAL_DIGITS
    int MAX_HEX_DIGITS -> MAX_HEX_DIGITS
    void <init>() -> <init>
    java.math.BigInteger parseBigIntegerLiteral(byte[],int,int,int) -> parseBigIntegerLiteral
    java.math.BigInteger parseDecDigits(byte[],int,int,boolean) -> parseDecDigits
    java.math.BigInteger parseHexDigits(byte[],int,int,boolean) -> parseHexDigits
    java.math.BigInteger parseManyDecDigits(byte[],int,int,boolean) -> parseManyDecDigits
    int skipZeroes(byte[],int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharArray:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MAX_DECIMAL_DIGITS -> MAX_DECIMAL_DIGITS
    int MAX_HEX_DIGITS -> MAX_HEX_DIGITS
    void <init>() -> <init>
    java.math.BigInteger parseBigIntegerLiteral(char[],int,int,int) -> parseBigIntegerLiteral
    java.math.BigInteger parseDecDigits(char[],int,int,boolean) -> parseDecDigits
    java.math.BigInteger parseHexDigits(char[],int,int,boolean) -> parseHexDigits
    java.math.BigInteger parseManyDecDigits(char[],int,int,boolean) -> parseManyDecDigits
    int skipZeroes(char[],int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence:
    int MAX_INPUT_LENGTH -> MAX_INPUT_LENGTH
    int MAX_DECIMAL_DIGITS -> MAX_DECIMAL_DIGITS
    int MAX_HEX_DIGITS -> MAX_HEX_DIGITS
    void <init>() -> <init>
    java.math.BigInteger parseBigIntegerLiteral(java.lang.CharSequence,int,int,int) -> parseBigIntegerLiteral
    java.math.BigInteger parseDecDigits(java.lang.CharSequence,int,int,boolean) -> parseDecDigits
    java.math.BigInteger parseHexDigits(java.lang.CharSequence,int,int,boolean) -> parseHexDigits
    java.math.BigInteger parseManyDecDigits(java.lang.CharSequence,int,int,boolean) -> parseManyDecDigits
    int skipZeroes(java.lang.CharSequence,int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerParser -> com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerParser:
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromByteArray BYTE_ARRAY_PARSER -> BYTE_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharArray CHAR_ARRAY_PARSER -> CHAR_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence CHAR_SEQUENCE_PARSER -> CHAR_SEQUENCE_PARSER
    void <init>() -> <init>
    java.math.BigInteger parseBigInteger(java.lang.CharSequence) -> parseBigInteger
    java.math.BigInteger parseBigInteger(java.lang.CharSequence,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(java.lang.CharSequence,int,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(java.lang.CharSequence,int,int,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(byte[]) -> parseBigInteger
    java.math.BigInteger parseBigInteger(byte[],int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(byte[],int,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(byte[],int,int,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(char[]) -> parseBigInteger
    java.math.BigInteger parseBigInteger(char[],int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(char[],int,int) -> parseBigInteger
    java.math.BigInteger parseBigInteger(char[],int,int,int) -> parseBigInteger
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromByteArray:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharArray:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleParser -> com.fasterxml.jackson.core.io.doubleparser.JavaDoubleParser:
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromByteArray BYTE_ARRAY_PARSER -> BYTE_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharArray CHAR_ARRAY_PARSER -> CHAR_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence CHAR_SEQUENCE_PARSER -> CHAR_SEQUENCE_PARSER
    void <init>() -> <init>
    double parseDouble(java.lang.CharSequence) -> parseDouble
    double parseDouble(java.lang.CharSequence,int,int) -> parseDouble
    double parseDouble(byte[]) -> parseDouble
    double parseDouble(byte[],int,int) -> parseDouble
    double parseDouble(char[]) -> parseDouble
    double parseDouble(char[],int,int) -> parseDouble
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromByteArray:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharArray:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence:
    void <init>() -> <init>
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatParser -> com.fasterxml.jackson.core.io.doubleparser.JavaFloatParser:
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromByteArray BYTE_ARRAY_PARSER -> BYTE_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharArray CHAR_ARRAY_PARSER -> CHAR_ARRAY_PARSER
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence CHAR_SEQUENCE_PARSER -> CHAR_SEQUENCE_PARSER
    void <init>() -> <init>
    float parseFloat(java.lang.CharSequence) -> parseFloat
    float parseFloat(java.lang.CharSequence,int,int) -> parseFloat
    float parseFloat(byte[]) -> parseFloat
    float parseFloat(byte[],int,int) -> parseFloat
    float parseFloat(char[]) -> parseFloat
    float parseFloat(char[],int,int) -> parseFloat
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskByteArray -> com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskByteArray:
    int RECURSION_THRESHOLD -> RECURSION_THRESHOLD
    void <init>() -> <init>
    java.math.BigInteger parseDigitsIterative(byte[],int,int) -> parseDigitsIterative
    java.math.BigInteger parseDigitsRecursive(byte[],int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharArray -> com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharArray:
    int RECURSION_THRESHOLD -> RECURSION_THRESHOLD
    void <init>() -> <init>
    java.math.BigInteger parseDigitsIterative(char[],int,int) -> parseDigitsIterative
    java.math.BigInteger parseDigitsRecursive(char[],int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharSequence -> com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharSequence:
    int RECURSION_THRESHOLD -> RECURSION_THRESHOLD
    void <init>() -> <init>
    java.math.BigInteger parseDigitsIterative(java.lang.CharSequence,int,int) -> parseDigitsIterative
    java.math.BigInteger parseDigitsRecursive(java.lang.CharSequence,int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.package-info -> com.fasterxml.jackson.core.io.doubleparser.package-info:
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal -> com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal:
    int P -> P
    int W -> W
    int Q_MIN -> Q_MIN
    int Q_MAX -> Q_MAX
    int E_MIN -> E_MIN
    int E_MAX -> E_MAX
    long C_TINY -> C_TINY
    int K_MIN -> K_MIN
    int K_MAX -> K_MAX
    int H -> H
    long C_MIN -> C_MIN
    int BQ_MASK -> BQ_MASK
    long T_MASK -> T_MASK
    long MASK_63 -> MASK_63
    int MASK_28 -> MASK_28
    int NON_SPECIAL -> NON_SPECIAL
    int PLUS_ZERO -> PLUS_ZERO
    int MINUS_ZERO -> MINUS_ZERO
    int PLUS_INF -> PLUS_INF
    int MINUS_INF -> MINUS_INF
    int NAN -> NAN
    int MAX_CHARS -> MAX_CHARS
    byte[] bytes -> bytes
    int index -> index
    void <init>() -> <init>
    java.lang.String toString(double) -> toString
    java.lang.String toDecimalString(double) -> toDecimalString
    int toDecimal(double) -> toDecimal
    int toDecimal(int,long,int) -> toDecimal
    long rop(long,long,long) -> rop
    int toChars(long,int) -> toChars
    int toChars1(int,int,int,int) -> toChars1
    int toChars2(int,int,int,int) -> toChars2
    int toChars3(int,int,int,int) -> toChars3
    void lowDigits(int) -> lowDigits
    void append8Digits(int) -> append8Digits
    void removeTrailingZeroes() -> removeTrailingZeroes
    int y(int) -> y
    void exponent(int) -> exponent
    void append(int) -> append
    void appendDigit(int) -> appendDigit
    java.lang.String charsToString() -> charsToString
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal -> com.fasterxml.jackson.core.io.schubfach.FloatToDecimal:
    int P -> P
    int W -> W
    int Q_MIN -> Q_MIN
    int Q_MAX -> Q_MAX
    int E_MIN -> E_MIN
    int E_MAX -> E_MAX
    int C_TINY -> C_TINY
    int K_MIN -> K_MIN
    int K_MAX -> K_MAX
    int H -> H
    int C_MIN -> C_MIN
    int BQ_MASK -> BQ_MASK
    int T_MASK -> T_MASK
    long MASK_32 -> MASK_32
    int MASK_28 -> MASK_28
    int NON_SPECIAL -> NON_SPECIAL
    int PLUS_ZERO -> PLUS_ZERO
    int MINUS_ZERO -> MINUS_ZERO
    int PLUS_INF -> PLUS_INF
    int MINUS_INF -> MINUS_INF
    int NAN -> NAN
    int MAX_CHARS -> MAX_CHARS
    byte[] bytes -> bytes
    int index -> index
    void <init>() -> <init>
    java.lang.String toString(float) -> toString
    java.lang.String toDecimalString(float) -> toDecimalString
    int toDecimal(float) -> toDecimal
    int toDecimal(int,int,int) -> toDecimal
    int rop(long,long) -> rop
    int toChars(int,int) -> toChars
    int toChars1(int,int,int) -> toChars1
    int toChars2(int,int,int) -> toChars2
    int toChars3(int,int,int) -> toChars3
    void append8Digits(int) -> append8Digits
    void removeTrailingZeroes() -> removeTrailingZeroes
    int y(int) -> y
    void exponent(int) -> exponent
    void append(int) -> append
    void appendDigit(int) -> appendDigit
    java.lang.String charsToString() -> charsToString
com.fasterxml.jackson.core.io.schubfach.MathUtils -> com.fasterxml.jackson.core.io.schubfach.MathUtils:
    int K_MIN -> K_MIN
    int K_MAX -> K_MAX
    int H -> H
    int Q_10 -> Q_10
    long C_10 -> C_10
    long A_10 -> A_10
    int Q_2 -> Q_2
    long C_2 -> C_2
    long[] pow10 -> pow10
    long[] g -> g
    void <init>() -> <init>
    long pow10(int) -> pow10
    int flog10pow2(int) -> flog10pow2
    int flog10threeQuartersPow2(int) -> flog10threeQuartersPow2
    int flog2pow10(int) -> flog2pow10
    long g1(int) -> g1
    long g0(int) -> g0
    long multiplyHigh(long,long) -> multiplyHigh
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:
    byte UTF8_BOM_1 -> UTF8_BOM_1
    byte UTF8_BOM_2 -> UTF8_BOM_2
    byte UTF8_BOM_3 -> UTF8_BOM_3
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    boolean _bufferRecyclable -> _bufferRecyclable
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> <init>
    com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> detectEncoding
    int skipUTF8BOM(java.io.DataInput) -> skipUTF8BOM
    java.io.Reader constructReader() -> constructReader
    com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int) -> constructParser
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> tryMatch
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> skipSpace
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> skipSpace
    boolean handleBOM(int) -> handleBOM
    boolean checkUTF32(int) -> checkUTF32
    boolean checkUTF16(int) -> checkUTF16
    void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    boolean ensureLoaded(int) -> ensureLoaded
com.fasterxml.jackson.core.json.DupDetector -> com.fasterxml.jackson.core.json.DupDetector:
    java.lang.Object _source -> _source
    java.lang.String _firstName -> _firstName
    java.lang.String _secondName -> _secondName
    java.util.HashSet _seen -> _seen
    void <init>(java.lang.Object) -> <init>
    com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser) -> rootDetector
    com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator) -> rootDetector
    com.fasterxml.jackson.core.json.DupDetector child() -> child
    void reset() -> reset
    com.fasterxml.jackson.core.JsonLocation findLocation() -> findLocation
    java.lang.Object getSource() -> getSource
    boolean isDup(java.lang.String) -> isDup
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> com.fasterxml.jackson.core.json.JsonGeneratorImpl:
    int[] sOutputEscapes -> sOutputEscapes
    com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_WRITE_CAPABILITIES -> JSON_WRITE_CAPABILITIES
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    boolean _cfgUnqNames -> _cfgUnqNames
    boolean _cfgWriteHexUppercase -> _cfgWriteHexUppercase
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void _reportCantWriteValueExpectName(java.lang.String) -> _reportCantWriteValueExpectName
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonReadContext -> com.fasterxml.jackson.core.json.JsonReadContext:
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> _parent
    com.fasterxml.jackson.core.json.DupDetector _dups -> _dups
    com.fasterxml.jackson.core.json.JsonReadContext _child -> _child
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    void reset(int,int,int) -> reset
    com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext(int,int,com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    boolean hasCurrentName() -> hasCurrentName
    com.fasterxml.jackson.core.json.JsonReadContext getParent() -> getParent
    com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference) -> startLocation
    com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent() -> clearAndGetParent
    com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonReadFeature -> com.fasterxml.jackson.core.json.JsonReadFeature:
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_JAVA_COMMENTS -> ALLOW_JAVA_COMMENTS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_YAML_COMMENTS -> ALLOW_YAML_COMMENTS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_UNESCAPED_CONTROL_CHARS -> ALLOW_UNESCAPED_CONTROL_CHARS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_ZEROS_FOR_NUMBERS -> ALLOW_LEADING_ZEROS_FOR_NUMBERS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS -> ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS -> ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS -> ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_MISSING_VALUES -> ALLOW_MISSING_VALUES
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_TRAILING_COMMA -> ALLOW_TRAILING_COMMA
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonParser$Feature _mappedFeature -> _mappedFeature
    com.fasterxml.jackson.core.json.JsonReadFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.json.JsonReadFeature[] values() -> values
    com.fasterxml.jackson.core.json.JsonReadFeature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonParser$Feature) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
    com.fasterxml.jackson.core.JsonParser$Feature mappedFeature() -> mappedFeature
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonWriteContext -> com.fasterxml.jackson.core.json.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> _parent
    com.fasterxml.jackson.core.json.DupDetector _dups -> _dups
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> _child
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    boolean _gotName -> _gotName
    void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector) -> <init>
    void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector,java.lang.Object) -> <init>
    com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> reset
    com.fasterxml.jackson.core.json.JsonWriteContext reset(int,java.lang.Object) -> reset
    com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.json.JsonWriteContext createRootContext() -> createRootContext
    com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object) -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object) -> createChildObjectContext
    com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    boolean hasCurrentName() -> hasCurrentName
    com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent() -> clearAndGetParent
    com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    int writeFieldName(java.lang.String) -> writeFieldName
    void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    int writeValue() -> writeValue
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonWriteFeature -> com.fasterxml.jackson.core.json.JsonWriteFeature:
    com.fasterxml.jackson.core.json.JsonWriteFeature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NAN_AS_STRINGS -> WRITE_NAN_AS_STRINGS
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    com.fasterxml.jackson.core.json.JsonWriteFeature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_HEX_UPPER_CASE -> WRITE_HEX_UPPER_CASE
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature -> _mappedFeature
    com.fasterxml.jackson.core.json.JsonWriteFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.json.JsonWriteFeature[] values() -> values
    com.fasterxml.jackson.core.json.JsonWriteFeature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
    com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature() -> mappedFeature
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.PackageVersion -> com.fasterxml.jackson.core.json.PackageVersion:
    com.fasterxml.jackson.core.Version VERSION -> VERSION
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> com.fasterxml.jackson.core.json.ReaderBasedJsonParser:
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    int FEAT_MASK_LEADING_ZEROS -> FEAT_MASK_LEADING_ZEROS
    int FEAT_MASK_NON_NUM_NUMBERS -> FEAT_MASK_NON_NUM_NUMBERS
    int FEAT_MASK_ALLOW_MISSING -> FEAT_MASK_ALLOW_MISSING
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> FEAT_MASK_ALLOW_SINGLE_QUOTES
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> FEAT_MASK_ALLOW_UNQUOTED_NAMES
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> FEAT_MASK_ALLOW_JAVA_COMMENTS
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> FEAT_MASK_ALLOW_YAML_COMMENTS
    int[] _icLatin1 -> _icLatin1
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> _symbols
    int _hashSeed -> _hashSeed
    boolean _tokenIncomplete -> _tokenIncomplete
    long _nameStartOffset -> _nameStartOffset
    int _nameStartRow -> _nameStartRow
    int _nameStartCol -> _nameStartCol
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    char getNextChar(java.lang.String) -> getNextChar
    char getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    boolean _loadMore() -> _loadMore
    java.lang.String getText() -> getText
    int getText(java.io.Writer) -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    void finishToken() -> finishToken
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextFieldName() -> nextFieldName
    void _isNextTokenNameYes(int) -> _isNextTokenNameYes
    boolean _isNextTokenNameMaybe(int,java.lang.String) -> _isNextTokenNameMaybe
    com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean) -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int) -> _parseFloat
    com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int) -> _parseNumber2
    char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    char _verifyNLZ2() -> _verifyNLZ2
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    void _verifyRootSpace(int) -> _verifyRootSpace
    java.lang.String _parseName() -> _parseName
    java.lang.String _parseName2(int,int,int) -> _parseName2
    java.lang.String _handleOddName(int) -> _handleOddName
    java.lang.String _parseAposName() -> _parseAposName
    com.fasterxml.jackson.core.JsonToken _handleOddValue(int) -> _handleOddValue
    com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    java.lang.String _handleOddName2(int,int,int[]) -> _handleOddName2
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    int _skipColon() -> _skipColon
    int _skipColon2(boolean) -> _skipColon2
    int _skipColonFast(int) -> _skipColonFast
    int _skipComma(int) -> _skipComma
    int _skipAfterComma2() -> _skipAfterComma2
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipWSOrEnd2() -> _skipWSOrEnd2
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    boolean _skipYAMLComment() -> _skipYAMLComment
    void _skipLine() -> _skipLine
    char _decodeEscaped() -> _decodeEscaped
    void _matchTrue() -> _matchTrue
    void _matchFalse() -> _matchFalse
    void _matchNull() -> _matchNull
    void _matchToken(java.lang.String,int) -> _matchToken
    void _matchToken2(java.lang.String,int) -> _matchToken2
    void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    void _updateLocation() -> _updateLocation
    void _updateNameLocation() -> _updateNameLocation
    void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    void _closeScope(int) -> _closeScope
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser -> com.fasterxml.jackson.core.json.UTF8DataInputJsonParser:
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    int FEAT_MASK_LEADING_ZEROS -> FEAT_MASK_LEADING_ZEROS
    int FEAT_MASK_NON_NUM_NUMBERS -> FEAT_MASK_NON_NUM_NUMBERS
    int FEAT_MASK_ALLOW_MISSING -> FEAT_MASK_ALLOW_MISSING
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> FEAT_MASK_ALLOW_SINGLE_QUOTES
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> FEAT_MASK_ALLOW_UNQUOTED_NAMES
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> FEAT_MASK_ALLOW_JAVA_COMMENTS
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> FEAT_MASK_ALLOW_YAML_COMMENTS
    int[] _icUTF8 -> _icUTF8
    int[] _icLatin1 -> _icLatin1
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    java.io.DataInput _inputData -> _inputData
    int _nextByte -> _nextByte
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    int getText(java.io.Writer) -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    void finishToken() -> finishToken
    java.lang.String nextFieldName() -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean,boolean) -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    com.fasterxml.jackson.core.JsonToken _parsePosNumber() -> _parsePosNumber
    com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> _parseNegNumber
    com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    int _handleLeadingZeroes() -> _handleLeadingZeroes
    com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    void _verifyRootSpace() -> _verifyRootSpace
    java.lang.String _parseName(int) -> _parseName
    java.lang.String _parseMediumName(int) -> _parseMediumName
    java.lang.String _parseMediumName2(int,int) -> _parseMediumName2
    java.lang.String _parseLongName(int,int,int) -> _parseLongName
    java.lang.String parseName(int,int,int) -> parseName
    java.lang.String parseName(int,int,int,int) -> parseName
    java.lang.String parseName(int,int,int,int,int) -> parseName
    java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    java.lang.String _handleOddName(int) -> _handleOddName
    java.lang.String _parseAposName() -> _parseAposName
    java.lang.String findName(int,int) -> findName
    java.lang.String findName(int,int,int) -> findName
    java.lang.String findName(int,int,int,int) -> findName
    java.lang.String findName(int[],int,int,int) -> findName
    java.lang.String addName(int[],int,int) -> addName
    void _finishString() -> _finishString
    java.lang.String _finishAndReturnString() -> _finishAndReturnString
    void _finishString2(char[],int,int) -> _finishString2
    void _skipString() -> _skipString
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipWSComment(int) -> _skipWSComment
    int _skipColon() -> _skipColon
    int _skipColon2(int,boolean) -> _skipColon2
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    boolean _skipYAMLComment() -> _skipYAMLComment
    void _skipLine() -> _skipLine
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> _decodeUtf8_2
    int _decodeUtf8_3(int) -> _decodeUtf8_3
    int _decodeUtf8_4(int) -> _decodeUtf8_4
    void _skipUtf8_2() -> _skipUtf8_2
    void _skipUtf8_3() -> _skipUtf8_3
    void _skipUtf8_4() -> _skipUtf8_4
    void _reportInvalidToken(int,java.lang.String) -> _reportInvalidToken
    void _reportInvalidToken(int,java.lang.String,java.lang.String) -> _reportInvalidToken
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    int[] _growArrayBy(int[],int) -> _growArrayBy
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    void _closeScope(int) -> _closeScope
    int pad(int,int) -> pad
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> com.fasterxml.jackson.core.json.UTF8JsonGenerator:
    byte BYTE_u -> BYTE_u
    byte BYTE_0 -> BYTE_0
    byte BYTE_LBRACKET -> BYTE_LBRACKET
    byte BYTE_RBRACKET -> BYTE_RBRACKET
    byte BYTE_LCURLY -> BYTE_LCURLY
    byte BYTE_RCURLY -> BYTE_RCURLY
    byte BYTE_BACKSLASH -> BYTE_BACKSLASH
    byte BYTE_COMMA -> BYTE_COMMA
    byte BYTE_COLON -> BYTE_COLON
    int MAX_BYTES_TO_BUFFER -> MAX_BYTES_TO_BUFFER
    byte[] HEX_BYTES_UPPER -> HEX_BYTES_UPPER
    byte[] HEX_BYTES_LOWER -> HEX_BYTES_LOWER
    byte[] NULL_BYTES -> NULL_BYTES
    byte[] TRUE_BYTES -> TRUE_BYTES
    byte[] FALSE_BYTES -> FALSE_BYTES
    java.io.OutputStream _outputStream -> _outputStream
    byte _quoteChar -> _quoteChar
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char,byte[],int,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,byte[],int,boolean) -> <init>
    java.lang.Object getOutputTarget() -> getOutputTarget
    int getOutputBuffered() -> getOutputBuffered
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void _writeUnq(com.fasterxml.jackson.core.SerializableString) -> _writeUnq
    void writeStartArray() -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writePPFieldName(java.lang.String) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    void _writeRawSegment(char[],int,int) -> _writeRawSegment
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(short) -> writeNumber
    void _writeQuotedShort(short) -> _writeQuotedShort
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeNumber(char[],int,int) -> writeNumber
    void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    void _writeQuotedRaw(char[],int,int) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> _writeBytes
    void _writeBytes(byte[],int,int) -> _writeBytes
    void _writeStringSegments(java.lang.String,boolean) -> _writeStringSegments
    void _writeStringSegments(char[],int,int) -> _writeStringSegments
    void _writeStringSegments(java.lang.String,int,int) -> _writeStringSegments
    void _writeStringSegment(char[],int,int) -> _writeStringSegment
    void _writeStringSegment(java.lang.String,int,int) -> _writeStringSegment
    void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    void _writeStringSegment2(java.lang.String,int,int) -> _writeStringSegment2
    void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    void _writeStringSegmentASCII2(java.lang.String,int,int) -> _writeStringSegmentASCII2
    void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    void _writeCustomStringSegment2(java.lang.String,int,int) -> _writeCustomStringSegment2
    int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> _writeCustomEscape
    int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    void _writeUTF8Segments(byte[],int,int) -> _writeUTF8Segments
    void _writeUTF8Segment(byte[],int,int) -> _writeUTF8Segment
    void _writeUTF8Segment2(byte[],int,int) -> _writeUTF8Segment2
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    void _writeNull() -> _writeNull
    int _writeGenericEscape(int,int) -> _writeGenericEscape
    void _flushBuffer() -> _flushBuffer
    byte[] getHexBytes() -> getHexBytes
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> com.fasterxml.jackson.core.json.UTF8StreamJsonParser:
    byte BYTE_LF -> BYTE_LF
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    int FEAT_MASK_LEADING_ZEROS -> FEAT_MASK_LEADING_ZEROS
    int FEAT_MASK_NON_NUM_NUMBERS -> FEAT_MASK_NON_NUM_NUMBERS
    int FEAT_MASK_ALLOW_MISSING -> FEAT_MASK_ALLOW_MISSING
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> FEAT_MASK_ALLOW_SINGLE_QUOTES
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> FEAT_MASK_ALLOW_UNQUOTED_NAMES
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> FEAT_MASK_ALLOW_JAVA_COMMENTS
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> FEAT_MASK_ALLOW_YAML_COMMENTS
    int[] _icUTF8 -> _icUTF8
    int[] _icLatin1 -> _icLatin1
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    int _nameStartOffset -> _nameStartOffset
    int _nameStartRow -> _nameStartRow
    int _nameStartCol -> _nameStartCol
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,int,boolean) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean _loadMore() -> _loadMore
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    int getText(java.io.Writer) -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    void finishToken() -> finishToken
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextFieldName() -> nextFieldName
    int _skipColonFast(int) -> _skipColonFast
    void _isNextTokenNameYes(int) -> _isNextTokenNameYes
    boolean _isNextTokenNameMaybe(int,com.fasterxml.jackson.core.SerializableString) -> _isNextTokenNameMaybe
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean,boolean) -> _parseFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int) -> _parseNumber2
    int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    void _verifyRootSpace(int) -> _verifyRootSpace
    java.lang.String _parseName(int) -> _parseName
    java.lang.String parseMediumName(int) -> parseMediumName
    java.lang.String parseMediumName2(int,int) -> parseMediumName2
    java.lang.String parseLongName(int,int,int) -> parseLongName
    java.lang.String slowParseName() -> slowParseName
    java.lang.String parseName(int,int,int) -> parseName
    java.lang.String parseName(int,int,int,int) -> parseName
    java.lang.String parseName(int,int,int,int,int) -> parseName
    java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    java.lang.String _handleOddName(int) -> _handleOddName
    java.lang.String _parseAposName() -> _parseAposName
    java.lang.String findName(int,int) -> findName
    java.lang.String findName(int,int,int) -> findName
    java.lang.String findName(int,int,int,int) -> findName
    java.lang.String findName(int[],int,int,int) -> findName
    java.lang.String addName(int[],int,int) -> addName
    int _padLastQuad(int,int) -> _padLastQuad
    void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    void _finishString() -> _finishString
    java.lang.String _finishAndReturnString() -> _finishAndReturnString
    void _finishString2(char[],int) -> _finishString2
    void _skipString() -> _skipString
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    void _matchTrue() -> _matchTrue
    void _matchFalse() -> _matchFalse
    void _matchNull() -> _matchNull
    void _matchToken(java.lang.String,int) -> _matchToken
    void _matchToken2(java.lang.String,int) -> _matchToken2
    void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    int _skipWS() -> _skipWS
    int _skipWS2() -> _skipWS2
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipWSOrEnd2() -> _skipWSOrEnd2
    int _skipColon() -> _skipColon
    int _skipColon2(boolean) -> _skipColon2
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    boolean _skipYAMLComment() -> _skipYAMLComment
    void _skipLine() -> _skipLine
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> _decodeUtf8_2
    int _decodeUtf8_3(int) -> _decodeUtf8_3
    int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    int _decodeUtf8_4(int) -> _decodeUtf8_4
    void _skipUtf8_2() -> _skipUtf8_2
    void _skipUtf8_3() -> _skipUtf8_3
    void _skipUtf8_4(int) -> _skipUtf8_4
    void _skipCR() -> _skipCR
    int nextByte() -> nextByte
    void _reportInvalidToken(java.lang.String,int) -> _reportInvalidToken
    void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    void _updateLocation() -> _updateLocation
    void _updateNameLocation() -> _updateNameLocation
    com.fasterxml.jackson.core.JsonToken _closeScope(int) -> _closeScope
    void _closeArrayScope() -> _closeArrayScope
    void _closeObjectScope() -> _closeObjectScope
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS_UPPER -> HEX_CHARS_UPPER
    char[] HEX_CHARS_LOWER -> HEX_CHARS_LOWER
    java.io.Writer _writer -> _writer
    char _quoteChar -> _quoteChar
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    com.fasterxml.jackson.core.SerializableString _currentEscape -> _currentEscape
    char[] _copyBuffer -> _copyBuffer
    char[] getHexChars() -> getHexChars
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer) -> <init>
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char) -> <init>
    java.lang.Object getOutputTarget() -> getOutputTarget
    int getOutputBuffered() -> getOutputBuffered
    boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writeFieldName
    void _writeFieldNameTail(com.fasterxml.jackson.core.SerializableString) -> _writeFieldNameTail
    void writeStartArray() -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void _writeString2(com.fasterxml.jackson.core.SerializableString) -> _writeString2
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> writeRawLong
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(short) -> writeNumber
    void _writeQuotedShort(short) -> _writeQuotedShort
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeNumber(char[],int,int) -> writeNumber
    void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    void _writeQuotedRaw(char[],int,int) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> _writeString
    void _writeString2(int) -> _writeString2
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeSegment(int) -> _writeSegment
    void _writeString(char[],int,int) -> _writeString
    void _writeStringASCII(int,int) -> _writeStringASCII
    void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    void _writeStringCustom(int) -> _writeStringCustom
    void _writeSegmentCustom(int) -> _writeSegmentCustom
    void _writeStringCustom(char[],int,int) -> _writeStringCustom
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    void _writeNull() -> _writeNull
    void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    char[] _allocateCopyBuffer() -> _allocateCopyBuffer
    void _flushBuffer() -> _flushBuffer
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser -> com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser:
    java.nio.ByteBuffer _inputBuffer -> _inputBuffer
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    void feedInput(java.nio.ByteBuffer) -> feedInput
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    byte getByteFromBuffer(int) -> getByteFromBuffer
com.fasterxml.jackson.core.json.async.NonBlockingJsonParser -> com.fasterxml.jackson.core.json.async.NonBlockingJsonParser:
    byte[] _inputBuffer -> _inputBuffer
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    com.fasterxml.jackson.core.async.ByteArrayFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    void feedInput(byte[],int,int) -> feedInput
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    byte getByteFromBuffer(int) -> getByteFromBuffer
    com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase -> com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase:
    int MAJOR_INITIAL -> MAJOR_INITIAL
    int MAJOR_ROOT -> MAJOR_ROOT
    int MAJOR_OBJECT_FIELD_FIRST -> MAJOR_OBJECT_FIELD_FIRST
    int MAJOR_OBJECT_FIELD_NEXT -> MAJOR_OBJECT_FIELD_NEXT
    int MAJOR_OBJECT_VALUE -> MAJOR_OBJECT_VALUE
    int MAJOR_ARRAY_ELEMENT_FIRST -> MAJOR_ARRAY_ELEMENT_FIRST
    int MAJOR_ARRAY_ELEMENT_NEXT -> MAJOR_ARRAY_ELEMENT_NEXT
    int MAJOR_CLOSED -> MAJOR_CLOSED
    int MINOR_ROOT_BOM -> MINOR_ROOT_BOM
    int MINOR_ROOT_NEED_SEPARATOR -> MINOR_ROOT_NEED_SEPARATOR
    int MINOR_ROOT_GOT_SEPARATOR -> MINOR_ROOT_GOT_SEPARATOR
    int MINOR_FIELD_LEADING_WS -> MINOR_FIELD_LEADING_WS
    int MINOR_FIELD_LEADING_COMMA -> MINOR_FIELD_LEADING_COMMA
    int MINOR_FIELD_NAME -> MINOR_FIELD_NAME
    int MINOR_FIELD_NAME_ESCAPE -> MINOR_FIELD_NAME_ESCAPE
    int MINOR_FIELD_APOS_NAME -> MINOR_FIELD_APOS_NAME
    int MINOR_FIELD_UNQUOTED_NAME -> MINOR_FIELD_UNQUOTED_NAME
    int MINOR_VALUE_LEADING_WS -> MINOR_VALUE_LEADING_WS
    int MINOR_VALUE_EXPECTING_COMMA -> MINOR_VALUE_EXPECTING_COMMA
    int MINOR_VALUE_EXPECTING_COLON -> MINOR_VALUE_EXPECTING_COLON
    int MINOR_VALUE_WS_AFTER_COMMA -> MINOR_VALUE_WS_AFTER_COMMA
    int MINOR_VALUE_TOKEN_NULL -> MINOR_VALUE_TOKEN_NULL
    int MINOR_VALUE_TOKEN_TRUE -> MINOR_VALUE_TOKEN_TRUE
    int MINOR_VALUE_TOKEN_FALSE -> MINOR_VALUE_TOKEN_FALSE
    int MINOR_VALUE_TOKEN_NON_STD -> MINOR_VALUE_TOKEN_NON_STD
    int MINOR_NUMBER_PLUS -> MINOR_NUMBER_PLUS
    int MINOR_NUMBER_MINUS -> MINOR_NUMBER_MINUS
    int MINOR_NUMBER_ZERO -> MINOR_NUMBER_ZERO
    int MINOR_NUMBER_MINUSZERO -> MINOR_NUMBER_MINUSZERO
    int MINOR_NUMBER_INTEGER_DIGITS -> MINOR_NUMBER_INTEGER_DIGITS
    int MINOR_NUMBER_FRACTION_DIGITS -> MINOR_NUMBER_FRACTION_DIGITS
    int MINOR_NUMBER_EXPONENT_MARKER -> MINOR_NUMBER_EXPONENT_MARKER
    int MINOR_NUMBER_EXPONENT_DIGITS -> MINOR_NUMBER_EXPONENT_DIGITS
    int MINOR_VALUE_STRING -> MINOR_VALUE_STRING
    int MINOR_VALUE_STRING_ESCAPE -> MINOR_VALUE_STRING_ESCAPE
    int MINOR_VALUE_STRING_UTF8_2 -> MINOR_VALUE_STRING_UTF8_2
    int MINOR_VALUE_STRING_UTF8_3 -> MINOR_VALUE_STRING_UTF8_3
    int MINOR_VALUE_STRING_UTF8_4 -> MINOR_VALUE_STRING_UTF8_4
    int MINOR_VALUE_APOS_STRING -> MINOR_VALUE_APOS_STRING
    int MINOR_VALUE_TOKEN_ERROR -> MINOR_VALUE_TOKEN_ERROR
    int MINOR_COMMENT_LEADING_SLASH -> MINOR_COMMENT_LEADING_SLASH
    int MINOR_COMMENT_CLOSING_ASTERISK -> MINOR_COMMENT_CLOSING_ASTERISK
    int MINOR_COMMENT_C -> MINOR_COMMENT_C
    int MINOR_COMMENT_CPP -> MINOR_COMMENT_CPP
    int MINOR_COMMENT_YAML -> MINOR_COMMENT_YAML
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    int _quadLength -> _quadLength
    int _quad1 -> _quad1
    int _pending32 -> _pending32
    int _pendingBytes -> _pendingBytes
    int _quoted32 -> _quoted32
    int _quotedDigits -> _quotedDigits
    int _majorState -> _majorState
    int _majorStateAfterValue -> _majorStateAfterValue
    int _minorState -> _minorState
    int _minorStateAfterSplit -> _minorStateAfterSplit
    boolean _endOfInput -> _endOfInput
    int NON_STD_TOKEN_NAN -> NON_STD_TOKEN_NAN
    int NON_STD_TOKEN_INFINITY -> NON_STD_TOKEN_INFINITY
    int NON_STD_TOKEN_PLUS_INFINITY -> NON_STD_TOKEN_PLUS_INFINITY
    int NON_STD_TOKEN_MINUS_INFINITY -> NON_STD_TOKEN_MINUS_INFINITY
    java.lang.String[] NON_STD_TOKENS -> NON_STD_TOKENS
    double[] NON_STD_TOKEN_VALUES -> NON_STD_TOKEN_VALUES
    int _nonStdTokenType -> _nonStdTokenType
    int _currBufferStart -> _currBufferStart
    int _currInputRowAlt -> _currInputRowAlt
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    boolean canParseAsync() -> canParseAsync
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer symbolTableForTests() -> symbolTableForTests
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    void _releaseBuffers() -> _releaseBuffers
    java.lang.Object getInputSource() -> getInputSource
    void _closeInput() -> _closeInput
    boolean hasTextCharacters() -> hasTextCharacters
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    java.lang.String getText() -> getText
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    int getText(java.io.Writer) -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    com.fasterxml.jackson.core.JsonToken _startArrayScope() -> _startArrayScope
    com.fasterxml.jackson.core.JsonToken _startObjectScope() -> _startObjectScope
    com.fasterxml.jackson.core.JsonToken _closeArrayScope() -> _closeArrayScope
    com.fasterxml.jackson.core.JsonToken _closeObjectScope() -> _closeObjectScope
    java.lang.String _findName(int,int) -> _findName
    java.lang.String _findName(int,int,int) -> _findName
    java.lang.String _findName(int,int,int,int) -> _findName
    java.lang.String _addName(int[],int,int) -> _addName
    int _padLastQuad(int,int) -> _padLastQuad
    com.fasterxml.jackson.core.JsonToken _eofAsNextToken() -> _eofAsNextToken
    com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String) -> _fieldComplete
    com.fasterxml.jackson.core.JsonToken _valueComplete(com.fasterxml.jackson.core.JsonToken) -> _valueComplete
    com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String) -> _valueCompleteInt
    com.fasterxml.jackson.core.JsonToken _valueNonStdNumberComplete(int) -> _valueNonStdNumberComplete
    java.lang.String _nonStdToken(int) -> _nonStdToken
    void _updateTokenLocation() -> _updateTokenLocation
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    void _reportInvalidOther(int) -> _reportInvalidOther
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase -> com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase:
    int FEAT_MASK_TRAILING_COMMA -> FEAT_MASK_TRAILING_COMMA
    int FEAT_MASK_LEADING_ZEROS -> FEAT_MASK_LEADING_ZEROS
    int FEAT_MASK_ALLOW_MISSING -> FEAT_MASK_ALLOW_MISSING
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> FEAT_MASK_ALLOW_SINGLE_QUOTES
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> FEAT_MASK_ALLOW_UNQUOTED_NAMES
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> FEAT_MASK_ALLOW_JAVA_COMMENTS
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> FEAT_MASK_ALLOW_YAML_COMMENTS
    int[] _icUTF8 -> _icUTF8
    int[] _icLatin1 -> _icLatin1
    int _origBufferLen -> _origBufferLen
    void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    boolean needMoreInput() -> needMoreInput
    void endOfInput() -> endOfInput
    char _decodeEscaped() -> _decodeEscaped
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    byte getByteFromBuffer(int) -> getByteFromBuffer
    com.fasterxml.jackson.core.JsonToken _finishToken() -> _finishToken
    com.fasterxml.jackson.core.JsonToken _finishTokenWithEOF() -> _finishTokenWithEOF
    com.fasterxml.jackson.core.JsonToken _startDocument(int) -> _startDocument
    com.fasterxml.jackson.core.JsonToken _finishBOM(int) -> _finishBOM
    com.fasterxml.jackson.core.JsonToken _startFieldName(int) -> _startFieldName
    com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int) -> _startFieldNameAfterComma
    com.fasterxml.jackson.core.JsonToken _startValue(int) -> _startValue
    com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int) -> _startValueExpectComma
    com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int) -> _startValueExpectColon
    com.fasterxml.jackson.core.JsonToken _startValueAfterComma(int) -> _startValueAfterComma
    com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int) -> _startUnexpectedValue
    int _skipWS(int) -> _skipWS
    com.fasterxml.jackson.core.JsonToken _startSlashComment(int) -> _startSlashComment
    com.fasterxml.jackson.core.JsonToken _finishHashComment(int) -> _finishHashComment
    com.fasterxml.jackson.core.JsonToken _finishCppComment(int) -> _finishCppComment
    com.fasterxml.jackson.core.JsonToken _finishCComment(int,boolean) -> _finishCComment
    com.fasterxml.jackson.core.JsonToken _startAfterComment(int) -> _startAfterComment
    com.fasterxml.jackson.core.JsonToken _startFalseToken() -> _startFalseToken
    com.fasterxml.jackson.core.JsonToken _startTrueToken() -> _startTrueToken
    com.fasterxml.jackson.core.JsonToken _startNullToken() -> _startNullToken
    com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,com.fasterxml.jackson.core.JsonToken) -> _finishKeywordToken
    com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String,int,com.fasterxml.jackson.core.JsonToken) -> _finishKeywordTokenWithEOF
    com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int) -> _finishNonStdToken
    com.fasterxml.jackson.core.JsonToken _finishNonStdTokenWithEOF(int,int) -> _finishNonStdTokenWithEOF
    com.fasterxml.jackson.core.JsonToken _finishErrorToken() -> _finishErrorToken
    com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF() -> _finishErrorTokenWithEOF
    com.fasterxml.jackson.core.JsonToken _reportErrorToken(java.lang.String) -> _reportErrorToken
    com.fasterxml.jackson.core.JsonToken _startFloatThatStartsWithPeriod() -> _startFloatThatStartsWithPeriod
    com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int) -> _startPositiveNumber
    com.fasterxml.jackson.core.JsonToken _startNegativeNumber() -> _startNegativeNumber
    com.fasterxml.jackson.core.JsonToken _startPositiveNumber() -> _startPositiveNumber
    com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero() -> _startNumberLeadingZero
    com.fasterxml.jackson.core.JsonToken _finishNumberMinus(int) -> _finishNumberMinus
    com.fasterxml.jackson.core.JsonToken _finishNumberPlus(int) -> _finishNumberPlus
    com.fasterxml.jackson.core.JsonToken _finishNumberPlusMinus(int,boolean) -> _finishNumberPlusMinus
    com.fasterxml.jackson.core.JsonToken _finishNumberLeadingZeroes() -> _finishNumberLeadingZeroes
    com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes() -> _finishNumberLeadingNegZeroes
    com.fasterxml.jackson.core.JsonToken _finishNumberLeadingPosZeroes() -> _finishNumberLeadingPosZeroes
    com.fasterxml.jackson.core.JsonToken _finishNumberLeadingPosNegZeroes(boolean) -> _finishNumberLeadingPosNegZeroes
    com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int) -> _finishNumberIntegralPart
    com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int) -> _startFloat
    com.fasterxml.jackson.core.JsonToken _finishFloatFraction() -> _finishFloatFraction
    com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean,int) -> _finishFloatExponent
    java.lang.String _fastParseName() -> _fastParseName
    java.lang.String _parseMediumName(int,int) -> _parseMediumName
    java.lang.String _parseMediumName2(int,int,int) -> _parseMediumName2
    com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int) -> _parseEscapedName
    com.fasterxml.jackson.core.JsonToken _handleOddName(int) -> _handleOddName
    com.fasterxml.jackson.core.JsonToken _finishUnquotedName(int,int,int) -> _finishUnquotedName
    com.fasterxml.jackson.core.JsonToken _finishAposName(int,int,int) -> _finishAposName
    com.fasterxml.jackson.core.JsonToken _finishFieldWithEscape() -> _finishFieldWithEscape
    int _decodeSplitEscaped(int,int) -> _decodeSplitEscaped
    com.fasterxml.jackson.core.JsonToken _startString() -> _startString
    com.fasterxml.jackson.core.JsonToken _finishRegularString() -> _finishRegularString
    com.fasterxml.jackson.core.JsonToken _startAposString() -> _startAposString
    com.fasterxml.jackson.core.JsonToken _finishAposString() -> _finishAposString
    boolean _decodeSplitMultiByte(int,int,boolean) -> _decodeSplitMultiByte
    boolean _decodeSplitUTF8_3(int,int,int) -> _decodeSplitUTF8_3
    boolean _decodeSplitUTF8_4(int,int,int) -> _decodeSplitUTF8_4
    int _decodeCharEscape() -> _decodeCharEscape
    int _decodeFastCharEscape() -> _decodeFastCharEscape
    int _decodeUTF8_2(int,int) -> _decodeUTF8_2
    int _decodeUTF8_3(int,int,int) -> _decodeUTF8_3
    int _decodeUTF8_4(int,int,int,int) -> _decodeUTF8_4
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.package-info -> com.fasterxml.jackson.core.json.async.package-info:
com.fasterxml.jackson.core.json.package-info -> com.fasterxml.jackson.core.json.package-info:
com.fasterxml.jackson.core.package-info -> com.fasterxml.jackson.core.package-info:
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer -> com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer:
    int DEFAULT_T_SIZE -> DEFAULT_T_SIZE
    int MAX_T_SIZE -> MAX_T_SIZE
    int MIN_HASH_SIZE -> MIN_HASH_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _seed -> _seed
    boolean _intern -> _intern
    boolean _failOnDoS -> _failOnDoS
    int[] _hashArea -> _hashArea
    int _hashSize -> _hashSize
    int _secondaryStart -> _secondaryStart
    int _tertiaryStart -> _tertiaryStart
    int _tertiaryShift -> _tertiaryShift
    int _count -> _count
    java.lang.String[] _names -> _names
    int _spilloverEnd -> _spilloverEnd
    int _longNameOffset -> _longNameOffset
    boolean _hashShared -> _hashShared
    int MULT -> MULT
    int MULT2 -> MULT2
    int MULT3 -> MULT3
    void <init>(int,int) -> <init>
    void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> <init>
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int) -> createRoot
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int) -> makeChild
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChildOrPlaceholder(int) -> makeChildOrPlaceholder
    void release() -> release
    void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> mergeChild
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    boolean isCanonicalizing() -> isCanonicalizing
    int primaryCount() -> primaryCount
    int secondaryCount() -> secondaryCount
    int tertiaryCount() -> tertiaryCount
    int spilloverCount() -> spilloverCount
    int totalCount() -> totalCount
    java.lang.String toString() -> toString
    java.lang.String findName(int) -> findName
    java.lang.String findName(int,int) -> findName
    java.lang.String findName(int,int,int) -> findName
    java.lang.String findName(int[],int) -> findName
    int _calcOffset(int) -> _calcOffset
    java.lang.String _findSecondary(int,int) -> _findSecondary
    java.lang.String _findSecondary(int,int,int) -> _findSecondary
    java.lang.String _findSecondary(int,int,int,int) -> _findSecondary
    java.lang.String _findSecondary(int,int,int[],int) -> _findSecondary
    boolean _verifyLongName(int[],int,int) -> _verifyLongName
    boolean _verifyLongName2(int[],int,int) -> _verifyLongName2
    java.lang.String addName(java.lang.String,int) -> addName
    java.lang.String addName(java.lang.String,int,int) -> addName
    java.lang.String addName(java.lang.String,int,int,int) -> addName
    java.lang.String addName(java.lang.String,int[],int) -> addName
    void _verifySharing() -> _verifySharing
    int _findOffsetForAdd(int) -> _findOffsetForAdd
    int _resizeAndFindOffsetForAdd(int) -> _resizeAndFindOffsetForAdd
    boolean _checkNeedForRehash() -> _checkNeedForRehash
    int _appendLongName(int[],int) -> _appendLongName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int,int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    void rehash() -> rehash
    void nukeSymbols(boolean) -> nukeSymbols
    int _spilloverStart() -> _spilloverStart
    void _reportTooManyCollisions() -> _reportTooManyCollisions
    int _calcTertiaryShift(int) -> _calcTertiaryShift
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo:
    int size -> size
    int count -> count
    int tertiaryShift -> tertiaryShift
    int[] mainHash -> mainHash
    java.lang.String[] names -> names
    int spilloverEnd -> spilloverEnd
    int longNameOffset -> longNameOffset
    void <init>(int,int,int,int[],java.lang.String[],int,int) -> <init>
    void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:
    int HASH_MULT -> HASH_MULT
    int DEFAULT_T_SIZE -> DEFAULT_T_SIZE
    int MAX_T_SIZE -> MAX_T_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    int MAX_COLL_CHAIN_LENGTH -> MAX_COLL_CHAIN_LENGTH
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _seed -> _seed
    int _flags -> _flags
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    int _longestCollisionList -> _longestCollisionList
    boolean _hashShared -> _hashShared
    java.util.BitSet _overflows -> _overflows
    void <init>(int) -> <init>
    void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> <init>
    int _thresholdSize(int) -> _thresholdSize
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int) -> makeChild
    void release() -> release
    void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> mergeChild
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    int collisionCount() -> collisionCount
    int maxCollisionLength() -> maxCollisionLength
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> _findSymbol2
    java.lang.String _addSymbol(char[],int,int,int,int) -> _addSymbol
    void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket,int) -> _handleSpillOverflow
    int _hashToIndex(int) -> _hashToIndex
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void copyArrays() -> copyArrays
    void rehash() -> rehash
    void _reportTooManyCollisions(int) -> _reportTooManyCollisions
    void verifyInternalConsistency() -> verifyInternalConsistency
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String symbol -> symbol
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket next -> next
    int length -> length
    void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> <init>
    java.lang.String has(char[],int,int) -> has
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo:
    int size -> size
    int longestCollisionList -> longestCollisionList
    java.lang.String[] symbols -> symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets -> buckets
    void <init>(int,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[]) -> <init>
    void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.sym.Name -> com.fasterxml.jackson.core.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    void <init>(java.lang.String,int) -> <init>
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.sym.Name1 -> com.fasterxml.jackson.core.sym.Name1:
    com.fasterxml.jackson.core.sym.Name1 EMPTY -> EMPTY
    int q -> q
    void <init>(java.lang.String,int,int) -> <init>
    com.fasterxml.jackson.core.sym.Name1 getEmptyName() -> getEmptyName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.sym.Name2 -> com.fasterxml.jackson.core.sym.Name2:
    int q1 -> q1
    int q2 -> q2
    void <init>(java.lang.String,int,int,int) -> <init>
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name3 -> com.fasterxml.jackson.core.sym.Name3:
    int q1 -> q1
    int q2 -> q2
    int q3 -> q3
    void <init>(java.lang.String,int,int,int,int) -> <init>
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.NameN -> com.fasterxml.jackson.core.sym.NameN:
    int q1 -> q1
    int q2 -> q2
    int q3 -> q3
    int q4 -> q4
    int qlen -> qlen
    int[] q -> q
    void <init>(java.lang.String,int,int,int,int,int,int[],int) -> <init>
    com.fasterxml.jackson.core.sym.NameN construct(java.lang.String,int,int[],int) -> construct
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
    boolean _equals2(int[]) -> _equals2
com.fasterxml.jackson.core.sym.package-info -> com.fasterxml.jackson.core.sym.package-info:
com.fasterxml.jackson.core.type.ResolvedType -> com.fasterxml.jackson.core.type.ResolvedType:
    void <init>() -> <init>
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isReferenceType() -> isReferenceType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.Class getParameterSource() -> getParameterSource
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String toCanonical() -> toCanonical
com.fasterxml.jackson.core.type.TypeReference -> com.fasterxml.jackson.core.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    void <init>() -> <init>
    java.lang.reflect.Type getType() -> getType
    int compareTo(com.fasterxml.jackson.core.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.type.WritableTypeId -> com.fasterxml.jackson.core.type.WritableTypeId:
    java.lang.Object forValue -> forValue
    java.lang.Class forValueType -> forValueType
    java.lang.Object id -> id
    java.lang.String asProperty -> asProperty
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion include -> include
    com.fasterxml.jackson.core.JsonToken valueShape -> valueShape
    boolean wrapperWritten -> wrapperWritten
    java.lang.Object extra -> extra
    void <init>() -> <init>
    void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> <init>
    void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> <init>
    void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> <init>
com.fasterxml.jackson.core.type.WritableTypeId$Inclusion -> com.fasterxml.jackson.core.type.WritableTypeId$Inclusion:
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_ARRAY -> WRAPPER_ARRAY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_OBJECT -> WRAPPER_OBJECT
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion METADATA_PROPERTY -> METADATA_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PAYLOAD_PROPERTY -> PAYLOAD_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PARENT_PROPERTY -> PARENT_PROPERTY
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] $VALUES -> $VALUES
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] values() -> values
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    boolean requiresObjectContext() -> requiresObjectContext
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.type.package-info -> com.fasterxml.jackson.core.type.package-info:
com.fasterxml.jackson.core.util.BufferRecycler -> com.fasterxml.jackson.core.util.BufferRecycler:
    int BYTE_READ_IO_BUFFER -> BYTE_READ_IO_BUFFER
    int BYTE_WRITE_ENCODING_BUFFER -> BYTE_WRITE_ENCODING_BUFFER
    int BYTE_WRITE_CONCAT_BUFFER -> BYTE_WRITE_CONCAT_BUFFER
    int BYTE_BASE64_CODEC_BUFFER -> BYTE_BASE64_CODEC_BUFFER
    int CHAR_TOKEN_BUFFER -> CHAR_TOKEN_BUFFER
    int CHAR_CONCAT_BUFFER -> CHAR_CONCAT_BUFFER
    int CHAR_TEXT_BUFFER -> CHAR_TEXT_BUFFER
    int CHAR_NAME_COPY_BUFFER -> CHAR_NAME_COPY_BUFFER
    int[] BYTE_BUFFER_LENGTHS -> BYTE_BUFFER_LENGTHS
    int[] CHAR_BUFFER_LENGTHS -> CHAR_BUFFER_LENGTHS
    java.util.concurrent.atomic.AtomicReferenceArray _byteBuffers -> _byteBuffers
    java.util.concurrent.atomic.AtomicReferenceArray _charBuffers -> _charBuffers
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    byte[] allocByteBuffer(int) -> allocByteBuffer
    byte[] allocByteBuffer(int,int) -> allocByteBuffer
    void releaseByteBuffer(int,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(int) -> allocCharBuffer
    char[] allocCharBuffer(int,int) -> allocCharBuffer
    void releaseCharBuffer(int,char[]) -> releaseCharBuffer
    int byteBufferLength(int) -> byteBufferLength
    int charBufferLength(int) -> charBufferLength
    byte[] balloc(int) -> balloc
    char[] calloc(int) -> calloc
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecyclers -> com.fasterxml.jackson.core.util.BufferRecyclers:
    java.lang.String SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS -> SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker -> _bufferRecyclerTracker
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    void <init>() -> <init>
    com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler() -> getBufferRecycler
    int releaseBuffers() -> releaseBuffers
    com.fasterxml.jackson.core.io.JsonStringEncoder getJsonStringEncoder() -> getJsonStringEncoder
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    char[] quoteAsJsonText(java.lang.String) -> quoteAsJsonText
    void quoteAsJsonText(java.lang.CharSequence,java.lang.StringBuilder) -> quoteAsJsonText
    byte[] quoteAsJsonUTF8(java.lang.String) -> quoteAsJsonUTF8
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ByteArrayBuilder -> com.fasterxml.jackson.core.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    int INITIAL_BLOCK_SIZE -> INITIAL_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_ARRAY_SIZE -> DEFAULT_BLOCK_ARRAY_SIZE
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    void <init>(int) -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int) -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler,byte[],int) -> <init>
    com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int) -> fromInitial
    void reset() -> reset
    int size() -> size
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    void appendFourBytes(int) -> appendFourBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> _allocMore
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultIndenter -> com.fasterxml.jackson.core.util.DefaultIndenter:
    long serialVersionUID -> serialVersionUID
    java.lang.String SYS_LF -> SYS_LF
    com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE -> SYSTEM_LINEFEED_INSTANCE
    int INDENT_LEVELS -> INDENT_LEVELS
    char[] indents -> indents
    int charsPerLevel -> charsPerLevel
    java.lang.String eol -> eol
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    com.fasterxml.jackson.core.util.DefaultIndenter withLinefeed(java.lang.String) -> withLinefeed
    com.fasterxml.jackson.core.util.DefaultIndenter withIndent(java.lang.String) -> withIndent
    boolean isInline() -> isInline
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    java.lang.String getEol() -> getEol
    java.lang.String getIndent() -> getIndent
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> _arrayIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> _objectIndenter
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> _rootSeparator
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    com.fasterxml.jackson.core.util.Separators _separators -> _separators
    java.lang.String _objectFieldValueSeparatorWithSpaces -> _objectFieldValueSeparatorWithSpaces
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter) -> <init>
    void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString) -> <init>
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootSeparator
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(java.lang.String) -> withRootSeparator
    void indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentArraysWith
    void indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentObjectsWith
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> withArrayIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> withObjectIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSpacesInObjectEntries() -> withSpacesInObjectEntries
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withoutSpacesInObjectEntries() -> withoutSpacesInObjectEntries
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter _withSpaces(boolean) -> _withSpaces
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators) -> withSeparators
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> createInstance
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    java.lang.Object createInstance() -> createInstance
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> instance
    void <init>() -> <init>
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter:
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter:
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> instance
    void <init>() -> <init>
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.Instantiatable -> com.fasterxml.jackson.core.util.Instantiatable:
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.InternCache -> com.fasterxml.jackson.core.util.InternCache:
    long serialVersionUID -> serialVersionUID
    int MAX_ENTRIES -> MAX_ENTRIES
    com.fasterxml.jackson.core.util.InternCache instance -> instance
    java.lang.Object lock -> lock
    void <init>() -> <init>
    java.lang.String intern(java.lang.String) -> intern
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.JacksonFeature -> com.fasterxml.jackson.core.util.JacksonFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.core.util.JacksonFeatureSet -> com.fasterxml.jackson.core.util.JacksonFeatureSet:
    int _enabled -> _enabled
    void <init>(int) -> <init>
    com.fasterxml.jackson.core.util.JacksonFeatureSet fromDefaults(com.fasterxml.jackson.core.util.JacksonFeature[]) -> fromDefaults
    com.fasterxml.jackson.core.util.JacksonFeatureSet fromBitmask(int) -> fromBitmask
    com.fasterxml.jackson.core.util.JacksonFeatureSet with(com.fasterxml.jackson.core.util.JacksonFeature) -> with
    com.fasterxml.jackson.core.util.JacksonFeatureSet without(com.fasterxml.jackson.core.util.JacksonFeature) -> without
    boolean isEnabled(com.fasterxml.jackson.core.util.JacksonFeature) -> isEnabled
    int asBitmask() -> asBitmask
com.fasterxml.jackson.core.util.JsonGeneratorDelegate -> com.fasterxml.jackson.core.util.JsonGeneratorDelegate:
    com.fasterxml.jackson.core.JsonGenerator delegate -> delegate
    boolean delegateCopyMethods -> delegateCopyMethods
    void <init>(com.fasterxml.jackson.core.JsonGenerator) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonGenerator,boolean) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    int getOutputBuffered() -> getOutputBuffered
    void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    java.lang.Object currentValue() -> currentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    java.lang.Object getCurrentValue() -> getCurrentValue
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean canWriteTypeId() -> canWriteTypeId
    boolean canWriteObjectId() -> canWriteObjectId
    boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    boolean canOmitFields() -> canOmitFields
    boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> overrideFormatFeatures
    com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    void writeStartArray() -> writeStartArray
    void writeStartArray(int) -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeFieldId(long) -> writeFieldId
    void writeArray(int[],int,int) -> writeArray
    void writeArray(long[],int,int) -> writeArray
    void writeArray(double[],int,int) -> writeArray
    void writeArray(java.lang.String[],int,int) -> writeArray
    void writeString(java.lang.String) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeNumber(char[],int,int) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeOmittedField(java.lang.String) -> writeOmittedField
    void writeObjectId(java.lang.Object) -> writeObjectId
    void writeObjectRef(java.lang.Object) -> writeObjectRef
    void writeTypeId(java.lang.Object) -> writeTypeId
    void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    void writePOJO(java.lang.Object) -> writePOJO
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonGenerator getDelegate() -> getDelegate
    com.fasterxml.jackson.core.JsonGenerator delegate() -> delegate
com.fasterxml.jackson.core.util.JsonParserDelegate -> com.fasterxml.jackson.core.util.JsonParserDelegate:
    com.fasterxml.jackson.core.JsonParser delegate -> delegate
    void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    void close() -> close
    boolean isClosed() -> isClosed
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    int currentTokenId() -> currentTokenId
    java.lang.String currentName() -> currentName
    java.lang.Object currentValue() -> currentValue
    com.fasterxml.jackson.core.JsonLocation currentLocation() -> currentLocation
    com.fasterxml.jackson.core.JsonLocation currentTokenLocation() -> currentTokenLocation
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    int getCurrentTokenId() -> getCurrentTokenId
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.Object getCurrentValue() -> getCurrentValue
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    boolean isNaN() -> isNaN
    java.lang.String getText() -> getText
    boolean hasTextCharacters() -> hasTextCharacters
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    int getText(java.io.Writer) -> getText
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    boolean getBooleanValue() -> getBooleanValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Number getNumberValueExact() -> getNumberValueExact
    java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    void finishToken() -> finishToken
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    boolean canReadObjectId() -> canReadObjectId
    boolean canReadTypeId() -> canReadTypeId
    java.lang.Object getObjectId() -> getObjectId
    java.lang.Object getTypeId() -> getTypeId
    com.fasterxml.jackson.core.JsonParser delegate() -> delegate
com.fasterxml.jackson.core.util.JsonParserSequence -> com.fasterxml.jackson.core.util.JsonParserSequence:
    com.fasterxml.jackson.core.JsonParser[] _parsers -> _parsers
    boolean _checkForExistingToken -> _checkForExistingToken
    int _nextParserIndex -> _nextParserIndex
    boolean _hasToken -> _hasToken
    void <init>(com.fasterxml.jackson.core.JsonParser[]) -> <init>
    void <init>(boolean,com.fasterxml.jackson.core.JsonParser[]) -> <init>
    com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
    com.fasterxml.jackson.core.JsonToken switchAndReturnNext() -> switchAndReturnNext
com.fasterxml.jackson.core.util.MinimalPrettyPrinter -> com.fasterxml.jackson.core.util.MinimalPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.util.Separators _separators -> _separators
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    com.fasterxml.jackson.core.util.MinimalPrettyPrinter setSeparators(com.fasterxml.jackson.core.util.Separators) -> setSeparators
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer -> com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer:
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    void validateStringLength(int) -> validateStringLength
com.fasterxml.jackson.core.util.RequestPayload -> com.fasterxml.jackson.core.util.RequestPayload:
    long serialVersionUID -> serialVersionUID
    byte[] _payloadAsBytes -> _payloadAsBytes
    java.lang.CharSequence _payloadAsText -> _payloadAsText
    java.lang.String _charset -> _charset
    void <init>(byte[],java.lang.String) -> <init>
    void <init>(java.lang.CharSequence) -> <init>
    java.lang.Object getRawPayload() -> getRawPayload
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.util.Separators -> com.fasterxml.jackson.core.util.Separators:
    long serialVersionUID -> serialVersionUID
    char objectFieldValueSeparator -> objectFieldValueSeparator
    char objectEntrySeparator -> objectEntrySeparator
    char arrayValueSeparator -> arrayValueSeparator
    com.fasterxml.jackson.core.util.Separators createDefaultInstance() -> createDefaultInstance
    void <init>() -> <init>
    void <init>(char,char,char) -> <init>
    com.fasterxml.jackson.core.util.Separators withObjectFieldValueSeparator(char) -> withObjectFieldValueSeparator
    com.fasterxml.jackson.core.util.Separators withObjectEntrySeparator(char) -> withObjectEntrySeparator
    com.fasterxml.jackson.core.util.Separators withArrayValueSeparator(char) -> withArrayValueSeparator
    char getObjectFieldValueSeparator() -> getObjectFieldValueSeparator
    char getObjectEntrySeparator() -> getObjectEntrySeparator
    char getArrayValueSeparator() -> getArrayValueSeparator
com.fasterxml.jackson.core.util.TextBuffer -> com.fasterxml.jackson.core.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    int MIN_SEGMENT_LEN -> MIN_SEGMENT_LEN
    int MAX_SEGMENT_LEN -> MAX_SEGMENT_LEN
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    void <init>(com.fasterxml.jackson.core.util.BufferRecycler,char[]) -> <init>
    com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[]) -> fromInitial
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWith(char) -> resetWith
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithCopy(java.lang.String,int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] getBufferWithoutReset() -> getBufferWithoutReset
    char[] buf(int) -> buf
    void clearSegments() -> clearSegments
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    double contentsAsDouble(boolean) -> contentsAsDouble
    double contentsAsDouble() -> contentsAsDouble
    float contentsAsFloat() -> contentsAsFloat
    float contentsAsFloat(boolean) -> contentsAsFloat
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    int contentsAsInt(boolean) -> contentsAsInt
    long contentsAsLong(boolean) -> contentsAsLong
    int contentsToWriter(java.io.Writer) -> contentsToWriter
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    void validateAppend(int) -> validateAppend
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    java.lang.String setCurrentAndReturn(int) -> setCurrentAndReturn
    char[] finishCurrentSegment() -> finishCurrentSegment
    java.lang.String finishAndReturn(int,boolean) -> finishAndReturn
    java.lang.String _doTrim(int) -> _doTrim
    char[] expandCurrentSegment() -> expandCurrentSegment
    char[] expandCurrentSegment(int) -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> unshare
    void expand() -> expand
    char[] resultArray() -> resultArray
    char[] carr(int) -> carr
    void _reportBufferOverflow(int,int) -> _reportBufferOverflow
    void validateStringLength(int) -> validateStringLength
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ThreadLocalBufferManager -> com.fasterxml.jackson.core.util.ThreadLocalBufferManager:
    java.lang.Object RELEASE_LOCK -> RELEASE_LOCK
    java.util.Map _trackedRecyclers -> _trackedRecyclers
    java.lang.ref.ReferenceQueue _refQueue -> _refQueue
    void <init>() -> <init>
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance() -> instance
    int releaseBuffers() -> releaseBuffers
    java.lang.ref.SoftReference wrapAndTrack(com.fasterxml.jackson.core.util.BufferRecycler) -> wrapAndTrack
    void removeSoftRefsClearedByGc() -> removeSoftRefsClearedByGc
com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder -> com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder:
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager manager -> manager
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.VersionUtil -> com.fasterxml.jackson.core.util.VersionUtil:
    java.util.regex.Pattern V_SEP -> V_SEP
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.Version versionFor(java.lang.Class) -> versionFor
    com.fasterxml.jackson.core.Version packageVersionFor(java.lang.Class) -> packageVersionFor
    com.fasterxml.jackson.core.Version mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String) -> mavenVersionFor
    com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart
    void _close(java.io.Closeable) -> _close
    void throwInternal() -> throwInternal
    void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.package-info -> com.fasterxml.jackson.core.util.package-info:
com.fasterxml.jackson.databind.AbstractTypeResolver -> com.fasterxml.jackson.databind.AbstractTypeResolver:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.AnnotationIntrospector -> com.fasterxml.jackson.databind.AnnotationIntrospector:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance() -> nopInstance
    com.fasterxml.jackson.databind.AnnotationIntrospector pair(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> pair
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    com.fasterxml.jackson.core.Version version() -> version
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated,boolean) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _findAnnotation
    boolean _hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _hasAnnotation
    boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[]) -> _hasOneOf
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions -> com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions:
    java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findNamespace
    java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsAttribute
    java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsText
    java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsCData
com.fasterxml.jackson.databind.BeanDescription -> com.fasterxml.jackson.databind.BeanDescription:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    boolean isRecordType() -> isRecordType
    boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.List findBackReferences() -> findBackReferences
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.List getConstructors() -> getConstructors
    java.util.List getConstructorsWithMode() -> getConstructorsWithMode
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.util.List getFactoryMethodsWithMode() -> getFactoryMethodsWithMode
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor() -> findJsonKeyAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterField() -> findAnySetterField
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    java.lang.String findClassDescription() -> findClassDescription
    java.util.Map findInjectables() -> findInjectables
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.lang.Class[] findDefaultViews() -> findDefaultViews
com.fasterxml.jackson.databind.BeanProperty -> com.fasterxml.jackson.databind.BeanProperty:
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> EMPTY_FORMAT
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    boolean isRequired() -> isRequired
    boolean isVirtual() -> isVirtual
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanProperty$Bogus -> com.fasterxml.jackson.databind.BeanProperty$Bogus:
    void <init>() -> <init>
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    boolean isRequired() -> isRequired
    boolean isVirtual() -> isVirtual
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.BeanProperty$Std -> com.fasterxml.jackson.databind.BeanProperty$Std:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.BeanProperty$Std,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.BeanProperty$Std withType(com.fasterxml.jackson.databind.JavaType) -> withType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isRequired() -> isRequired
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    boolean isVirtual() -> isVirtual
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.DatabindContext -> com.fasterxml.jackson.databind.DatabindContext:
    int MAX_ERROR_STR_LEN -> MAX_ERROR_STR_LEN
    void <init>() -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    java.lang.Class getActiveView() -> getActiveView
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.JavaType resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> resolveSubType
    com.fasterxml.jackson.databind.JavaType resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> resolveAndValidateSubType
    com.fasterxml.jackson.databind.JavaType _resolveAndValidateGeneric(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,int) -> _resolveAndValidateGeneric
    java.lang.Object _throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> _throwNotASubtype
    java.lang.Object _throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _throwSubtypeNameNotAllowed
    java.lang.Object _throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _throwSubtypeClassNotAllowed
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdResolverInstance
    com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> converterInstance
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String) -> reportBadDefinition
    java.lang.String _format(java.lang.String,java.lang.Object[]) -> _format
    java.lang.String _truncate(java.lang.String) -> _truncate
    java.lang.String _quotedString(java.lang.String) -> _quotedString
    java.lang.String _colonConcat(java.lang.String,java.lang.String) -> _colonConcat
    java.lang.String _desc(java.lang.String) -> _desc
com.fasterxml.jackson.databind.DatabindException -> com.fasterxml.jackson.databind.DatabindException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
com.fasterxml.jackson.databind.DeserializationConfig -> com.fasterxml.jackson.databind.DeserializationConfig:
    long serialVersionUID -> serialVersionUID
    int DESER_FEATURE_DEFAULTS -> DESER_FEATURE_DEFAULTS
    com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers -> _problemHandlers
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs -> _coercionConfigs
    com.fasterxml.jackson.databind.cfg.ConstructorDetector _ctorDetector -> _ctorDetector
    int _deserFeatures -> _deserFeatures
    int _parserFeatures -> _parserFeatures
    int _parserFeaturesToChange -> _parserFeaturesToChange
    int _formatReadFeatures -> _formatReadFeatures
    int _formatReadFeaturesToChange -> _formatReadFeaturesToChange
    void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,long,int,int,int,int,int) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings() -> getBaseSettings
    com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    com.fasterxml.jackson.databind.DeserializationConfig _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.DeserializationConfig _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.DeserializationConfig withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.core.JsonParser$Feature) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withFeatures
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.core.JsonParser$Feature) -> without
    com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.core.FormatFeature) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.core.FormatFeature) -> without
    com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.DeserializationConfig _withJsonReadFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withJsonReadFeatures
    com.fasterxml.jackson.databind.DeserializationConfig _withoutJsonReadFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withoutJsonReadFeatures
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    com.fasterxml.jackson.databind.DeserializationConfig withNoProblemHandlers() -> withNoProblemHandlers
    com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser) -> initialize
    com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.FormatSchema) -> initialize
    boolean useRootWrapping() -> useRootWrapping
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature,com.fasterxml.jackson.core.JsonFactory) -> isEnabled
    boolean hasDeserializationFeatures(int) -> hasDeserializationFeatures
    boolean hasSomeOfFeatures(int) -> hasSomeOfFeatures
    int getDeserializationFeatures() -> getDeserializationFeatures
    boolean requiresFullValue() -> requiresFullValue
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    com.fasterxml.jackson.databind.cfg.ConstructorDetector getConstructorDetector() -> getConstructorDetector
    com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType) -> introspectForCreation
    com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> introspectForBuilder
    com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType) -> introspectForBuilder
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercionAction
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.DeserializationContext -> com.fasterxml.jackson.databind.DeserializationContext:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.DeserializerCache _cache -> _cache
    com.fasterxml.jackson.databind.deser.DeserializerFactory _factory -> _factory
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities -> _readCapabilities
    java.lang.Class _view -> _view
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.util.LinkedNode _currentType -> _currentType
    void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    java.lang.Class getActiveView() -> getActiveView
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.DeserializationContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    com.fasterxml.jackson.databind.JavaType getContextualType() -> getContextualType
    com.fasterxml.jackson.databind.deser.DeserializerFactory getFactory() -> getFactory
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability) -> isEnabled
    int getDeserializationFeatures() -> getDeserializationFeatures
    boolean hasDeserializationFeatures(int) -> hasDeserializationFeatures
    boolean hasSomeOfFeatures(int) -> hasSomeOfFeatures
    com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercionAction
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser) -> bufferForInputBuffering
    com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering() -> bufferForInputBuffering
    com.fasterxml.jackson.databind.util.TokenBuffer bufferAsCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> bufferAsCopyOfValue
    boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference) -> hasValueDeserializerFor
    com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContextualValueDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findNonContextualValueDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findRootValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeyDeserializer
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    java.lang.Class findClass(java.lang.String) -> findClass
    com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer) -> returnObjectBuffer
    com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handlePrimaryContextualization
    com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handleSecondaryContextualization
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class) -> extractScalarFromObject
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> readPropertyValue
    java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> readPropertyValue
    com.fasterxml.jackson.databind.JsonNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class) -> readTreeAsValue
    java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JavaType) -> readTreeAsValue
    com.fasterxml.jackson.databind.node.TreeTraversingParser _treeAsTokens(com.fasterxml.jackson.databind.JsonNode) -> _treeAsTokens
    boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdKey
    java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdStringValue
    java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[]) -> handleWeirdNumberValue
    java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleMissingInstantiator
    java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser) -> handleUnexpectedToken
    java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleUnexpectedToken
    java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser) -> handleUnexpectedToken
    java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleUnexpectedToken
    com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> handleBadMerge
    boolean _isCompatible(java.lang.Class,java.lang.Object) -> _isCompatible
    void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    void reportWrongTokenException(java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    java.lang.Object reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object) -> reportUnresolvedObjectId
    java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    java.lang.Object reportPropertyInputMismatch(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> reportPropertyInputMismatch
    java.lang.Object reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object[]) -> reportPropertyInputMismatch
    java.lang.Object reportBadCoercion(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[]) -> reportBadCoercion
    java.lang.Object reportTrailingTokens(java.lang.Class,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> reportTrailingTokens
    void reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    void reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer) -> reportUnknownProperty
    void reportMissingContent(java.lang.String,java.lang.Object[]) -> reportMissingContent
    java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    java.lang.Object reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> reportBadMerge
    com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String) -> weirdStringException
    com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String) -> weirdNumberException
    com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object,java.lang.Class) -> weirdNativeValueException
    com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> missingTypeIdException
    com.fasterxml.jackson.databind.JsonMappingException unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> unknownTypeException
    com.fasterxml.jackson.databind.JsonMappingException endOfInputException(java.lang.Class) -> endOfInputException
    void reportMappingException(java.lang.String,java.lang.Object[]) -> reportMappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> mappingException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.text.DateFormat _getDateFormat() -> _getDateFormat
    java.lang.String _shapeForToken(com.fasterxml.jackson.core.JsonToken) -> _shapeForToken
    com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
com.fasterxml.jackson.databind.DeserializationContext$1 -> com.fasterxml.jackson.databind.DeserializationContext$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.DeserializationFeature -> com.fasterxml.jackson.databind.DeserializationFeature:
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS -> USE_LONG_FOR_INTS
    com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE -> FAIL_ON_INVALID_SUBTYPE
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_READING_DUP_TREE_KEY -> FAIL_ON_READING_DUP_TREE_KEY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_IGNORED_PROPERTIES -> FAIL_ON_IGNORED_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNRESOLVED_OBJECT_IDS -> FAIL_ON_UNRESOLVED_OBJECT_IDS
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_CREATOR_PROPERTIES -> FAIL_ON_MISSING_CREATOR_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_CREATOR_PROPERTIES -> FAIL_ON_NULL_CREATOR_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY -> FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS -> FAIL_ON_TRAILING_TOKENS
    com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS -> UNWRAP_SINGLE_VALUE_ARRAYS
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT -> ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_FLOAT_AS_INT -> ACCEPT_FLOAT_AS_INT
    com.fasterxml.jackson.databind.DeserializationFeature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> READ_UNKNOWN_ENUM_VALUES_AS_NULL
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE
    com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> READ_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.databind.DeserializationFeature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> ADJUST_DATES_TO_CONTEXT_TIME_ZONE
    com.fasterxml.jackson.databind.DeserializationFeature EAGER_DESERIALIZER_FETCH -> EAGER_DESERIALIZER_FETCH
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.databind.DeserializationFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.DeserializationFeature[] values() -> values
    com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.EnumNamingStrategies -> com.fasterxml.jackson.databind.EnumNamingStrategies:
    void <init>() -> <init>
com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy -> com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy:
    com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String convertEnumToExternalName(java.lang.String) -> convertEnumToExternalName
    int indexIn(java.lang.CharSequence,int) -> indexIn
    java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    char charToUpperCaseIfLower(char) -> charToUpperCaseIfLower
    char charToLowerCaseIfUpper(char) -> charToLowerCaseIfUpper
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.EnumNamingStrategy -> com.fasterxml.jackson.databind.EnumNamingStrategy:
    java.lang.String convertEnumToExternalName(java.lang.String) -> convertEnumToExternalName
com.fasterxml.jackson.databind.InjectableValues -> com.fasterxml.jackson.databind.InjectableValues:
    void <init>() -> <init>
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.InjectableValues$Std -> com.fasterxml.jackson.databind.InjectableValues$Std:
    long serialVersionUID -> serialVersionUID
    java.util.Map _values -> _values
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.JavaType -> com.fasterxml.jackson.databind.JavaType:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _class -> _class
    int _hash -> _hash
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    boolean _asStatic -> _asStatic
    void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    com.fasterxml.jackson.databind.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean hasContentType() -> hasContentType
    boolean isTypeOrSubTypeOf(java.lang.Class) -> isTypeOrSubTypeOf
    boolean isTypeOrSuperTypeOf(java.lang.Class) -> isTypeOrSuperTypeOf
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isEnumImplType() -> isEnumImplType
    boolean isRecordType() -> isRecordType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean isJavaLangObject() -> isJavaLangObject
    boolean useStaticType() -> useStaticType
    boolean hasGenericTypes() -> hasGenericTypes
    com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Class getParameterSource() -> getParameterSource
    com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int) -> containedTypeOrUnknown
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    java.util.List getInterfaces() -> getInterfaces
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class) -> findTypeParameters
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.Object getContentValueHandler() -> getContentValueHandler
    java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    boolean hasValueHandler() -> hasValueHandler
    boolean hasHandlers() -> hasHandlers
    java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.JsonDeserializer -> com.fasterxml.jackson.databind.JsonDeserializer:
    void <init>() -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object) -> deserializeWithType
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    java.lang.Class handledType() -> handledType
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
com.fasterxml.jackson.databind.JsonDeserializer$None -> com.fasterxml.jackson.databind.JsonDeserializer$None:
    void <init>() -> <init>
com.fasterxml.jackson.databind.JsonMappingException -> com.fasterxml.jackson.databind.JsonMappingException:
    long serialVersionUID -> serialVersionUID
    int MAX_REFS_TO_LIST -> MAX_REFS_TO_LIST
    java.util.LinkedList _path -> _path
    java.io.Closeable _processor -> _processor
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    void <init>(java.io.Closeable,java.lang.String) -> <init>
    void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable) -> from
    com.fasterxml.jackson.core.JsonParser _parser(com.fasterxml.jackson.databind.DeserializationContext) -> _parser
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String,java.lang.Throwable) -> from
    com.fasterxml.jackson.core.JsonGenerator _generator(com.fasterxml.jackson.databind.SerializerProvider) -> _generator
    com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException) -> fromUnexpectedIOE
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference) -> wrapWithPath
    com.fasterxml.jackson.databind.JsonMappingException withCause(java.lang.Throwable) -> withCause
    java.util.List getPath() -> getPath
    java.lang.String getPathReference() -> getPathReference
    java.lang.StringBuilder getPathReference(java.lang.StringBuilder) -> getPathReference
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
    void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference) -> prependPath
    java.lang.Object getProcessor() -> getProcessor
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
    java.lang.String getMessage() -> getMessage
    java.lang.String _buildMessage() -> _buildMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
com.fasterxml.jackson.databind.JsonMappingException$Reference -> com.fasterxml.jackson.databind.JsonMappingException$Reference:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    java.lang.String _desc -> _desc
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,java.lang.String) -> <init>
    void <init>(java.lang.Object,int) -> <init>
    void setFieldName(java.lang.String) -> setFieldName
    void setIndex(int) -> setIndex
    void setDescription(java.lang.String) -> setDescription
    java.lang.Object getFrom() -> getFrom
    java.lang.String getFieldName() -> getFieldName
    int getIndex() -> getIndex
    java.lang.String getDescription() -> getDescription
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.JsonNode -> com.fasterxml.jackson.databind.JsonNode:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.databind.JsonNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    com.fasterxml.jackson.databind.JsonNode at(java.lang.String) -> at
    com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isShort() -> isShort
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isFloat() -> isFloat
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    java.lang.String textValue() -> textValue
    byte[] binaryValue() -> binaryValue
    boolean booleanValue() -> booleanValue
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    java.lang.String asText(java.lang.String) -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    com.fasterxml.jackson.databind.JsonNode require() -> require
    com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    com.fasterxml.jackson.databind.JsonNode required(int) -> required
    com.fasterxml.jackson.databind.JsonNode requiredAt(java.lang.String) -> requiredAt
    com.fasterxml.jackson.databind.JsonNode requiredAt(com.fasterxml.jackson.core.JsonPointer) -> requiredAt
    boolean has(java.lang.String) -> has
    boolean has(int) -> has
    boolean hasNonNull(java.lang.String) -> hasNonNull
    boolean hasNonNull(int) -> hasNonNull
    java.util.Iterator iterator() -> iterator
    java.util.Iterator elements() -> elements
    java.util.Iterator fields() -> fields
    java.util.Set properties() -> properties
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String) -> findValues
    java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    com.fasterxml.jackson.databind.node.ObjectNode withObject(java.lang.String) -> withObject
    com.fasterxml.jackson.databind.node.ObjectNode withObject(java.lang.String,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer) -> withObject
    com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer) -> withArray
    com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    java.lang.String toString() -> toString
    java.lang.String toPrettyString() -> toPrettyString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JsonNode _this() -> _this
    java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[]) -> _reportRequiredViolation
    com.fasterxml.jackson.core.TreeNode at(java.lang.String) -> at
    com.fasterxml.jackson.core.TreeNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.JsonNode$1 -> com.fasterxml.jackson.databind.JsonNode$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$node$JsonNodeType -> $SwitchMap$com$fasterxml$jackson$databind$node$JsonNodeType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.JsonNode$OverwriteMode -> com.fasterxml.jackson.databind.JsonNode$OverwriteMode:
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode NONE -> NONE
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode NULLS -> NULLS
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode SCALARS -> SCALARS
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode ALL -> ALL
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] values() -> values
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.JsonSerializable -> com.fasterxml.jackson.databind.JsonSerializable:
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.JsonSerializable$Base -> com.fasterxml.jackson.databind.JsonSerializable$Base:
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
com.fasterxml.jackson.databind.JsonSerializer -> com.fasterxml.jackson.databind.JsonSerializer:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.JsonSerializer replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer) -> replaceDelegatee
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
    boolean isEmpty(java.lang.Object) -> isEmpty
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    boolean usesObjectId() -> usesObjectId
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    java.util.Iterator properties() -> properties
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.JsonSerializer$None -> com.fasterxml.jackson.databind.JsonSerializer$None:
    void <init>() -> <init>
com.fasterxml.jackson.databind.KeyDeserializer -> com.fasterxml.jackson.databind.KeyDeserializer:
    void <init>() -> <init>
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.KeyDeserializer$None -> com.fasterxml.jackson.databind.KeyDeserializer$None:
    void <init>() -> <init>
com.fasterxml.jackson.databind.MapperFeature -> com.fasterxml.jackson.databind.MapperFeature:
    com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS -> USE_ANNOTATIONS
    com.fasterxml.jackson.databind.MapperFeature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    com.fasterxml.jackson.databind.MapperFeature PROPAGATE_TRANSIENT_MARKER -> PROPAGATE_TRANSIENT_MARKER
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    com.fasterxml.jackson.databind.MapperFeature ALLOW_FINAL_FIELDS_AS_MUTATORS -> ALLOW_FINAL_FIELDS_AS_MUTATORS
    com.fasterxml.jackson.databind.MapperFeature INFER_PROPERTY_MUTATORS -> INFER_PROPERTY_MUTATORS
    com.fasterxml.jackson.databind.MapperFeature INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES -> INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES
    com.fasterxml.jackson.databind.MapperFeature ALLOW_VOID_VALUED_PROPERTIES -> ALLOW_VOID_VALUED_PROPERTIES
    com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS -> OVERRIDE_PUBLIC_ACCESS_MODIFIERS
    com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING -> USE_STATIC_TYPING
    com.fasterxml.jackson.databind.MapperFeature USE_BASE_TYPE_AS_DEFAULT_IMPL -> USE_BASE_TYPE_AS_DEFAULT_IMPL
    com.fasterxml.jackson.databind.MapperFeature INFER_BUILDER_TYPE_BINDINGS -> INFER_BUILDER_TYPE_BINDINGS
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_TYPE_ID_FOR_SUBTYPES -> REQUIRE_TYPE_ID_FOR_SUBTYPES
    com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    com.fasterxml.jackson.databind.MapperFeature SORT_CREATOR_PROPERTIES_FIRST -> SORT_CREATOR_PROPERTIES_FIRST
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> ACCEPT_CASE_INSENSITIVE_PROPERTIES
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS -> ACCEPT_CASE_INSENSITIVE_ENUMS
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_VALUES -> ACCEPT_CASE_INSENSITIVE_VALUES
    com.fasterxml.jackson.databind.MapperFeature USE_WRAPPER_NAME_AS_PROPERTY_NAME -> USE_WRAPPER_NAME_AS_PROPERTY_NAME
    com.fasterxml.jackson.databind.MapperFeature USE_STD_BEAN_NAMING -> USE_STD_BEAN_NAMING
    com.fasterxml.jackson.databind.MapperFeature ALLOW_EXPLICIT_PROPERTY_RENAMING -> ALLOW_EXPLICIT_PROPERTY_RENAMING
    com.fasterxml.jackson.databind.MapperFeature ALLOW_IS_GETTERS_FOR_NON_BOOLEAN -> ALLOW_IS_GETTERS_FOR_NON_BOOLEAN
    com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS -> ALLOW_COERCION_OF_SCALARS
    com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS -> IGNORE_DUPLICATE_MODULE_REGISTRATIONS
    com.fasterxml.jackson.databind.MapperFeature IGNORE_MERGE_FOR_UNMERGEABLE -> IGNORE_MERGE_FOR_UNMERGEABLE
    com.fasterxml.jackson.databind.MapperFeature BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES -> BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES
    com.fasterxml.jackson.databind.MapperFeature APPLY_DEFAULT_VALUES -> APPLY_DEFAULT_VALUES
    boolean _defaultState -> _defaultState
    long _mask -> _mask
    com.fasterxml.jackson.databind.MapperFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.MapperFeature[] values() -> values
    com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String) -> valueOf
    long collectLongDefaults() -> collectLongDefaults
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    long getLongMask() -> getLongMask
    boolean enabledIn(int) -> enabledIn
    boolean enabledIn(long) -> enabledIn
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingIterator -> com.fasterxml.jackson.databind.MappingIterator:
    com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    int STATE_CLOSED -> STATE_CLOSED
    int STATE_NEED_RESYNC -> STATE_NEED_RESYNC
    int STATE_MAY_HAVE_VALUE -> STATE_MAY_HAVE_VALUE
    int STATE_HAS_VALUE -> STATE_HAS_VALUE
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.core.JsonStreamContext _seqContext -> _seqContext
    java.lang.Object _updatedValue -> _updatedValue
    boolean _closeParser -> _closeParser
    int _state -> _state
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.MappingIterator emptyIterator() -> emptyIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> close
    boolean hasNextValue() -> hasNextValue
    java.lang.Object nextValue() -> nextValue
    java.util.List readAll() -> readAll
    java.util.List readAll(java.util.List) -> readAll
    java.util.Collection readAll(java.util.Collection) -> readAll
    com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    com.fasterxml.jackson.core.FormatSchema getParserSchema() -> getParserSchema
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    void _resync() -> _resync
    java.lang.Object _throwNoSuchElement() -> _throwNoSuchElement
    java.lang.Object _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException) -> _handleMappingException
    java.lang.Object _handleIOException(java.io.IOException) -> _handleIOException
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingJsonFactory -> com.fasterxml.jackson.databind.MappingJsonFactory:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    com.fasterxml.jackson.databind.ObjectMapper getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonFactory copy() -> copy
    java.lang.String getFormatName() -> getFormatName
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
com.fasterxml.jackson.databind.Module -> com.fasterxml.jackson.databind.Module:
    void <init>() -> <init>
    java.lang.String getModuleName() -> getModuleName
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getTypeId() -> getTypeId
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    java.lang.Iterable getDependencies() -> getDependencies
com.fasterxml.jackson.databind.Module$SetupContext -> com.fasterxml.jackson.databind.Module$SetupContext:
    com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> setClassIntrospector
    void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
    void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper -> com.fasterxml.jackson.databind.ObjectMapper:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE -> DEFAULT_BASE
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> _jsonFactory
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> _configOverrides
    com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs -> _coercionConfigs
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> _mixIns
    com.fasterxml.jackson.databind.SerializationConfig _serializationConfig -> _serializationConfig
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig -> _deserializationConfig
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext -> _deserializationContext
    java.util.Set _registeredModuleTypes -> _registeredModuleTypes
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.core.JsonFactory) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector() -> defaultClassIntrospector
    com.fasterxml.jackson.databind.ObjectMapper copy() -> copy
    com.fasterxml.jackson.databind.ObjectMapper copyWith(com.fasterxml.jackson.core.JsonFactory) -> copyWith
    void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig) -> _newReader
    com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> _newReader
    com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig) -> _newWriter
    com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema) -> _newWriter
    com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter) -> _newWriter
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module) -> registerModule
    com.fasterxml.jackson.databind.ObjectMapper registerModules(com.fasterxml.jackson.databind.Module[]) -> registerModules
    com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable) -> registerModules
    java.util.Set getRegisteredModuleIds() -> getRegisteredModuleIds
    java.util.List findModules() -> findModules
    java.util.List findModules(java.lang.ClassLoader) -> findModules
    java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> secureGetServiceLoader
    com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules() -> findAndRegisterModules
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig() -> getSerializationConfig
    com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    com.fasterxml.jackson.databind.DeserializationContext getDeserializationContext() -> getDeserializationContext
    com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory) -> setSerializerFactory
    com.fasterxml.jackson.databind.ser.SerializerFactory getSerializerFactory() -> getSerializerFactory
    com.fasterxml.jackson.databind.ObjectMapper setSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> setSerializerProvider
    com.fasterxml.jackson.databind.SerializerProvider getSerializerProvider() -> getSerializerProvider
    com.fasterxml.jackson.databind.SerializerProvider getSerializerProviderInstance() -> getSerializerProviderInstance
    com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map) -> setMixIns
    com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class) -> addMixIn
    com.fasterxml.jackson.databind.ObjectMapper setMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> setMixInResolver
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
    void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setVisibility
    com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> setVisibility
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    com.fasterxml.jackson.databind.ObjectMapper setSubtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> setSubtypeResolver
    com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospector
    com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospectors(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospectors
    com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setPropertyNamingStrategy
    com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    com.fasterxml.jackson.databind.ObjectMapper setAccessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> setAccessorNaming
    com.fasterxml.jackson.databind.ObjectMapper setDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setDefaultPrettyPrinter
    void setVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setVisibilityChecker
    com.fasterxml.jackson.databind.ObjectMapper setPolymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> setPolymorphicTypeValidator
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> setSerializationInclusion
    com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setPropertyInclusion
    com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setDefaultPropertyInclusion
    com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> setDefaultPropertyInclusion
    com.fasterxml.jackson.databind.ObjectMapper setDefaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setDefaultSetterInfo
    com.fasterxml.jackson.databind.ObjectMapper setDefaultVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> setDefaultVisibility
    com.fasterxml.jackson.databind.ObjectMapper setDefaultMergeable(java.lang.Boolean) -> setDefaultMergeable
    com.fasterxml.jackson.databind.ObjectMapper setDefaultLeniency(java.lang.Boolean) -> setDefaultLeniency
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> activateDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> activateDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> activateDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> activateDefaultTypingAsProperty
    com.fasterxml.jackson.databind.ObjectMapper deactivateDefaultTyping() -> deactivateDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> setDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTypingAsProperty(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    com.fasterxml.jackson.databind.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigDefaults() -> coercionConfigDefaults
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType) -> coercionConfigFor
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(java.lang.Class) -> coercionConfigFor
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.ObjectMapper setTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> setTypeFactory
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    com.fasterxml.jackson.databind.ObjectMapper setNodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> setNodeFactory
    com.fasterxml.jackson.databind.ObjectMapper setConstructorDetector(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> setConstructorDetector
    com.fasterxml.jackson.databind.ObjectMapper addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addHandler
    com.fasterxml.jackson.databind.ObjectMapper clearProblemHandlers() -> clearProblemHandlers
    com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.DeserializationConfig) -> setConfig
    void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> setFilters
    com.fasterxml.jackson.databind.ObjectMapper setFilterProvider(com.fasterxml.jackson.databind.ser.FilterProvider) -> setFilterProvider
    com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(com.fasterxml.jackson.core.Base64Variant) -> setBase64Variant
    com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    com.fasterxml.jackson.core.JsonFactory tokenStreamFactory() -> tokenStreamFactory
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    com.fasterxml.jackson.databind.ObjectMapper setDateFormat(java.text.DateFormat) -> setDateFormat
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.Object setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> setHandlerInstantiator
    com.fasterxml.jackson.databind.ObjectMapper setInjectableValues(com.fasterxml.jackson.databind.InjectableValues) -> setInjectableValues
    com.fasterxml.jackson.databind.InjectableValues getInjectableValues() -> getInjectableValues
    com.fasterxml.jackson.databind.ObjectMapper setLocale(java.util.Locale) -> setLocale
    com.fasterxml.jackson.databind.ObjectMapper setTimeZone(java.util.TimeZone) -> setTimeZone
    com.fasterxml.jackson.databind.ObjectMapper setDefaultAttributes(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> setDefaultAttributes
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.MapperFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.MapperFeature[]) -> disable
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature) -> enable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature) -> disable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> disable
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature) -> enable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature) -> disable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> disable
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(byte[]) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(byte[],int,int) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.File) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.net.URL) -> readTree
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode) -> writeTree
    com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.databind.node.ArrayNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    com.fasterxml.jackson.databind.JsonNode nullNode() -> nullNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,com.fasterxml.jackson.databind.JavaType) -> treeToValue
    com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) -> valueToTree
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canSerialize(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> canSerialize
    boolean canDeserialize(com.fasterxml.jackson.databind.JavaType) -> canDeserialize
    boolean canDeserialize(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference) -> canDeserialize
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.File,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.DataInput,com.fasterxml.jackson.databind.JavaType) -> readValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.DataOutput,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    com.fasterxml.jackson.databind.ObjectWriter writer() -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(java.text.DateFormat) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    com.fasterxml.jackson.databind.ObjectWriter writerFor(java.lang.Class) -> writerFor
    com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.core.type.TypeReference) -> writerFor
    com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.databind.JavaType) -> writerFor
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.PrettyPrinter) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.ser.FilterProvider) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.FormatSchema) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.Base64Variant) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.io.CharacterEscapes) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.core.type.TypeReference) -> writerWithType
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.databind.JavaType) -> writerWithType
    com.fasterxml.jackson.databind.ObjectReader reader() -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> reader
    com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.databind.JavaType) -> readerFor
    com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class) -> readerFor
    com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.core.type.TypeReference) -> readerFor
    com.fasterxml.jackson.databind.ObjectReader readerForArrayOf(java.lang.Class) -> readerForArrayOf
    com.fasterxml.jackson.databind.ObjectReader readerForListOf(java.lang.Class) -> readerForListOf
    com.fasterxml.jackson.databind.ObjectReader readerForMapOf(java.lang.Class) -> readerForMapOf
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.FormatSchema) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.InjectableValues) -> reader
    com.fasterxml.jackson.databind.ObjectReader readerWithView(java.lang.Class) -> readerWithView
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.Base64Variant) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.JavaType) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(java.lang.Class) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.type.TypeReference) -> reader
    java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference) -> convertValue
    java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> convertValue
    java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _convert
    java.lang.Object updateValue(java.lang.Object,java.lang.Object) -> updateValue
    com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    void acceptJsonFormatVisitor(java.lang.Class,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _constructDefaultTypeResolverBuilder
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> _serializerProvider
    void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeValueAndClose
    void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _writeCloseable
    void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _writeCloseableValue
    void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readMapAndClose
    com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser) -> _readTreeAndClose
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> createDeserializationContext
    com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _initForReading
    void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findRootDeserializer
    void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$1 -> com.fasterxml.jackson.databind.ObjectMapper$1:
    com.fasterxml.jackson.databind.ObjectMapper this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> setClassIntrospector
    void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
    void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper$2 -> com.fasterxml.jackson.databind.ObjectMapper$2:
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.lang.Class val$clazz -> val$clazz
    void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    java.util.ServiceLoader run() -> run
    java.lang.Object run() -> run
com.fasterxml.jackson.databind.ObjectMapper$3 -> com.fasterxml.jackson.databind.ObjectMapper$3:
    int[] $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping -> $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder -> com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor -> _appliesFor
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator -> _subtypeValidator
    void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder,java.lang.Class) -> <init>
    java.lang.Object _requireNonNull(java.lang.Object,java.lang.String) -> _requireNonNull
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig) -> subTypeValidator
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    boolean useForType(com.fasterxml.jackson.databind.JavaType) -> useForType
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping -> com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping:
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> JAVA_LANG_OBJECT
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> OBJECT_AND_NON_CONCRETE
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> NON_CONCRETE_AND_ARRAYS
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_FINAL -> NON_FINAL
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping EVERYTHING -> EVERYTHING
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] values() -> values
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectReader -> com.fasterxml.jackson.databind.ObjectReader:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context -> _context
    com.fasterxml.jackson.core.JsonFactory _parserFactory -> _parserFactory
    boolean _unwrapRoot -> _unwrapRoot
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> _filter
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer -> _rootDeserializer
    java.lang.Object _valueToUpdate -> _valueToUpdate
    com.fasterxml.jackson.core.FormatSchema _schema -> _schema
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders -> _dataFormatReaders
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    com.fasterxml.jackson.databind.JavaType _jsonNodeType -> _jsonNodeType
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.filter.TokenFilter) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory) -> _new
    com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig) -> _new
    com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> _new
    com.fasterxml.jackson.databind.MappingIterator _newIterator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean) -> _newIterator
    com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _initForReading
    void _initForMultiRead(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _initForMultiRead
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.JsonParser$Feature) -> with
    com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.JsonParser$Feature) -> without
    com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.StreamReadFeature) -> with
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.StreamReadFeature) -> without
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.FormatFeature) -> with
    com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.FormatFeature) -> without
    com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectReader at(java.lang.String) -> at
    com.fasterxml.jackson.databind.ObjectReader at(com.fasterxml.jackson.core.JsonPointer) -> at
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.InjectableValues) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.JsonFactory) -> with
    com.fasterxml.jackson.databind.ObjectReader withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.ObjectReader withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.ObjectReader withoutRootName() -> withoutRootName
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.FormatSchema) -> with
    com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.databind.JavaType) -> forType
    com.fasterxml.jackson.databind.ObjectReader forType(java.lang.Class) -> forType
    com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.core.type.TypeReference) -> forType
    com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(java.lang.Class) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(java.lang.reflect.Type) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    com.fasterxml.jackson.databind.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    com.fasterxml.jackson.databind.ObjectReader withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.ObjectReader with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.ObjectReader with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.ObjectReader withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.ObjectReader[]) -> withFormatDetection
    com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders) -> withFormatDetection
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.ObjectReader withAttributes(java.util.Map) -> withAttributes
    com.fasterxml.jackson.databind.ObjectReader withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    com.fasterxml.jackson.databind.ObjectReader withoutAttribute(java.lang.Object) -> withoutAttribute
    com.fasterxml.jackson.databind.ObjectReader _with(com.fasterxml.jackson.databind.DeserializationConfig) -> _with
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    com.fasterxml.jackson.databind.InjectableValues getInjectableValues() -> getInjectableValues
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    com.fasterxml.jackson.databind.JsonNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.databind.JsonNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    com.fasterxml.jackson.databind.JsonNode nullNode() -> nullNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    java.lang.Object readValue(java.io.InputStream) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[]) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File) -> readValue
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.DataInput) -> readValue
    java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> readValue
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(byte[]) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(byte[],int,int) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.DataInput) -> readTree
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.InputStream) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.Reader) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.lang.String) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(byte[],int,int) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(byte[]) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.File) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.net.URL) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.DataInput) -> readValues
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,com.fasterxml.jackson.databind.JavaType) -> treeToValue
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    java.lang.Object _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bind
    java.lang.Object _bindAndClose(com.fasterxml.jackson.core.JsonParser) -> _bindAndClose
    com.fasterxml.jackson.databind.JsonNode _bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAndCloseAsTree
    com.fasterxml.jackson.databind.JsonNode _bindAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAsTree
    com.fasterxml.jackson.databind.JsonNode _bindAsTreeOrNull(com.fasterxml.jackson.core.JsonParser) -> _bindAsTreeOrNull
    com.fasterxml.jackson.databind.MappingIterator _bindAndReadValues(com.fasterxml.jackson.core.JsonParser) -> _bindAndReadValues
    com.fasterxml.jackson.core.JsonParser _considerFilter(com.fasterxml.jackson.core.JsonParser,boolean) -> _considerFilter
    void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    java.lang.Object _detectBindAndClose(byte[],int,int) -> _detectBindAndClose
    java.lang.Object _detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndClose
    com.fasterxml.jackson.databind.MappingIterator _detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndReadValues
    com.fasterxml.jackson.databind.JsonNode _detectBindAndCloseAsTree(java.io.InputStream) -> _detectBindAndCloseAsTree
    void _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders$Match) -> _reportUnkownFormat
    void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser) -> createDeserializationContext
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyDeserializationContext() -> createDummyDeserializationContext
    java.io.InputStream _inputStream(java.net.URL) -> _inputStream
    java.io.InputStream _inputStream(java.io.File) -> _inputStream
    void _reportUndetectableSource(java.lang.Object) -> _reportUndetectableSource
    com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findRootDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType) -> _prefetchRootDeserializer
    com.fasterxml.jackson.databind.JavaType _jsonNodeType() -> _jsonNodeType
    void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
com.fasterxml.jackson.databind.ObjectWriter -> com.fasterxml.jackson.databind.ObjectWriter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.core.JsonFactory _generatorFactory -> _generatorFactory
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings _generatorSettings -> _generatorSettings
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch _prefetch -> _prefetch
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory) -> _new
    com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig) -> _new
    com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> _new
    com.fasterxml.jackson.databind.SequenceWriter _newSequenceWriter(boolean,com.fasterxml.jackson.core.JsonGenerator,boolean) -> _newSequenceWriter
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.JsonGenerator$Feature) -> with
    com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.JsonGenerator$Feature) -> without
    com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.StreamWriteFeature) -> with
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.StreamWriteFeature) -> without
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.FormatFeature) -> with
    com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.FormatFeature) -> without
    com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectWriter forType(com.fasterxml.jackson.databind.JavaType) -> forType
    com.fasterxml.jackson.databind.ObjectWriter forType(java.lang.Class) -> forType
    com.fasterxml.jackson.databind.ObjectWriter forType(com.fasterxml.jackson.core.type.TypeReference) -> forType
    com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.ObjectWriter withType(java.lang.Class) -> withType
    com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    com.fasterxml.jackson.databind.ObjectWriter with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.ser.FilterProvider) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.PrettyPrinter) -> with
    com.fasterxml.jackson.databind.ObjectWriter withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.ObjectWriter withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.ObjectWriter withoutRootName() -> withoutRootName
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.FormatSchema) -> with
    com.fasterxml.jackson.databind.ObjectWriter withSchema(com.fasterxml.jackson.core.FormatSchema) -> withSchema
    com.fasterxml.jackson.databind.ObjectWriter withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.ObjectWriter with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.io.CharacterEscapes) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.JsonFactory) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.ObjectWriter withAttributes(java.util.Map) -> withAttributes
    com.fasterxml.jackson.databind.ObjectWriter withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    com.fasterxml.jackson.databind.ObjectWriter withoutAttribute(java.lang.Object) -> withoutAttribute
    com.fasterxml.jackson.databind.ObjectWriter withRootValueSeparator(java.lang.String) -> withRootValueSeparator
    com.fasterxml.jackson.databind.ObjectWriter withRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.File) -> writeValues
    com.fasterxml.jackson.databind.SequenceWriter writeValues(com.fasterxml.jackson.core.JsonGenerator) -> writeValues
    com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.Writer) -> writeValues
    com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.OutputStream) -> writeValues
    com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.DataOutput) -> writeValues
    com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.File) -> writeValuesAsArray
    com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator) -> writeValuesAsArray
    com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.Writer) -> writeValuesAsArray
    com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.OutputStream) -> writeValuesAsArray
    com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.DataOutput) -> writeValuesAsArray
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean hasPrefetchedSerializer() -> hasPrefetchedSerializer
    com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    void writeValue(java.io.DataOutput,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    void acceptJsonFormatVisitor(java.lang.Class,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canSerialize(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> canSerialize
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider() -> _serializerProvider
    void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeValueAndClose
    void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeCloseable
    com.fasterxml.jackson.core.JsonGenerator _configureGenerator(com.fasterxml.jackson.core.JsonGenerator) -> _configureGenerator
    void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings -> com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings empty -> empty
    com.fasterxml.jackson.core.PrettyPrinter prettyPrinter -> prettyPrinter
    com.fasterxml.jackson.core.FormatSchema schema -> schema
    com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes -> characterEscapes
    com.fasterxml.jackson.core.SerializableString rootValueSeparator -> rootValueSeparator
    void <init>(com.fasterxml.jackson.core.PrettyPrinter,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.core.io.CharacterEscapes,com.fasterxml.jackson.core.SerializableString) -> <init>
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.PrettyPrinter) -> with
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.FormatSchema) -> with
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.io.CharacterEscapes) -> with
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings withRootValueSeparator(java.lang.String) -> withRootValueSeparator
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings withRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootValueSeparator
    java.lang.String _rootValueSeparatorAsString() -> _rootValueSeparatorAsString
    void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$Prefetch -> com.fasterxml.jackson.databind.ObjectWriter$Prefetch:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch empty -> empty
    com.fasterxml.jackson.databind.JavaType rootType -> rootType
    com.fasterxml.jackson.databind.JsonSerializer valueSerializer -> valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer -> typeSerializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType) -> forRootType
    com.fasterxml.jackson.databind.JsonSerializer getValueSerializer() -> getValueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> getTypeSerializer
    boolean hasSerializer() -> hasSerializer
    void serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> serialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata -> com.fasterxml.jackson.databind.PropertyMetadata:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED -> STD_REQUIRED
    com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL -> STD_OPTIONAL
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED_OR_OPTIONAL -> STD_REQUIRED_OR_OPTIONAL
    java.lang.Boolean _required -> _required
    java.lang.String _description -> _description
    java.lang.Integer _index -> _index
    java.lang.String _defaultValue -> _defaultValue
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo _mergeInfo -> _mergeInfo
    com.fasterxml.jackson.annotation.Nulls _valueNulls -> _valueNulls
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> _contentNulls
    void <init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    com.fasterxml.jackson.databind.PropertyMetadata construct(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String) -> construct
    com.fasterxml.jackson.databind.PropertyMetadata construct(boolean,java.lang.String,java.lang.Integer,java.lang.String) -> construct
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.PropertyMetadata withDescription(java.lang.String) -> withDescription
    com.fasterxml.jackson.databind.PropertyMetadata withMergeInfo(com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo) -> withMergeInfo
    com.fasterxml.jackson.databind.PropertyMetadata withNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> withNulls
    com.fasterxml.jackson.databind.PropertyMetadata withDefaultValue(java.lang.String) -> withDefaultValue
    com.fasterxml.jackson.databind.PropertyMetadata withIndex(java.lang.Integer) -> withIndex
    com.fasterxml.jackson.databind.PropertyMetadata withRequired(java.lang.Boolean) -> withRequired
    java.lang.String getDescription() -> getDescription
    java.lang.String getDefaultValue() -> getDefaultValue
    boolean hasDefaultValue() -> hasDefaultValue
    boolean isRequired() -> isRequired
    java.lang.Boolean getRequired() -> getRequired
    java.lang.Integer getIndex() -> getIndex
    boolean hasIndex() -> hasIndex
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo getMergeInfo() -> getMergeInfo
    com.fasterxml.jackson.annotation.Nulls getValueNulls() -> getValueNulls
    com.fasterxml.jackson.annotation.Nulls getContentNulls() -> getContentNulls
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo -> com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getter -> getter
    boolean fromDefaults -> fromDefaults
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> <init>
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForDefaults(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForDefaults
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForTypeOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForTypeOverride
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForPropertyOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForPropertyOverride
com.fasterxml.jackson.databind.PropertyName -> com.fasterxml.jackson.databind.PropertyName:
    long serialVersionUID -> serialVersionUID
    java.lang.String _USE_DEFAULT -> _USE_DEFAULT
    java.lang.String _NO_NAME -> _NO_NAME
    com.fasterxml.jackson.databind.PropertyName USE_DEFAULT -> USE_DEFAULT
    com.fasterxml.jackson.databind.PropertyName NO_NAME -> NO_NAME
    java.lang.String _simpleName -> _simpleName
    java.lang.String _namespace -> _namespace
    com.fasterxml.jackson.core.SerializableString _encodedSimple -> _encodedSimple
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.PropertyName construct(java.lang.String) -> construct
    com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String) -> construct
    com.fasterxml.jackson.databind.PropertyName internSimpleName() -> internSimpleName
    com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.PropertyName withNamespace(java.lang.String) -> withNamespace
    java.lang.String getSimpleName() -> getSimpleName
    com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig) -> simpleAsEncoded
    java.lang.String getNamespace() -> getNamespace
    boolean hasSimpleName() -> hasSimpleName
    boolean hasSimpleName(java.lang.String) -> hasSimpleName
    boolean hasNamespace() -> hasNamespace
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies -> com.fasterxml.jackson.databind.PropertyNamingStrategies:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> LOWER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> SNAKE_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_SNAKE_CASE -> UPPER_SNAKE_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> LOWER_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> KEBAB_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE -> LOWER_DOT_CASE
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase -> com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
    java.lang.String translateLowerCaseWithSeparator(java.lang.String,char) -> translateLowerCaseWithSeparator
com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy INSTANCE -> INSTANCE
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> LOWER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> SNAKE_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> LOWER_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> KEBAB_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE -> LOWER_DOT_CASE
    com.fasterxml.jackson.databind.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    com.fasterxml.jackson.databind.PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE -> PASCAL_CASE_TO_CAMEL_CASE
    void <init>() -> <init>
    java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    void <init>() -> <init>
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerDotCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerDotCaseStrategy:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy:
    void <init>() -> <init>
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase -> com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase:
    void <init>() -> <init>
    java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
    java.lang.String translateLowerCaseWithSeparator(java.lang.String,char) -> translateLowerCaseWithSeparator
com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.RuntimeJsonMappingException -> com.fasterxml.jackson.databind.RuntimeJsonMappingException:
    void <init>(com.fasterxml.jackson.databind.JsonMappingException) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.databind.JsonMappingException) -> <init>
com.fasterxml.jackson.databind.SequenceWriter -> com.fasterxml.jackson.databind.SequenceWriter:
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider -> _provider
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.core.JsonGenerator _generator -> _generator
    com.fasterxml.jackson.databind.JsonSerializer _rootSerializer -> _rootSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    boolean _closeGenerator -> _closeGenerator
    boolean _cfgFlush -> _cfgFlush
    boolean _cfgCloseCloseable -> _cfgCloseCloseable
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _openArray -> _openArray
    boolean _closed -> _closed
    void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.core.JsonGenerator,boolean,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> <init>
    com.fasterxml.jackson.databind.SequenceWriter init(boolean) -> init
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object) -> write
    com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> write
    com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Object[]) -> writeAll
    com.fasterxml.jackson.databind.SequenceWriter writeAll(java.util.Collection) -> writeAll
    com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Iterable) -> writeAll
    void flush() -> flush
    void close() -> close
    com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object) -> _writeCloseableValue
    com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _writeCloseableValue
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(java.lang.Class) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.JavaType) -> _findAndAddDynamic
com.fasterxml.jackson.databind.SerializationConfig -> com.fasterxml.jackson.databind.SerializationConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.PrettyPrinter DEFAULT_PRETTY_PRINTER -> DEFAULT_PRETTY_PRINTER
    int SER_FEATURE_DEFAULTS -> SER_FEATURE_DEFAULTS
    com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider -> _filterProvider
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter -> _defaultPrettyPrinter
    int _serFeatures -> _serFeatures
    int _generatorFeatures -> _generatorFeatures
    int _generatorFeaturesToChange -> _generatorFeaturesToChange
    int _formatWriteFeatures -> _formatWriteFeatures
    int _formatWriteFeaturesToChange -> _formatWriteFeaturesToChange
    void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,long,int,int,int,int,int) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.FilterProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.PrettyPrinter) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    com.fasterxml.jackson.databind.SerializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    com.fasterxml.jackson.databind.SerializationConfig _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.SerializationConfig _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    com.fasterxml.jackson.databind.SerializationConfig withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.SerializationConfig withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.core.JsonGenerator$Feature) -> with
    com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withFeatures
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.core.JsonGenerator$Feature) -> without
    com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.core.FormatFeature) -> with
    com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.core.FormatFeature) -> without
    com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.SerializationConfig _withJsonWriteFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withJsonWriteFeatures
    com.fasterxml.jackson.databind.SerializationConfig _withoutJsonWriteFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withoutJsonWriteFeatures
    com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> withFilters
    com.fasterxml.jackson.databind.SerializationConfig withPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withPropertyInclusion
    com.fasterxml.jackson.databind.SerializationConfig withDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> withDefaultPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter() -> constructDefaultPrettyPrinter
    void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    com.fasterxml.jackson.annotation.JsonInclude$Include getSerializationInclusion() -> getSerializationInclusion
    boolean useRootWrapping() -> useRootWrapping
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature,com.fasterxml.jackson.core.JsonFactory) -> isEnabled
    boolean hasSerializationFeatures(int) -> hasSerializationFeatures
    int getSerializationFeatures() -> getSerializationFeatures
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    com.fasterxml.jackson.core.PrettyPrinter getDefaultPrettyPrinter() -> getDefaultPrettyPrinter
    com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializationFeature -> com.fasterxml.jackson.databind.SerializationFeature:
    com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT -> INDENT_OUTPUT
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_SELF_REFERENCES -> FAIL_ON_SELF_REFERENCES
    com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS -> FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SELF_REFERENCES_AS_NULL -> WRITE_SELF_REFERENCES_AS_NULL
    com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_ZONE_ID -> WRITE_DATES_WITH_ZONE_ID
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_CONTEXT_TIME_ZONE -> WRITE_DATES_WITH_CONTEXT_TIME_ZONE
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DURATIONS_AS_TIMESTAMPS -> WRITE_DURATIONS_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUM_KEYS_USING_INDEX -> WRITE_ENUM_KEYS_USING_INDEX
    com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED
    com.fasterxml.jackson.databind.SerializationFeature WRITE_BIGDECIMAL_AS_PLAIN -> WRITE_BIGDECIMAL_AS_PLAIN
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS
    com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS -> ORDER_MAP_ENTRIES_BY_KEYS
    com.fasterxml.jackson.databind.SerializationFeature EAGER_SERIALIZER_FETCH -> EAGER_SERIALIZER_FETCH
    com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID -> USE_EQUALITY_FOR_OBJECT_ID
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    com.fasterxml.jackson.databind.SerializationFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.SerializationFeature[] values() -> values
    com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializerProvider -> com.fasterxml.jackson.databind.SerializerProvider:
    boolean CACHE_UNKNOWN_MAPPINGS -> CACHE_UNKNOWN_MAPPINGS
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache -> _serializerCache
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    boolean _stdNullValueSerializer -> _stdNullValueSerializer
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    void setDefaultKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setDefaultKeySerializer
    void setNullValueSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullValueSerializer
    void setNullKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullKeySerializer
    com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    java.lang.Class getActiveView() -> getActiveView
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean hasSerializationFeatures(int) -> hasSerializationFeatures
    com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec) -> bufferForValueConversion
    com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion() -> bufferForValueConversion
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContentValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findContentValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findTypeSerializer(com.fasterxml.jackson.databind.JavaType) -> findTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer() -> getDefaultNullKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer() -> getDefaultNullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findNullKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) -> findNullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    boolean isUnknownTypeSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isUnknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handlePrimaryContextualization
    com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handleSecondaryContextualization
    void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeField(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeField
    void defaultSerializeDateValue(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeNull
    void reportMappingProblem(java.lang.String,java.lang.Object[]) -> reportMappingProblem
    java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Throwable) -> reportBadDefinition
    java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable) -> reportBadDefinition
    void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> reportMappingProblem
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> mappingException
    void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _reportIncompatibleRootType
    com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class) -> _findExplicitUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) -> _createAndCacheUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createAndCacheUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> _handleContextualResolvable
    com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) -> _handleResolvable
    java.text.DateFormat _dateFormat() -> _dateFormat
    com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.EnumNaming -> com.fasterxml.jackson.databind.annotation.EnumNaming:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JacksonStdImpl -> com.fasterxml.jackson.databind.annotation.JacksonStdImpl:
com.fasterxml.jackson.databind.annotation.JsonAppend -> com.fasterxml.jackson.databind.annotation.JsonAppend:
    com.fasterxml.jackson.databind.annotation.JsonAppend$Attr[] attrs() -> attrs
    com.fasterxml.jackson.databind.annotation.JsonAppend$Prop[] props() -> props
    boolean prepend() -> prepend
com.fasterxml.jackson.databind.annotation.JsonAppend$Attr -> com.fasterxml.jackson.databind.annotation.JsonAppend$Attr:
    java.lang.String value() -> value
    java.lang.String propName() -> propName
    java.lang.String propNamespace() -> propNamespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
com.fasterxml.jackson.databind.annotation.JsonAppend$Prop -> com.fasterxml.jackson.databind.annotation.JsonAppend$Prop:
    java.lang.Class value() -> value
    java.lang.String name() -> name
    java.lang.String namespace() -> namespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
    java.lang.Class type() -> type
com.fasterxml.jackson.databind.annotation.JsonDeserialize -> com.fasterxml.jackson.databind.annotation.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class builder() -> builder
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
com.fasterxml.jackson.databind.annotation.JsonNaming -> com.fasterxml.jackson.databind.annotation.JsonNaming:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder:
    java.lang.String DEFAULT_BUILD_METHOD -> DEFAULT_BUILD_METHOD
    java.lang.String DEFAULT_WITH_PREFIX -> DEFAULT_WITH_PREFIX
    java.lang.String buildMethodName() -> buildMethodName
    java.lang.String withPrefix() -> withPrefix
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value:
    java.lang.String buildMethodName -> buildMethodName
    java.lang.String withPrefix -> withPrefix
    void <init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
com.fasterxml.jackson.databind.annotation.JsonSerialize -> com.fasterxml.jackson.databind.annotation.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class nullsUsing() -> nullsUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing typing() -> typing
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion include() -> include
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion DEFAULT_INCLUSION -> DEFAULT_INCLUSION
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values() -> values
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC -> STATIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DEFAULT_TYPING -> DEFAULT_TYPING
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values() -> values
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonTypeResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonValueInstantiator -> com.fasterxml.jackson.databind.annotation.JsonValueInstantiator:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.NoClass -> com.fasterxml.jackson.databind.annotation.NoClass:
    void <init>() -> <init>
com.fasterxml.jackson.databind.annotation.package-info -> com.fasterxml.jackson.databind.annotation.package-info:
com.fasterxml.jackson.databind.cfg.BaseSettings -> com.fasterxml.jackson.databind.cfg.BaseSettings:
    long serialVersionUID -> serialVersionUID
    java.util.TimeZone DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector -> _classIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider _accessorNaming -> _accessorNaming
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _typeValidator -> _typeValidator
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    java.util.Locale _locale -> _locale
    java.util.TimeZone _timeZone -> _timeZone
    com.fasterxml.jackson.core.Base64Variant _defaultBase64 -> _defaultBase64
    void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    com.fasterxml.jackson.databind.cfg.BaseSettings copy() -> copy
    com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> withClassIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> withPropertyNamingStrategy
    com.fasterxml.jackson.databind.cfg.BaseSettings withAccessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> withAccessorNaming
    com.fasterxml.jackson.databind.cfg.BaseSettings withTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> withTypeFactory
    com.fasterxml.jackson.databind.cfg.BaseSettings withTypeResolverBuilder(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    com.fasterxml.jackson.databind.cfg.BaseSettings withDateFormat(java.text.DateFormat) -> withDateFormat
    com.fasterxml.jackson.databind.cfg.BaseSettings withHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> withHandlerInstantiator
    com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.BaseSettings with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.cfg.BaseSettings with(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> with
    com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming() -> getAccessorNaming
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    java.text.DateFormat getDateFormat() -> getDateFormat
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean hasExplicitTimeZone() -> hasExplicitTimeZone
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    java.text.DateFormat _force(java.text.DateFormat,java.util.TimeZone) -> _force
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionAction -> com.fasterxml.jackson.databind.cfg.CoercionAction:
    com.fasterxml.jackson.databind.cfg.CoercionAction Fail -> Fail
    com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert -> TryConvert
    com.fasterxml.jackson.databind.cfg.CoercionAction AsNull -> AsNull
    com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty -> AsEmpty
    com.fasterxml.jackson.databind.cfg.CoercionAction[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.cfg.CoercionAction[] values() -> values
    com.fasterxml.jackson.databind.cfg.CoercionAction valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfig -> com.fasterxml.jackson.databind.cfg.CoercionConfig:
    long serialVersionUID -> serialVersionUID
    int INPUT_SHAPE_COUNT -> INPUT_SHAPE_COUNT
    java.lang.Boolean _acceptBlankAsEmpty -> _acceptBlankAsEmpty
    com.fasterxml.jackson.databind.cfg.CoercionAction[] _coercionsByShape -> _coercionsByShape
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.CoercionConfig) -> <init>
    com.fasterxml.jackson.databind.cfg.CoercionAction findAction(com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findAction
    java.lang.Boolean getAcceptBlankAsEmpty() -> getAcceptBlankAsEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfigs -> com.fasterxml.jackson.databind.cfg.CoercionConfigs:
    long serialVersionUID -> serialVersionUID
    int TARGET_TYPE_COUNT -> TARGET_TYPE_COUNT
    com.fasterxml.jackson.databind.cfg.CoercionAction _defaultAction -> _defaultAction
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig _defaultCoercions -> _defaultCoercions
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig[] _perTypeCoercions -> _perTypeCoercions
    java.util.Map _perClassCoercions -> _perClassCoercions
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.CoercionAction,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig[],java.util.Map) -> <init>
    com.fasterxml.jackson.databind.cfg.CoercionConfigs copy() -> copy
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig _copy(com.fasterxml.jackson.databind.cfg.MutableCoercionConfig) -> _copy
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig defaultCoercions() -> defaultCoercions
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(com.fasterxml.jackson.databind.type.LogicalType) -> findOrCreateCoercion
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(java.lang.Class) -> findOrCreateCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercion(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    boolean _isScalarType(com.fasterxml.jackson.databind.type.LogicalType) -> _isScalarType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfigs$1 -> com.fasterxml.jackson.databind.cfg.CoercionConfigs$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionInputShape -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionInputShape
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionInputShape -> com.fasterxml.jackson.databind.cfg.CoercionInputShape:
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Array -> Array
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Object -> Object
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer -> Integer
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Float -> Float
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Boolean -> Boolean
    com.fasterxml.jackson.databind.cfg.CoercionInputShape String -> String
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Binary -> Binary
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyArray -> EmptyArray
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyObject -> EmptyObject
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString -> EmptyString
    com.fasterxml.jackson.databind.cfg.CoercionInputShape[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.cfg.CoercionInputShape[] values() -> values
    com.fasterxml.jackson.databind.cfg.CoercionInputShape valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigFeature -> com.fasterxml.jackson.databind.cfg.ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.databind.cfg.ConfigOverride -> com.fasterxml.jackson.databind.cfg.ConfigOverride:
    com.fasterxml.jackson.annotation.JsonFormat$Value _format -> _format
    com.fasterxml.jackson.annotation.JsonInclude$Value _include -> _include
    com.fasterxml.jackson.annotation.JsonInclude$Value _includeAsProperty -> _includeAsProperty
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value _ignorals -> _ignorals
    com.fasterxml.jackson.annotation.JsonSetter$Value _setterInfo -> _setterInfo
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value _visibility -> _visibility
    java.lang.Boolean _isIgnoredType -> _isIgnoredType
    java.lang.Boolean _mergeable -> _mergeable
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.ConfigOverride) -> <init>
    com.fasterxml.jackson.databind.cfg.ConfigOverride empty() -> empty
    com.fasterxml.jackson.annotation.JsonFormat$Value getFormat() -> getFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value getInclude() -> getInclude
    com.fasterxml.jackson.annotation.JsonInclude$Value getIncludeAsProperty() -> getIncludeAsProperty
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getIgnorals() -> getIgnorals
    java.lang.Boolean getIsIgnoredType() -> getIsIgnoredType
    com.fasterxml.jackson.annotation.JsonSetter$Value getSetterInfo() -> getSetterInfo
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value getVisibility() -> getVisibility
    java.lang.Boolean getMergeable() -> getMergeable
com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty -> com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty:
    com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty INSTANCE -> INSTANCE
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigOverrides -> com.fasterxml.jackson.databind.cfg.ConfigOverrides:
    long serialVersionUID -> serialVersionUID
    java.util.Map _overrides -> _overrides
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> _defaultInclusion
    com.fasterxml.jackson.annotation.JsonSetter$Value _defaultSetterInfo -> _defaultSetterInfo
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    java.lang.Boolean _defaultMergeable -> _defaultMergeable
    java.lang.Boolean _defaultLeniency -> _defaultLeniency
    void <init>() -> <init>
    void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean,java.lang.Boolean) -> <init>
    void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.cfg.ConfigOverrides copy() -> copy
    com.fasterxml.jackson.databind.cfg.ConfigOverride findOverride(java.lang.Class) -> findOverride
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride findOrCreateOverride(java.lang.Class) -> findOrCreateOverride
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatDefaults(java.lang.Class) -> findFormatDefaults
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion() -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    java.lang.Boolean getDefaultLeniency() -> getDefaultLeniency
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility() -> getDefaultVisibility
    void setDefaultInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setDefaultInclusion
    void setDefaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setDefaultSetterInfo
    void setDefaultMergeable(java.lang.Boolean) -> setDefaultMergeable
    void setDefaultLeniency(java.lang.Boolean) -> setDefaultLeniency
    void setDefaultVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setDefaultVisibility
    java.util.Map _newMap() -> _newMap
com.fasterxml.jackson.databind.cfg.ConstructorDetector -> com.fasterxml.jackson.databind.cfg.ConstructorDetector:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.cfg.ConstructorDetector DEFAULT -> DEFAULT
    com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_PROPERTIES_BASED -> USE_PROPERTIES_BASED
    com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_DELEGATING -> USE_DELEGATING
    com.fasterxml.jackson.databind.cfg.ConstructorDetector EXPLICIT_ONLY -> EXPLICIT_ONLY
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor _singleArgMode -> _singleArgMode
    boolean _requireCtorAnnotation -> _requireCtorAnnotation
    boolean _allowJDKTypeCtors -> _allowJDKTypeCtors
    void <init>(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor) -> <init>
    com.fasterxml.jackson.databind.cfg.ConstructorDetector withSingleArgMode(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor) -> withSingleArgMode
    com.fasterxml.jackson.databind.cfg.ConstructorDetector withRequireAnnotation(boolean) -> withRequireAnnotation
    com.fasterxml.jackson.databind.cfg.ConstructorDetector withAllowJDKTypeConstructors(boolean) -> withAllowJDKTypeConstructors
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor singleArgMode() -> singleArgMode
    boolean requireCtorAnnotation() -> requireCtorAnnotation
    boolean allowJDKTypeConstructors() -> allowJDKTypeConstructors
    boolean singleArgCreatorDefaultsToDelegating() -> singleArgCreatorDefaultsToDelegating
    boolean singleArgCreatorDefaultsToProperties() -> singleArgCreatorDefaultsToProperties
    boolean shouldIntrospectorImplicitConstructors(java.lang.Class) -> shouldIntrospectorImplicitConstructors
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor -> com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor:
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor DELEGATING -> DELEGATING
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor PROPERTIES -> PROPERTIES
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor HEURISTIC -> HEURISTIC
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor REQUIRE_MODE -> REQUIRE_MODE
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor[] values() -> values
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ContextAttributes -> com.fasterxml.jackson.databind.cfg.ContextAttributes:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttribute(java.lang.Object,java.lang.Object) -> withSharedAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttributes(java.util.Map) -> withSharedAttributes
    com.fasterxml.jackson.databind.cfg.ContextAttributes withoutSharedAttribute(java.lang.Object) -> withoutSharedAttribute
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl -> com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl EMPTY -> EMPTY
    java.lang.Object NULL_SURROGATE -> NULL_SURROGATE
    java.util.Map _shared -> _shared
    java.util.Map _nonShared -> _nonShared
    void <init>(java.util.Map) -> <init>
    void <init>(java.util.Map,java.util.Map) -> <init>
    com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttribute(java.lang.Object,java.lang.Object) -> withSharedAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttributes(java.util.Map) -> withSharedAttributes
    com.fasterxml.jackson.databind.cfg.ContextAttributes withoutSharedAttribute(java.lang.Object) -> withoutSharedAttribute
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes nonSharedInstance(java.lang.Object,java.lang.Object) -> nonSharedInstance
    java.util.Map _copy(java.util.Map) -> _copy
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DatatypeFeature -> com.fasterxml.jackson.databind.cfg.DatatypeFeature:
    int featureIndex() -> featureIndex
com.fasterxml.jackson.databind.cfg.DatatypeFeatures -> com.fasterxml.jackson.databind.cfg.DatatypeFeatures:
    long serialVersionUID -> serialVersionUID
    int FEATURE_INDEX_ENUM -> FEATURE_INDEX_ENUM
    int FEATURE_INDEX_JSON_NODE -> FEATURE_INDEX_JSON_NODE
    int _enabledFor1 -> _enabledFor1
    int _enabledFor2 -> _enabledFor2
    int _explicitFor1 -> _explicitFor1
    int _explicitFor2 -> _explicitFor2
    void <init>(int,int,int,int) -> <init>
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures defaultFeatures() -> defaultFeatures
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures _with(int,int,int,int) -> _with
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    int _calcMask(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> _calcMask
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    boolean isExplicitlySet(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlySet
    boolean isExplicitlyEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlyEnabled
    boolean isExplicitlyDisabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlyDisabled
    java.lang.Boolean getExplicitState(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> getExplicitState
com.fasterxml.jackson.databind.cfg.DatatypeFeatures$DefaultHolder -> com.fasterxml.jackson.databind.cfg.DatatypeFeatures$DefaultHolder:
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures DEFAULT_FEATURES -> DEFAULT_FEATURES
    void <init>() -> <init>
    int collectDefaults(java.lang.Enum[]) -> collectDefaults
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDefault() -> getDefault
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS -> DEFAULT_KEY_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[]) -> <init>
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.EnumFeature -> com.fasterxml.jackson.databind.cfg.EnumFeature:
    com.fasterxml.jackson.databind.cfg.EnumFeature READ_ENUM_KEYS_USING_INDEX -> READ_ENUM_KEYS_USING_INDEX
    com.fasterxml.jackson.databind.cfg.EnumFeature WRITE_ENUMS_TO_LOWERCASE -> WRITE_ENUMS_TO_LOWERCASE
    int FEATURE_INDEX -> FEATURE_INDEX
    boolean _enabledByDefault -> _enabledByDefault
    int _mask -> _mask
    com.fasterxml.jackson.databind.cfg.EnumFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.cfg.EnumFeature[] values() -> values
    com.fasterxml.jackson.databind.cfg.EnumFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    int featureIndex() -> featureIndex
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.HandlerInstantiator -> com.fasterxml.jackson.databind.cfg.HandlerInstantiator:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> serializerInstance
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> objectIdGeneratorInstance
    com.fasterxml.jackson.annotation.ObjectIdResolver resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> resolverIdGeneratorInstance
    com.fasterxml.jackson.databind.PropertyNamingStrategy namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> namingStrategyInstance
    com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> converterInstance
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> virtualPropertyWriterInstance
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
com.fasterxml.jackson.databind.cfg.JsonNodeFeature -> com.fasterxml.jackson.databind.cfg.JsonNodeFeature:
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature READ_NULL_PROPERTIES -> READ_NULL_PROPERTIES
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature WRITE_NULL_PROPERTIES -> WRITE_NULL_PROPERTIES
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature STRIP_TRAILING_BIGDECIMAL_ZEROES -> STRIP_TRAILING_BIGDECIMAL_ZEROES
    int FEATURE_INDEX -> FEATURE_INDEX
    boolean _enabledByDefault -> _enabledByDefault
    int _mask -> _mask
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature[] values() -> values
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,boolean) -> <init>
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
    int featureIndex() -> featureIndex
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperBuilder -> com.fasterxml.jackson.databind.cfg.MapperBuilder:
    com.fasterxml.jackson.databind.ObjectMapper _mapper -> _mapper
    void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    com.fasterxml.jackson.databind.ObjectMapper build() -> build
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.TokenStreamFactory streamFactory() -> streamFactory
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.MapperFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.MapperFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.SerializationFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.SerializationFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.DeserializationFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.DeserializationFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.StreamReadFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.StreamReadFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.StreamReadFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature[]) -> enable
    com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature[]) -> disable
    com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean) -> configure
    com.fasterxml.jackson.databind.cfg.MapperBuilder withConfigOverride(java.lang.Class,java.util.function.Consumer) -> withConfigOverride
    com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfig(com.fasterxml.jackson.databind.type.LogicalType,java.util.function.Consumer) -> withCoercionConfig
    com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfig(java.lang.Class,java.util.function.Consumer) -> withCoercionConfig
    com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfigDefaults(java.util.function.Consumer) -> withCoercionConfigDefaults
    com.fasterxml.jackson.databind.cfg.MapperBuilder addModule(com.fasterxml.jackson.databind.Module) -> addModule
    com.fasterxml.jackson.databind.cfg.MapperBuilder addModules(com.fasterxml.jackson.databind.Module[]) -> addModules
    com.fasterxml.jackson.databind.cfg.MapperBuilder addModules(java.lang.Iterable) -> addModules
    java.util.List findModules() -> findModules
    java.util.List findModules(java.lang.ClassLoader) -> findModules
    java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> secureGetServiceLoader
    com.fasterxml.jackson.databind.cfg.MapperBuilder findAndAddModules() -> findAndAddModules
    com.fasterxml.jackson.databind.cfg.MapperBuilder annotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> annotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultAttributes(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> defaultAttributes
    com.fasterxml.jackson.databind.cfg.MapperBuilder typeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> typeFactory
    com.fasterxml.jackson.databind.cfg.MapperBuilder subtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> subtypeResolver
    com.fasterxml.jackson.databind.cfg.MapperBuilder visibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> visibility
    com.fasterxml.jackson.databind.cfg.MapperBuilder visibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> visibility
    com.fasterxml.jackson.databind.cfg.MapperBuilder handlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> handlerInstantiator
    com.fasterxml.jackson.databind.cfg.MapperBuilder propertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> propertyNamingStrategy
    com.fasterxml.jackson.databind.cfg.MapperBuilder accessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> accessorNaming
    com.fasterxml.jackson.databind.cfg.MapperBuilder serializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory) -> serializerFactory
    com.fasterxml.jackson.databind.cfg.MapperBuilder filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider) -> filterProvider
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> defaultPrettyPrinter
    com.fasterxml.jackson.databind.cfg.MapperBuilder injectableValues(com.fasterxml.jackson.databind.InjectableValues) -> injectableValues
    com.fasterxml.jackson.databind.cfg.MapperBuilder nodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> nodeFactory
    com.fasterxml.jackson.databind.cfg.MapperBuilder constructorDetector(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> constructorDetector
    com.fasterxml.jackson.databind.cfg.MapperBuilder addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addHandler
    com.fasterxml.jackson.databind.cfg.MapperBuilder clearProblemHandlers() -> clearProblemHandlers
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> defaultSetterInfo
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultMergeable(java.lang.Boolean) -> defaultMergeable
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultLeniency(java.lang.Boolean) -> defaultLeniency
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultDateFormat(java.text.DateFormat) -> defaultDateFormat
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultTimeZone(java.util.TimeZone) -> defaultTimeZone
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultLocale(java.util.Locale) -> defaultLocale
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultBase64Variant(com.fasterxml.jackson.core.Base64Variant) -> defaultBase64Variant
    com.fasterxml.jackson.databind.cfg.MapperBuilder serializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> serializationInclusion
    com.fasterxml.jackson.databind.cfg.MapperBuilder defaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> defaultPropertyInclusion
    com.fasterxml.jackson.databind.cfg.MapperBuilder addMixIn(java.lang.Class,java.lang.Class) -> addMixIn
    com.fasterxml.jackson.databind.cfg.MapperBuilder removeMixIn(java.lang.Class) -> removeMixIn
    com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(java.lang.Class[]) -> registerSubtypes
    com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(java.util.Collection) -> registerSubtypes
    com.fasterxml.jackson.databind.cfg.MapperBuilder polymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> polymorphicTypeValidator
    com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> activateDefaultTyping
    com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> activateDefaultTyping
    com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> activateDefaultTyping
    com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> activateDefaultTypingAsProperty
    com.fasterxml.jackson.databind.cfg.MapperBuilder deactivateDefaultTyping() -> deactivateDefaultTyping
    com.fasterxml.jackson.databind.cfg.MapperBuilder setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> setDefaultTyping
    com.fasterxml.jackson.databind.cfg.MapperBuilder _this() -> _this
com.fasterxml.jackson.databind.cfg.MapperBuilder$1 -> com.fasterxml.jackson.databind.cfg.MapperBuilder$1:
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.lang.Class val$clazz -> val$clazz
    void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    java.util.ServiceLoader run() -> run
    java.lang.Object run() -> run
com.fasterxml.jackson.databind.cfg.MapperConfig -> com.fasterxml.jackson.databind.cfg.MapperConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> EMPTY_FORMAT
    long _mapperFeatures -> _mapperFeatures
    com.fasterxml.jackson.databind.cfg.BaseSettings _base -> _base
    void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,long) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,long) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean hasMapperFeatures(int) -> hasMapperFeatures
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    boolean useRootWrapping() -> useRootWrapping
    com.fasterxml.jackson.core.SerializableString compileString(java.lang.String) -> compileString
    com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming() -> getAccessorNaming
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType) -> getDefaultTyper
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.cfg.ConfigOverride findConfigOverride(java.lang.Class) -> findConfigOverride
    com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyInclusions
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    java.lang.Boolean getDefaultMergeable(java.lang.Class) -> getDefaultMergeable
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean hasExplicitTimeZone() -> hasExplicitTimeZone
    java.lang.Class getActiveView() -> getActiveView
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> findRootName
    com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> findRootName
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperConfigBase -> com.fasterxml.jackson.databind.cfg.MapperConfigBase:
    com.fasterxml.jackson.databind.cfg.ConfigOverride EMPTY_OVERRIDE -> EMPTY_OVERRIDE
    long DEFAULT_MAPPER_FEATURES -> DEFAULT_MAPPER_FEATURES
    long AUTO_DETECT_MASK -> AUTO_DETECT_MASK
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> _mixIns
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    com.fasterxml.jackson.databind.PropertyName _rootName -> _rootName
    java.lang.Class _view -> _view
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> _attributes
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> _rootNames
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> _configOverrides
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures _datatypeFeatures -> _datatypeFeatures
    void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,long) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures _datatypeFeatures() -> _datatypeFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAttributes(java.util.Map) -> withAttributes
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withoutAttribute(java.lang.Object) -> withoutAttribute
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    java.lang.String getRootName() -> getRootName
    com.fasterxml.jackson.databind.PropertyName getFullRootName() -> getFullRootName
    java.lang.Class getActiveView() -> getActiveView
    com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    com.fasterxml.jackson.databind.cfg.ConfigOverride findConfigOverride(java.lang.Class) -> findConfigOverride
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyInclusions
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    java.lang.Boolean getDefaultMergeable(java.lang.Class) -> getDefaultMergeable
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> findRootName
    com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> findRootName
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
    int mixInCount() -> mixInCount
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig -> com.fasterxml.jackson.databind.cfg.MutableCoercionConfig:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MutableCoercionConfig) -> <init>
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig copy() -> copy
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction) -> setCoercion
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setAcceptBlankAsEmpty(java.lang.Boolean) -> setAcceptBlankAsEmpty
com.fasterxml.jackson.databind.cfg.MutableConfigOverride -> com.fasterxml.jackson.databind.cfg.MutableConfigOverride:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MutableConfigOverride) -> <init>
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride copy() -> copy
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> setFormat
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setInclude(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setInclude
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIncludeAsProperty(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setIncludeAsProperty
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIgnorals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> setIgnorals
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIsIgnoredType(java.lang.Boolean) -> setIsIgnoredType
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setSetterInfo
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> setVisibility
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride setMergeable(java.lang.Boolean) -> setMergeable
com.fasterxml.jackson.databind.cfg.PackageVersion -> com.fasterxml.jackson.databind.cfg.PackageVersion:
    com.fasterxml.jackson.core.Version VERSION -> VERSION
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers -> _additionalSerializers
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]) -> <init>
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.package-info -> com.fasterxml.jackson.databind.cfg.package-info:
com.fasterxml.jackson.databind.deser.AbstractDeserializer -> com.fasterxml.jackson.databind.deser.AbstractDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    java.util.Map _backRefProperties -> _backRefProperties
    java.util.Map _properties -> _properties
    boolean _acceptString -> _acceptString
    boolean _acceptBoolean -> _acceptBoolean
    boolean _acceptInt -> _acceptInt
    boolean _acceptDouble -> _acceptDouble
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map,java.util.Map) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map) -> <init>
    void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map) -> <init>
    com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription) -> constructForNonPOJO
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Class handledType() -> handledType
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeIfNatural
    java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromObjectId
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:
    java.lang.Class CLASS_OBJECT -> CLASS_OBJECT
    java.lang.Class CLASS_STRING -> CLASS_STRING
    java.lang.Class CLASS_CHAR_SEQUENCE -> CLASS_CHAR_SEQUENCE
    java.lang.Class CLASS_ITERABLE -> CLASS_ITERABLE
    java.lang.Class CLASS_MAP_ENTRY -> CLASS_MAP_ENTRY
    java.lang.Class CLASS_SERIALIZABLE -> CLASS_SERIALIZABLE
    com.fasterxml.jackson.databind.PropertyName UNWRAPPED_CREATOR_PARAM_NAME -> UNWRAPPED_CREATOR_PARAM_NAME
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig -> _factoryConfig
    void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.JavaType _mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _mapAbstractType2
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _constructDefaultValueInstantiator
    java.util.Map _findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _findCreatorsFromProperties
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> _valueInstantiatorInstance
    void _addRecordConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List) -> _addRecordConstructor
    void _addExplicitConstructorCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,boolean) -> _addExplicitConstructorCreators
    void _addImplicitConstructorCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,java.util.List) -> _addImplicitConstructorCreators
    void _addExplicitFactoryCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,boolean) -> _addExplicitFactoryCreators
    void _addImplicitFactoryCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,java.util.List) -> _addImplicitFactoryCreators
    void _addExplicitDelegatingCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitDelegatingCreator
    void _addExplicitPropertyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitPropertyCreator
    void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitAnyCreator
    void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate,com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> _addExplicitAnyCreator
    boolean _checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> _checkIfCreatorPropertyBased
    void _checkImplicitlyNamedConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.List) -> _checkImplicitlyNamedConstructors
    boolean _handleSingleArgumentCreator(com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,boolean) -> _handleSingleArgumentCreator
    void _validateNamedPropertyParameter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate,int,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.JacksonInject$Value) -> _validateNamedPropertyParameter
    void _reportUnwrappedCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _reportUnwrappedCreatorProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.annotation.JacksonInject$Value) -> constructCreatorProperty
    com.fasterxml.jackson.databind.PropertyName _findParamName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _findParamName
    com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> _getSetterInfo
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.type.CollectionType _mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> _mapAbstractCollectionType
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.type.MapType _mapAbstractMapType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> _mapAbstractMapType
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findOptionalStdDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _createEnumKeyDeserializer
    boolean hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasExplicitDeserializerFor
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findDefaultDeserializer
    com.fasterxml.jackson.databind.JavaType _findRemappedType(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _findRemappedType
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializerFromAnnotation
    com.fasterxml.jackson.databind.JsonDeserializer findContentDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializerFromAnnotation
    com.fasterxml.jackson.databind.JavaType resolveMemberAndTypeAnnotations(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> resolveMemberAndTypeAnnotations
    com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructEnumResolver
    com.fasterxml.jackson.databind.util.EnumResolver constructEnumNamingStrategyResolver(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> constructEnumNamingStrategyResolver
    boolean _hasCreatorAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> _hasCreatorAnnotation
    com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    com.fasterxml.jackson.databind.JavaType resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> resolveType
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _findJsonValueFor(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _findJsonValueFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1 -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode -> $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$ConstructorDetector$SingleArgConstructor -> $SwitchMap$com$fasterxml$jackson$databind$cfg$ConstructorDetector$SingleArgConstructor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$ContainerDefaultMappings -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$ContainerDefaultMappings:
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    void <init>() -> <init>
    java.lang.Class findCollectionFallback(com.fasterxml.jackson.databind.JavaType) -> findCollectionFallback
    java.lang.Class findMapFallback(com.fasterxml.jackson.databind.JavaType) -> findMapFallback
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState:
    com.fasterxml.jackson.databind.DeserializationContext context -> context
    com.fasterxml.jackson.databind.BeanDescription beanDesc -> beanDesc
    com.fasterxml.jackson.databind.introspect.VisibilityChecker vchecker -> vchecker
    com.fasterxml.jackson.databind.deser.impl.CreatorCollector creators -> creators
    java.util.Map creatorParams -> creatorParams
    java.util.List _implicitFactoryCandidates -> _implicitFactoryCandidates
    int _explicitFactoryCount -> _explicitFactoryCount
    java.util.List _implicitConstructorCandidates -> _implicitConstructorCandidates
    int _explicitConstructorCount -> _explicitConstructorCount
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> <init>
    com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector() -> annotationIntrospector
    void addImplicitFactoryCandidate(com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> addImplicitFactoryCandidate
    void increaseExplicitFactoryCount() -> increaseExplicitFactoryCount
    boolean hasExplicitFactories() -> hasExplicitFactories
    boolean hasImplicitFactoryCandidates() -> hasImplicitFactoryCandidates
    java.util.List implicitFactoryCandidates() -> implicitFactoryCandidates
    void addImplicitConstructorCandidate(com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> addImplicitConstructorCandidate
    void increaseExplicitConstructorCount() -> increaseExplicitConstructorCount
    boolean hasExplicitConstructors() -> hasExplicitConstructors
    boolean hasImplicitConstructorCandidates() -> hasImplicitConstructorCandidates
    java.util.List implicitConstructorCandidates() -> implicitConstructorCandidates
com.fasterxml.jackson.databind.deser.BeanDeserializer -> com.fasterxml.jackson.databind.deser.BeanDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Exception _nullFromCreator -> _nullFromCreator
    com.fasterxml.jackson.databind.util.NameTransformer _currentlyTransforming -> _currentlyTransforming
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,java.util.Set,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializer withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> _deserializeOther
    java.lang.Object _missingToken(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _missingToken
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    java.lang.Object deserializeFromNull(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNull
    java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object _deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> _deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    java.lang.Exception _creatorReturnedNullException() -> _creatorReturnedNullException
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.BeanDeserializer$1 -> com.fasterxml.jackson.databind.deser.BeanDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring -> com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring:
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _prop -> _prop
    java.lang.Object _bean -> _bean
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    void setBean(java.lang.Object) -> setBean
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.BeanDeserializerBase -> com.fasterxml.jackson.databind.deser.BeanDeserializerBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyName TEMP_PROPERTY_NAME -> TEMP_PROPERTY_NAME
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _arrayDelegateDeserializer -> _arrayDelegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    boolean _vanillaProcessing -> _vanillaProcessing
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables -> _injectables
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.Set _ignorableProps -> _ignorableProps
    java.util.Set _includableProps -> _includableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    boolean _needViewProcesing -> _needViewProcesing
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,java.util.Set,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    void _replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _replaceProperty
    com.fasterxml.jackson.databind.JsonDeserializer _findDelegateDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _findDelegateDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> findConvertingDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _handleByNameInclusion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _handleByNameInclusion
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolvedObjectIdProperty
    com.fasterxml.jackson.databind.util.NameTransformer _findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findPropertyUnwrapper
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> _resolveMergeAndNullSettings
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    boolean isCachable() -> isCachable
    boolean isCaseInsensitive() -> isCaseInsensitive
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Class handledType() -> handledType
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    boolean hasProperty(java.lang.String) -> hasProperty
    boolean hasViews() -> hasViews
    int getPropertyCount() -> getPropertyCount
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    java.lang.Class getBeanClass() -> getBeanClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.util.Iterator properties() -> properties
    java.util.Iterator creatorProperties() -> creatorProperties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> findProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(int) -> findProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replaceProperty
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object) -> _handleTypedObjectId
    java.lang.Object _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer) -> _convertObjectId
    java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithObjectId
    java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectId
    java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromArray
    java.lang.Object deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromEmbedded
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer() -> _delegateDeserializer
    void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> injectValues
    java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handleUnknownProperties
    void handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownVanilla
    void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleIgnoredProperty
    java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.StreamReadConstraints,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
    java.lang.Object wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> wrapInstantiationProblem
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder -> com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder:
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    java.util.Map _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    java.util.HashSet _includableProps -> _includableProps
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig -> _builderConfig
    void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> <init>
    java.util.HashMap _copy(java.util.HashMap) -> _copy
    java.util.List _copy(java.util.List) -> _copy
    void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    void addIgnorable(java.lang.String) -> addIgnorable
    void addIncludable(java.lang.String) -> addIncludable
    void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addCreatorProperty
    void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> setValueInstantiator
    void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> setObjectIdReader
    void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value) -> setPOJOBuilder
    java.util.Iterator getProperties() -> getProperties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> hasProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty removeProperty(com.fasterxml.jackson.databind.PropertyName) -> removeProperty
    com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter() -> getAnySetter
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.util.List getInjectables() -> getInjectables
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod() -> getBuildMethod
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value getBuilderConfig() -> getBuilderConfig
    boolean hasIgnorable(java.lang.String) -> hasIgnorable
    com.fasterxml.jackson.databind.JsonDeserializer build() -> build
    com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract() -> buildAbstract
    com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> buildBuilderBased
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> createBuilderBasedDeserializer
    void _fixAccess(java.util.Collection) -> _fixAccess
    java.util.Map _collectAliases(java.util.Collection) -> _collectAliases
    boolean _findCaseInsensitivity() -> _findCaseInsensitivity
    void _handleBadAccess(java.lang.IllegalArgumentException) -> _handleBadAccess
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory -> com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance -> instance
    void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findStdDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findUnsupportedTypeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _findUnsupportedTypeDeserializer
    com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> materializeAbstractType
    com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBuilderBasedDeserializer
    void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addObjectIdReader
    com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildThrowableDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanDeserializerBuilder
    void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBeanProps
    boolean _isSetterlessType(java.lang.Class) -> _isSetterlessType
    java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set) -> filterBeanProps
    java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set,java.util.Set) -> filterBeanProps
    void addBackReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBackReferenceProperties
    void addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addInjectables
    com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructAnySetter
    com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> constructSettableProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class,java.util.Map) -> isIgnorableType
    void _validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _validateSubType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier -> com.fasterxml.jackson.databind.deser.BeanDeserializerModifier:
    void <init>() -> <init>
    java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> updateProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> updateBuilder
    com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapLikeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> modifyKeyDeserializer
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer -> com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JavaType _targetType -> _targetType
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,java.util.Set,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserialize
    java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer$1 -> com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.ContextualDeserializer -> com.fasterxml.jackson.databind.deser.ContextualDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer -> com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer:
    com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.CreatorProperty -> com.fasterxml.jackson.databind.deser.CreatorProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated -> _annotated
    com.fasterxml.jackson.annotation.JacksonInject$Value _injectableValue -> _injectableValue
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _fallbackSetter -> _fallbackSetter
    int _creatorIndex -> _creatorIndex
    boolean _ignorable -> _ignorable
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    com.fasterxml.jackson.databind.deser.CreatorProperty construct(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.PropertyMetadata) -> construct
    void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    void setFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> setFallbackSetter
    void markAsIgnorable() -> markAsIgnorable
    boolean isIgnorable() -> isIgnorable
    java.lang.Object findInjectableValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findInjectableValue
    void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    int getCreatorIndex() -> getCreatorIndex
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    boolean isInjectionOnly() -> isInjectionOnly
    java.lang.String toString() -> toString
    void _verifySetter() -> _verifySetter
    void _reportMissingSetter(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _reportMissingSetter
com.fasterxml.jackson.databind.deser.DataFormatReaders -> com.fasterxml.jackson.databind.deser.DataFormatReaders:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    com.fasterxml.jackson.databind.ObjectReader[] _readers -> _readers
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    void <init>(com.fasterxml.jackson.databind.ObjectReader[]) -> <init>
    void <init>(java.util.Collection) -> <init>
    void <init>(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    com.fasterxml.jackson.databind.deser.DataFormatReaders withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    com.fasterxml.jackson.databind.deser.DataFormatReaders withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.ObjectReader[]) -> with
    com.fasterxml.jackson.databind.deser.DataFormatReaders withMaxInputLookahead(int) -> withMaxInputLookahead
    com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    com.fasterxml.jackson.databind.deser.DataFormatReaders withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(java.io.InputStream) -> findFormat
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[]) -> findFormat
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[],int,int) -> findFormat
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match _findFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader) -> _findFormat
com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader -> com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader:
    void <init>(java.io.InputStream,byte[]) -> <init>
    void <init>(byte[]) -> <init>
    void <init>(byte[],int,int) -> <init>
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match createMatcher(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match -> com.fasterxml.jackson.databind.deser.DataFormatReaders$Match:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.databind.ObjectReader _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    boolean hasMatch() -> hasMatch
    com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    com.fasterxml.jackson.databind.ObjectReader getReader() -> getReader
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedHashMap _objectIds -> _objectIds
    java.util.List _objectIdResolvers -> _objectIdResolvers
    void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy() -> copy
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> createReadableObjectId
    void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> tryToResolveUnresolvedObjectId
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig) -> createDummyInstance
    java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object) -> readRootValue
    java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object) -> _unwrapAndDeserialize
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy() -> copy
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig) -> createDummyInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler -> com.fasterxml.jackson.databind.deser.DeserializationProblemHandler:
    java.lang.Object NOT_HANDLED -> NOT_HANDLED
    void <init>() -> <init>
    boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdKey
    java.lang.Object handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdStringValue
    java.lang.Object handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Number,java.lang.String) -> handleWeirdNumberValue
    java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleUnexpectedToken
    java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleUnexpectedToken
    java.lang.Object handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.DeserializerCache -> com.fasterxml.jackson.databind.deser.DeserializerCache:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    void <init>() -> <init>
    void <init>(int) -> <init>
    java.lang.Object writeReplace() -> writeReplace
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
    com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findKeyDeserializer
    boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> hasValueDeserializerFor
    com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType) -> _findCachedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCacheValueDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCache2
    com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _createDeserializer2
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingDeserializer
    com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType) -> _hasCustomHandlers
    java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class) -> _verifyAsClass
    com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownKeyDeserializer
com.fasterxml.jackson.databind.deser.DeserializerFactory -> com.fasterxml.jackson.databind.deser.DeserializerFactory:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    boolean hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasExplicitDeserializerFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.Deserializers -> com.fasterxml.jackson.databind.deser.Deserializers:
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
com.fasterxml.jackson.databind.deser.Deserializers$Base -> com.fasterxml.jackson.databind.deser.Deserializers$Base:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
com.fasterxml.jackson.databind.deser.KeyDeserializers -> com.fasterxml.jackson.databind.deser.KeyDeserializers:
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.deser.NullValueProvider -> com.fasterxml.jackson.databind.deser.NullValueProvider:
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
com.fasterxml.jackson.databind.deser.ResolvableDeserializer -> com.fasterxml.jackson.databind.deser.ResolvableDeserializer:
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
com.fasterxml.jackson.databind.deser.SettableAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _setter -> _setter
    boolean _setterIsField -> _setterIsField
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForMethod(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> constructForMethod
    com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForMapField(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> constructForMapField
    com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForJsonNodeField(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructForJsonNodeField
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.String getPropertyName() -> getPropertyName
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
    void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring -> com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _parent -> _parent
    java.lang.Object _pojo -> _pojo
    java.lang.String _propName -> _propName
    void <init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String) -> <init>
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeFieldAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeFieldAnyProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    void setProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> setProperty
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapFieldAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapFieldAnyProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    java.util.Map _createAndSetMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.Object,java.lang.Object) -> _createAndSetMap
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MethodAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty$MethodAnyProperty:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.SettableBeanProperty -> com.fasterxml.jackson.databind.deser.SettableBeanProperty:
    com.fasterxml.jackson.databind.JsonDeserializer MISSING_VALUE_DESERIALIZER -> MISSING_VALUE_DESERIALIZER
    com.fasterxml.jackson.databind.PropertyName _propName -> _propName
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> _objectIdInfo
    com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher -> _viewMatcher
    int _propertyIndex -> _propertyIndex
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> setObjectIdInfo
    void setViews(java.lang.Class[]) -> setViews
    void assignIndex(int) -> assignIndex
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    void markAsIgnorable() -> markAsIgnorable
    boolean isIgnorable() -> isIgnorable
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider getNullValueProvider() -> getNullValueProvider
    boolean visibleInView(java.lang.Class) -> visibleInView
    boolean hasViews() -> hasViews
    int getPropertyIndex() -> getPropertyIndex
    int getCreatorIndex() -> getCreatorIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    boolean isInjectionOnly() -> isInjectionOnly
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWith(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWith
    void _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating -> com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty delegate -> delegate
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _with(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _with
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void assignIndex(int) -> assignIndex
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    boolean visibleInView(java.lang.Class) -> visibleInView
    boolean hasViews() -> hasViews
    int getPropertyIndex() -> getPropertyIndex
    int getCreatorIndex() -> getCreatorIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    boolean isInjectionOnly() -> isInjectionOnly
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.deser.SettableBeanProperty getDelegate() -> getDelegate
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference -> com.fasterxml.jackson.databind.deser.UnresolvedForwardReference:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid -> _roid
    java.util.List _unresolvedIds -> _unresolvedIds
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid() -> getRoid
    java.lang.Object getUnresolvedId() -> getUnresolvedId
    void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> addUnresolvedId
    java.util.List getUnresolvedIds() -> getUnresolvedIds
    java.lang.String getMessage() -> getMessage
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference fillInStackTrace() -> fillInStackTrace
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference withStackTrace() -> withStackTrace
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.fasterxml.jackson.databind.deser.UnresolvedId -> com.fasterxml.jackson.databind.deser.UnresolvedId:
    java.lang.Object _id -> _id
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    java.lang.Class _type -> _type
    void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> <init>
    java.lang.Object getId() -> getId
    java.lang.Class getType() -> getType
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.ValueInstantiator -> com.fasterxml.jackson.databind.deser.ValueInstantiator:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.ValueInstantiator createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> createContextual
    java.lang.Class getValueClass() -> getValueClass
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromBigInteger() -> canCreateFromBigInteger
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBigDecimal() -> canCreateFromBigDecimal
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDefaultOrWithoutArguments(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefaultOrWithoutArguments
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> createFromObjectWith
    java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _createFromStringFallbacks
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base -> com.fasterxml.jackson.databind.deser.ValueInstantiator$Base:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _valueType -> _valueType
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    java.lang.Class getValueClass() -> getValueClass
com.fasterxml.jackson.databind.deser.ValueInstantiator$Delegating -> com.fasterxml.jackson.databind.deser.ValueInstantiator$Delegating:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.ValueInstantiator _delegate -> _delegate
    void <init>(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    com.fasterxml.jackson.databind.deser.ValueInstantiator createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> createContextual
    com.fasterxml.jackson.databind.deser.ValueInstantiator delegate() -> delegate
    java.lang.Class getValueClass() -> getValueClass
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> createFromObjectWith
    java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable -> com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable:
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators -> com.fasterxml.jackson.databind.deser.ValueInstantiators:
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators$Base -> com.fasterxml.jackson.databind.deser.ValueInstantiators$Base:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JavaType _targetType -> _targetType
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap -> com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap:
    long serialVersionUID -> serialVersionUID
    boolean _caseInsensitive -> _caseInsensitive
    int _hashMask -> _hashMask
    int _size -> _size
    int _spillCount -> _spillCount
    java.lang.Object[] _hashArea -> _hashArea
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsInOrder -> _propsInOrder
    java.util.Map _aliasDefs -> _aliasDefs
    java.util.Map _aliasMapping -> _aliasMapping
    java.util.Locale _locale -> _locale
    void <init>(boolean,java.util.Collection,java.util.Map,java.util.Locale) -> <init>
    void <init>(boolean,java.util.Collection,java.util.Map) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int,int) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,int) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> <init>
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withCaseInsensitivity(boolean) -> withCaseInsensitivity
    void init(java.util.Collection) -> init
    int findSize(int) -> findSize
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Collection,java.util.Map,boolean) -> construct
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Collection,java.util.Map) -> construct
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(java.util.Collection,boolean,java.util.Map) -> construct
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withProperty
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes() -> assignIndexes
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection) -> withoutProperties
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection,java.util.Collection) -> withoutProperties
    void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replace
    void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> remove
    int size() -> size
    boolean isCaseInsensitive() -> isCaseInsensitive
    boolean hasAliases() -> hasAliases
    java.util.Iterator iterator() -> iterator
    java.util.List _properties() -> _properties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder() -> getPropertiesInInsertionOrder
    java.lang.String getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> getPropertyName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty find(int) -> find
    com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String) -> find
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2(java.lang.String,int,java.lang.Object) -> _find2
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _findWithAlias(java.lang.String) -> _findWithAlias
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2ViaAlias(java.lang.String,int,java.lang.Object) -> _find2ViaAlias
    boolean findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> findDeserializeAndSet
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer) -> _rename
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    int _findFromOrdered(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findFromOrdered
    int _hashCode(java.lang.String) -> _hashCode
    java.util.Map _buildAliasMapping(java.util.Map,boolean,java.util.Locale) -> _buildAliasMapping
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate -> com.fasterxml.jackson.databind.deser.impl.CreatorCandidate:
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator -> _creator
    int _paramCount -> _paramCount
    com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[] _params -> _params
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[],int) -> <init>
    com.fasterxml.jackson.databind.deser.impl.CreatorCandidate construct(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[]) -> construct
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams creator() -> creator
    int paramCount() -> paramCount
    com.fasterxml.jackson.annotation.JacksonInject$Value injection(int) -> injection
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter parameter(int) -> parameter
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propertyDef(int) -> propertyDef
    com.fasterxml.jackson.databind.PropertyName paramName(int) -> paramName
    com.fasterxml.jackson.databind.PropertyName explicitParamName(int) -> explicitParamName
    com.fasterxml.jackson.databind.PropertyName findImplicitParamName(int) -> findImplicitParamName
    int findOnlyParamWithoutInjection() -> findOnlyParamWithoutInjection
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param -> com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param:
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter annotated -> annotated
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propDef -> propDef
    com.fasterxml.jackson.annotation.JacksonInject$Value injection -> injection
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.annotation.JacksonInject$Value) -> <init>
    com.fasterxml.jackson.databind.PropertyName fullName() -> fullName
    boolean hasFullName() -> hasFullName
com.fasterxml.jackson.databind.deser.impl.CreatorCollector -> com.fasterxml.jackson.databind.deser.impl.CreatorCollector:
    int C_DEFAULT -> C_DEFAULT
    int C_STRING -> C_STRING
    int C_INT -> C_INT
    int C_LONG -> C_LONG
    int C_BIG_INTEGER -> C_BIG_INTEGER
    int C_DOUBLE -> C_DOUBLE
    int C_BIG_DECIMAL -> C_BIG_DECIMAL
    int C_BOOLEAN -> C_BOOLEAN
    int C_DELEGATE -> C_DELEGATE
    int C_PROPS -> C_PROPS
    int C_ARRAY_DELEGATE -> C_ARRAY_DELEGATE
    java.lang.String[] TYPE_DESCS -> TYPE_DESCS
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    boolean _forceAccess -> _forceAccess
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams[] _creators -> _creators
    int _explicitCreators -> _explicitCreators
    boolean _hasNonDefaultCreator -> _hasNonDefaultCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArgs -> _delegateArgs
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArgs -> _arrayDelegateArgs
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertyBasedArgs -> _propertyBasedArgs
    void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext) -> constructValueInstantiator
    void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> setDefaultCreator
    void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addStringCreator
    void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addIntCreator
    void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addLongCreator
    void addBigIntegerCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBigIntegerCreator
    void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addDoubleCreator
    void addBigDecimalCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBigDecimalCreator
    void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBooleanCreator
    void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],int) -> addDelegatingCreator
    void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> addPropertyCreator
    boolean hasDefaultCreator() -> hasDefaultCreator
    boolean hasDelegatingCreator() -> hasDelegatingCreator
    boolean hasPropertyBasedCreator() -> hasPropertyBasedCreator
    com.fasterxml.jackson.databind.JavaType _computeDelegateType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> _computeDelegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _fixAccess
    boolean verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean) -> verifyNonDup
    void _reportDuplicateCreator(int,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _reportDuplicateCreator
    boolean _isEnumValueOf(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _isEnumValueOf
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer -> com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer:
    java.lang.Error _cause -> _cause
    void <init>(java.lang.NoClassDefFoundError) -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler:
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.Map _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens -> _tokens
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[],java.util.Map,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> <init>
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder builder(com.fasterxml.jackson.databind.JavaType) -> builder
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start() -> start
    boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    boolean _handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object,java.lang.String,int) -> _handleTypePropertyValue
    boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handlePropertyValue
    java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> complete
    java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> complete
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserialize
    java.lang.Object _deserializeMissingToken(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserializeMissingToken
    void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String) -> _deserializeAndSet
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder:
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    java.util.List _properties -> _properties
    java.util.Map _nameToPropertyIndex -> _nameToPropertyIndex
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> addExternal
    void _addPropertyIndex(java.lang.String,java.lang.Integer) -> _addPropertyIndex
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> build
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> _property
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> _typeDeserializer
    java.lang.String _typePropertyName -> _typePropertyName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _typeProperty -> _typeProperty
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    void linkTypeProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> linkTypeProperty
    boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    boolean hasDefaultType() -> hasDefaultType
    java.lang.String getDefaultTypeId() -> getDefaultTypeId
    java.lang.String getTypePropertyName() -> getTypePropertyName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty getProperty() -> getProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty getTypeProperty() -> getTypeProperty
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer -> com.fasterxml.jackson.databind.deser.impl.FailingDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.String _message -> _message
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.FieldProperty -> com.fasterxml.jackson.databind.deser.impl.FieldProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    boolean _skipNulls -> _skipNulls
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty -> com.fasterxml.jackson.databind.deser.impl.InnerClassProperty:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Constructor _creator -> _creator
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _annotated -> _annotated
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    java.lang.Object readResolve() -> readResolve
    java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators -> com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.ValueInstantiator findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> findStdValueInstantiator
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator -> com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean canInstantiate() -> canInstantiate
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConstantValueInstantiator -> com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConstantValueInstantiator:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _value -> _value
    void <init>(java.lang.Object) -> <init>
    boolean canInstantiate() -> canInstantiate
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator -> com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean canInstantiate() -> canInstantiate
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator -> com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean canInstantiate() -> canInstantiate
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers -> com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers:
    int TYPE_SINGLETON_SET -> TYPE_SINGLETON_SET
    int TYPE_SINGLETON_LIST -> TYPE_SINGLETON_LIST
    int TYPE_SINGLETON_MAP -> TYPE_SINGLETON_MAP
    int TYPE_UNMODIFIABLE_SET -> TYPE_UNMODIFIABLE_SET
    int TYPE_UNMODIFIABLE_LIST -> TYPE_UNMODIFIABLE_LIST
    int TYPE_UNMODIFIABLE_MAP -> TYPE_UNMODIFIABLE_MAP
    int TYPE_SYNC_SET -> TYPE_SYNC_SET
    int TYPE_SYNC_COLLECTION -> TYPE_SYNC_COLLECTION
    int TYPE_SYNC_LIST -> TYPE_SYNC_LIST
    int TYPE_SYNC_MAP -> TYPE_SYNC_MAP
    int TYPE_AS_LIST -> TYPE_AS_LIST
    java.lang.String PREFIX_JAVA_UTIL_COLLECTIONS -> PREFIX_JAVA_UTIL_COLLECTIONS
    java.lang.String PREFIX_JAVA_UTIL_ARRAYS -> PREFIX_JAVA_UTIL_ARRAYS
    java.lang.String PREFIX_JAVA_UTIL_IMMUTABLE_COLL -> PREFIX_JAVA_UTIL_IMMUTABLE_COLL
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer findForCollection(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForCollection
    com.fasterxml.jackson.databind.JsonDeserializer findForMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForMap
    com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter converter(int,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> converter
    java.lang.String _findUtilArrayTypeName(java.lang.String) -> _findUtilArrayTypeName
    java.lang.String _findUtilCollectionsTypeName(java.lang.String) -> _findUtilCollectionsTypeName
    java.lang.String _findUtilCollectionsImmutableTypeName(java.lang.String) -> _findUtilCollectionsImmutableTypeName
    java.lang.String _findSingletonTypeName(java.lang.String) -> _findSingletonTypeName
    java.lang.String _findSyncTypeName(java.lang.String) -> _findSyncTypeName
    java.lang.String _findUnmodifiableTypeName(java.lang.String) -> _findUnmodifiableTypeName
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter -> com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter:
    com.fasterxml.jackson.databind.JavaType _inputType -> _inputType
    int _kind -> _kind
    void <init>(int,com.fasterxml.jackson.databind.JavaType) -> <init>
    java.lang.Object convert(java.lang.Object) -> convert
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
    void _checkSingleton(int) -> _checkSingleton
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty:
    long serialVersionUID -> serialVersionUID
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty -> _backProperty
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty -> com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty construct(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> construct
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MethodProperty -> com.fasterxml.jackson.databind.deser.impl.MethodProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    boolean _skipNulls -> _skipNulls
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,java.lang.reflect.Method) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider -> com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider -> com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider SKIPPER -> SKIPPER
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider NULLER -> NULLER
    java.lang.Object _nullValue -> _nullValue
    com.fasterxml.jackson.databind.util.AccessPattern _access -> _access
    void <init>(java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper() -> skipper
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller() -> nuller
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object) -> forValue
    boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider) -> isSkipper
    boolean isNuller(com.fasterxml.jackson.databind.deser.NullValueProvider) -> isNuller
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider -> com.fasterxml.jackson.databind.deser.impl.NullsFailProvider:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.JavaType _type -> _type
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty) -> constructForProperty
    com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> constructForProperty
    com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType) -> constructForRootValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReader:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _idType -> _idType
    com.fasterxml.jackson.databind.PropertyName propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.annotation.ObjectIdResolver resolver -> resolver
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty -> idProperty
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> <init>
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> construct
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializer() -> getDeserializer
    com.fasterxml.jackson.databind.JavaType getIdType() -> getIdType
    boolean maySerializeAsObject() -> maySerializeAsObject
    boolean isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser) -> isValidReferencePropertyName
    java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> readObjectReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _forward -> _forward
    void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    int getCreatorIndex() -> getCreatorIndex
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring:
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent -> _parent
    java.lang.Object _pojo -> _pojo
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty -> com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator:
    int _propertyCount -> _propertyCount
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _propertyLookup -> _propertyLookup
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _allProperties -> _allProperties
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> construct
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean) -> construct
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> construct
    java.util.Collection properties() -> properties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(int) -> findCreatorProperty
    com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> startBuilding
    java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> build
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap:
    long serialVersionUID -> serialVersionUID
    java.util.Locale _locale -> _locale
    void <init>() -> <init>
    void <init>(java.util.Locale) -> <init>
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap construct(java.util.Locale) -> construct
    com.fasterxml.jackson.databind.deser.SettableBeanProperty get(java.lang.Object) -> get
    com.fasterxml.jackson.databind.deser.SettableBeanProperty put(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class) -> <init>
    java.lang.Object generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.deser.impl.PropertyValue -> com.fasterxml.jackson.databind.deser.impl.PropertyValue:
    com.fasterxml.jackson.databind.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular -> com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> _property
    void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer -> com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer:
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    int _paramsSeen -> _paramsSeen
    java.util.BitSet _paramsSeenBig -> _paramsSeenBig
    com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered -> _buffered
    java.lang.Object _idValue -> _idValue
    void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    boolean hasParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> hasParameter
    java.lang.Object getParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> getParameter
    java.lang.Object[] getParameters(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> getParameters
    java.lang.Object _findMissing(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findMissing
    boolean readIdProperty(java.lang.String) -> readIdProperty
    java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> handleIdValue
    com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered() -> buffered
    boolean isComplete() -> isComplete
    boolean assignParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> assignParameter
    void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId -> com.fasterxml.jackson.databind.deser.impl.ReadableObjectId:
    java.lang.Object _item -> _item
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey _key -> _key
    java.util.LinkedList _referringProperties -> _referringProperties
    com.fasterxml.jackson.annotation.ObjectIdResolver _resolver -> _resolver
    void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> <init>
    void setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver) -> setResolver
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey getKey() -> getKey
    void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring) -> appendReferring
    void bindItem(java.lang.Object) -> bindItem
    java.lang.Object resolve() -> resolve
    boolean hasReferringProperties() -> hasReferringProperties
    java.util.Iterator referringProperties() -> referringProperties
    boolean tryToResolveUnresolved(com.fasterxml.jackson.databind.DeserializationContext) -> tryToResolveUnresolved
    com.fasterxml.jackson.annotation.ObjectIdResolver getResolver() -> getResolver
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring -> com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring:
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference -> _reference
    java.lang.Class _beanType -> _beanType
    void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.Class getBeanType() -> getBeanType
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
    boolean hasId(java.lang.Object) -> hasId
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty -> com.fasterxml.jackson.databind.deser.impl.SetterlessProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer -> com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> _typeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Class handledType() -> handledType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer -> com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.String _message -> _message
    void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler -> com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler:
    java.util.List _properties -> _properties
    void <init>() -> <init>
    void <init>(java.util.List) -> <init>
    void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> processUnwrapped
com.fasterxml.jackson.databind.deser.impl.ValueInjector -> com.fasterxml.jackson.databind.deser.impl.ValueInjector:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _valueId -> _valueId
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findValue
    void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
com.fasterxml.jackson.databind.deser.impl.package-info -> com.fasterxml.jackson.databind.deser.impl.package-info:
com.fasterxml.jackson.databind.deser.package-info -> com.fasterxml.jackson.databind.deser.package-info:
com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer -> com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    java.util.Collection _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeFromArray
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.util.concurrent.atomic.AtomicInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.util.concurrent.atomic.AtomicLong deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer -> com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object) -> referenceValue
    java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference) -> getReferenced
    java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference,java.lang.Object) -> updateReference
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer:
    java.lang.Boolean _supportsUpdates -> _supportsUpdates
    boolean _mergeArrays -> _mergeArrays
    boolean _mergeObjects -> _mergeObjects
    void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer,boolean,boolean) -> <init>
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    boolean isCachable() -> isCachable
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean _shouldMerge(java.lang.Boolean,java.lang.Boolean) -> _shouldMerge
    com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode) -> _handleDuplicateField
    com.fasterxml.jackson.databind.node.ObjectNode _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) -> _deserializeObjectAtName
    com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) -> updateObject
    com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode) -> _deserializeContainerNoRecursion
    com.fasterxml.jackson.databind.JsonNode _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeAnyScalar
    com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeRareScalar
    com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,int,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromInt
    com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromInt
    com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromFloat
    com.fasterxml.jackson.databind.JsonNode _fromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.math.BigDecimal) -> _fromBigDecimal
    com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _fromEmbedded
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack -> com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack:
    com.fasterxml.jackson.databind.node.ContainerNode[] _stack -> _stack
    int _top -> _top
    int _end -> _end
    void <init>() -> <init>
    int size() -> size
    void push(com.fasterxml.jackson.databind.node.ContainerNode) -> push
    com.fasterxml.jackson.databind.node.ContainerNode popOrNull() -> popOrNull
com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.util.Collection _deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _deserializeFromString
    java.util.Collection _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeFromArray
    java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    java.util.Collection _deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeWithObjectId
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring:
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator _parent -> _parent
    java.util.List next -> next
    void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator:
    java.lang.Class _elementType -> _elementType
    java.util.Collection _result -> _result
    java.util.List _accumulator -> _accumulator
    void <init>(java.lang.Class,java.util.Collection) -> <init>
    void add(java.lang.Object) -> add
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase -> com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase:
    com.fasterxml.jackson.databind.JavaType _containerType -> _containerType
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    boolean _skipNullValues -> _skipNullValues
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
com.fasterxml.jackson.databind.deser.std.DateDeserializers -> com.fasterxml.jackson.databind.deser.std.DateDeserializers:
    java.util.HashSet _utilClasses -> _utilClasses
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$1 -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer:
    java.lang.reflect.Constructor _defaultCtor -> _defaultCtor
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer:
    java.text.DateFormat _customFormat -> _customFormat
    java.lang.String _formatString -> _formatString
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer:
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer:
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _delegatee -> _delegatee
    void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer newDelegatingInstance(com.fasterxml.jackson.databind.JsonDeserializer) -> newDelegatingInstance
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    boolean isCachable() -> isCachable
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
com.fasterxml.jackson.databind.deser.std.EnumDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object[] _enumsByIndex -> _enumsByIndex
    java.lang.Enum _enumDefaultValue -> _enumDefaultValue
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByName -> _lookupByName
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByToString -> _lookupByToString
    java.lang.Boolean _caseInsensitive -> _caseInsensitive
    java.lang.Boolean _useDefaultValueForUnknownEnum -> _useDefaultValueForUnknownEnum
    java.lang.Boolean _useNullForUnknownEnum -> _useNullForUnknownEnum
    boolean _isFromIntValue -> _isFromIntValue
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByEnumNaming -> _lookupByEnumNaming
    void <init>(com.fasterxml.jackson.databind.util.EnumResolver,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.EnumResolver,boolean,com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForCreator
    com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> deserializerForCreator
    com.fasterxml.jackson.databind.JsonDeserializer deserializerForNoArgsCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForNoArgsCreator
    com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _fromString
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _resolveCurrentLookup(com.fasterxml.jackson.databind.DeserializationContext) -> _resolveCurrentLookup
    java.lang.Object _fromInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int) -> _fromInteger
    java.lang.Object _deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.CompactStringObjectMap,java.lang.String) -> _deserializeAltString
    java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeOther
    java.lang.Class _enumClass() -> _enumClass
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _getToStringLookup(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringLookup
    boolean useNullForUnknownEnum(com.fasterxml.jackson.databind.DeserializationContext) -> useNullForUnknownEnum
    boolean useDefaultValueForUnknownEnum(com.fasterxml.jackson.databind.DeserializationContext) -> useDefaultValueForUnknownEnum
com.fasterxml.jackson.databind.deser.std.EnumDeserializer$1 -> com.fasterxml.jackson.databind.deser.std.EnumDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _enumClass -> _enumClass
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> withResolved
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumMap) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.util.EnumMap constructMap(com.fasterxml.jackson.databind.DeserializationContext) -> constructMap
    java.util.EnumMap _deserializeUsingProperties(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingProperties
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _enumType -> _enumType
    com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer -> _enumDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    boolean _skipNullValues -> _skipNullValues
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> deserialize
    java.util.EnumSet _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> _deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.util.EnumSet constructSet() -> constructSet
    java.util.EnumSet handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> handleNonArray
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer -> com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _inputType -> _inputType
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> _factory
    com.fasterxml.jackson.databind.JsonDeserializer _deser -> _deser
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _creatorProps -> _creatorProps
    boolean _hasArgs -> _hasArgs
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propCreator -> _propCreator
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeEnumUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> deserializeEnumUsingPropertyBased
    java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer:
    java.lang.Class[] types() -> types
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class) -> findDeserializer
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    boolean _shouldTrim() -> _shouldTrim
    java.lang.Object _deserializeFromOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> _deserializeFromOther
    java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeFromEmptyString() -> _deserializeFromEmptyString
    java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyString
    java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyStringDefault
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std:
    long serialVersionUID -> serialVersionUID
    int STD_FILE -> STD_FILE
    int STD_URL -> STD_URL
    int STD_URI -> STD_URI
    int STD_CLASS -> STD_CLASS
    int STD_JAVA_TYPE -> STD_JAVA_TYPE
    int STD_CURRENCY -> STD_CURRENCY
    int STD_PATTERN -> STD_PATTERN
    int STD_LOCALE -> STD_LOCALE
    int STD_CHARSET -> STD_CHARSET
    int STD_TIME_ZONE -> STD_TIME_ZONE
    int STD_INET_ADDRESS -> STD_INET_ADDRESS
    int STD_INET_SOCKET_ADDRESS -> STD_INET_SOCKET_ADDRESS
    java.lang.String LOCALE_EXT_MARKER -> LOCALE_EXT_MARKER
    int _kind -> _kind
    void <init>(java.lang.Class,int) -> <init>
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyStringDefault
    boolean _shouldTrim() -> _shouldTrim
    int _firstHyphenOrUnderscore(java.lang.String) -> _firstHyphenOrUnderscore
    java.util.Locale _deserializeLocale(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeLocale
    java.util.Locale _deSerializeBCP47Locale(java.lang.String,int,java.lang.String,java.lang.String,int) -> _deSerializeBCP47Locale
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers:
    java.util.HashSet _classNames -> _classNames
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    com.fasterxml.jackson.databind.JsonDeserializer find(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String) -> find
    boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator -> com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    com.fasterxml.jackson.databind.deser.CreatorProperty creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int) -> creatorProp
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    long _long(java.lang.Object) -> _long
    int _int(java.lang.Object) -> _int
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.MapDeserializer -> com.fasterxml.jackson.databind.deser.std.MapDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    boolean _standardStringKey -> _standardStringKey
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    java.util.Set _ignorableProperties -> _ignorableProperties
    java.util.Set _includableProperties -> _includableProperties
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker -> _inclusionChecker
    boolean _checkDupSquash -> _checkDupSquash
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> withResolved
    com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set) -> withResolved
    boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> _isStdKeyDeser
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void setIgnorableProperties(java.util.Set) -> setIgnorableProperties
    void setIncludableProperties(java.util.Set) -> setIncludableProperties
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    java.util.Map _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBind
    java.util.Map _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBindStringKeyMap
    java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingCreator
    void _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdate
    void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdateStringKeyMap
    void _squashDups(com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object) -> _squashDups
    void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring -> com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring:
    com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator _parent -> _parent
    java.util.Map next -> next
    java.lang.Object key -> key
    void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator:
    java.lang.Class _valueType -> _valueType
    java.util.Map _result -> _result
    java.util.List _accumulator -> _accumulator
    void <init>(java.lang.Class,java.util.Map) -> <init>
    void put(java.lang.Object,java.lang.Object) -> put
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object) -> handleUnresolvedReference
    void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer -> com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map$Entry) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer -> com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance -> instance
    void <init>() -> <init>
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers:
    java.util.HashSet _classNames -> _classNames
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer instance -> instance
    void <init>() -> <init>
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer instance -> instance
    void <init>() -> <init>
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Byte) -> <init>
    java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseByte
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Character) -> <init>
    java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Double) -> <init>
    java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDouble
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Float) -> <init>
    java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloat
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Integer) -> <init>
    boolean isCachable() -> isCachable
    java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Long) -> <init>
    boolean isCachable() -> isCachable
    java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer:
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.type.LogicalType _logicalType -> _logicalType
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object _emptyValue -> _emptyValue
    boolean _primitive -> _primitive
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object) -> <init>
    void <init>(java.lang.Class,java.lang.Object,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer primitiveInstance -> primitiveInstance
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer wrapperInstance -> wrapperInstance
    void <init>(java.lang.Class,java.lang.Short) -> <init>
    java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShort
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer:
    long serialVersionUID -> serialVersionUID
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> _elementDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    java.lang.Object[] _emptyValue -> _emptyValue
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> deserialize
    java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBase64
    java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers:
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    java.lang.Object _emptyValue -> _emptyValue
    com.fasterxml.jackson.databind.deser.NullValueProvider _nuller -> _nuller
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer forType(java.lang.Class) -> forType
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    java.lang.Object _constructEmpty() -> _constructEmpty
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    void _failOnNull(com.fasterxml.jackson.databind.DeserializationContext) -> _failOnNull
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    boolean[] _constructEmpty() -> _constructEmpty
    boolean[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    boolean[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    boolean[] _concat(boolean[],boolean[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    byte[] _constructEmpty() -> _constructEmpty
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    byte[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    byte[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    byte[] _concat(byte[],byte[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    char[] _constructEmpty() -> _constructEmpty
    char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    char[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    char[] _concat(char[],char[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    double[] _constructEmpty() -> _constructEmpty
    double[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    double[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    double[] _concat(double[],double[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    float[] _constructEmpty() -> _constructEmpty
    float[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    float[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    float[] _concat(float[],float[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    int[] _constructEmpty() -> _constructEmpty
    int[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    int[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    int[] _concat(int[],int[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    long[] _constructEmpty() -> _constructEmpty
    long[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    long[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    long[] _concat(long[],long[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    short[] _constructEmpty() -> _constructEmpty
    short[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    short[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    short[] _concat(short[],short[]) -> _concat
    java.lang.Object _constructEmpty() -> _constructEmpty
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer -> com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _fullType -> _fullType
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer -> com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _adapterDeserializer -> _adapterDeserializer
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer construct(com.fasterxml.jackson.databind.DeserializationContext) -> construct
    java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter) -> constructValue
    java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> constructValue
    java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> constructValue
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter -> com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter:
    java.lang.String className -> className
    java.lang.String classLoaderName -> classLoaderName
    java.lang.String declaringClass -> declaringClass
    java.lang.String format -> format
    java.lang.String fileName -> fileName
    java.lang.String methodName -> methodName
    int lineNumber -> lineNumber
    java.lang.String moduleName -> moduleName
    java.lang.String moduleVersion -> moduleVersion
    boolean nativeMethod -> nativeMethod
    void <init>() -> <init>
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> withDelegate
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object) -> deserializeWithType
    java.lang.Object _handleIncompatibleUpdateValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _handleIncompatibleUpdateValue
    java.lang.Class handledType() -> handledType
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object convertValue(java.lang.Object) -> convertValue
    java.lang.Object _convertIfNonNull(java.lang.Object) -> _convertIfNonNull
com.fasterxml.jackson.databind.deser.std.StdDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDeserializer:
    long serialVersionUID -> serialVersionUID
    int F_MASK_INT_COERCIONS -> F_MASK_INT_COERCIONS
    int F_MASK_ACCEPT_ARRAYS -> F_MASK_ACCEPT_ARRAYS
    java.lang.Class _valueClass -> _valueClass
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer) -> <init>
    java.lang.Class handledType() -> handledType
    java.lang.Class getValueClass() -> getValueClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext) -> getValueType
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> isDefaultDeserializer
    boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer) -> isDefaultKeyDeserializer
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    java.lang.Object _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmpty
    java.lang.Object _deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromString
    java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String) -> _deserializeFromEmptyString
    java.lang.Object _deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWrappedValue
    boolean _parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> _parseBooleanPrimitive
    boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanPrimitive
    boolean _isTrue(java.lang.String) -> _isTrue
    boolean _isFalse(java.lang.String) -> _isFalse
    java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseBoolean
    byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBytePrimitive
    short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseIntPrimitive
    int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseInteger
    java.lang.Integer _parseInteger(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseInteger
    long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLongPrimitive
    long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseLongPrimitive
    java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseLong
    java.lang.Long _parseLong(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseLong
    float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloatPrimitive
    float _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseFloatPrimitive
    float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseFloatPrimitive
    java.lang.Float _checkFloatSpecialValue(java.lang.String) -> _checkFloatSpecialValue
    double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDoublePrimitive
    double _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseDoublePrimitive
    double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseDoublePrimitive
    double _parseDouble(java.lang.String) -> _parseDouble
    double _parseDouble(java.lang.String,boolean) -> _parseDouble
    java.lang.Double _checkDoubleSpecialValue(java.lang.String) -> _checkDoubleSpecialValue
    java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDateFromArray
    java.util.Date _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseString
    java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.NullValueProvider) -> _parseString
    boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    boolean _isNegInf(java.lang.String) -> _isNegInf
    boolean _isPosInf(java.lang.String) -> _isPosInf
    boolean _isNaN(java.lang.String) -> _isNaN
    boolean _isBlank(java.lang.String) -> _isBlank
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _checkFromStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class) -> _checkFromStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkFloatToIntCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkIntToStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkFloatToStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkBooleanToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkBooleanToStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> _checkToStringCoercion
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkIntToFloatCoercion
    java.lang.Boolean _coerceBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _coerceBooleanFromInt
    com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String) -> _checkCoercionFail
    boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _checkTextualNull
    java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _coerceIntegral
    void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext) -> _verifyNullForPrimitive
    void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForPrimitiveCoercion
    void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String) -> _reportFailedNullCoerce
    java.lang.String _coercedTypeDesc() -> _coercedTypeDesc
    java.lang.String _coercedTypeDesc(java.lang.Class) -> _coercedTypeDesc
    boolean _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanFromInt
    void _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyStringForScalarCoercion
    java.lang.Object _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceEmptyString
    void _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _failDoubleToIntCoercion
    void _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForScalarCoercion
    void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _verifyNumberForScalarCoercion
    java.lang.Object _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceNullToken
    java.lang.Object _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceTextualNull
    boolean _isEmptyOrTextualNull(java.lang.String) -> _isEmptyOrTextualNull
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findDeserializer
    boolean _isIntNumber(java.lang.String) -> _isIntNumber
    com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingContentDeserializer
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> findValueNullProvider
    com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findContentNullProvider
    com.fasterxml.jackson.annotation.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> findContentNullStyle
    com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer) -> _findNullProvider
    com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromEmptyString
    com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromEmptyArray
    com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromBlankString(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromBlankString
    void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleMissingEndArrayForSingle
    java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNestedArrayForSingle
    void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _verifyEndArrayForSingle
    boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    boolean _byteOverflow(int) -> _byteOverflow
    boolean _shortOverflow(int) -> _shortOverflow
    boolean _intOverflow(long) -> _intOverflow
    java.lang.Number _nonNullNumber(java.lang.Number) -> _nonNullNumber
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdDeserializer$1 -> com.fasterxml.jackson.databind.deser.std.StdDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:
    long serialVersionUID -> serialVersionUID
    int TYPE_BOOLEAN -> TYPE_BOOLEAN
    int TYPE_BYTE -> TYPE_BYTE
    int TYPE_SHORT -> TYPE_SHORT
    int TYPE_CHAR -> TYPE_CHAR
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_LOCALE -> TYPE_LOCALE
    int TYPE_DATE -> TYPE_DATE
    int TYPE_CALENDAR -> TYPE_CALENDAR
    int TYPE_UUID -> TYPE_UUID
    int TYPE_URI -> TYPE_URI
    int TYPE_URL -> TYPE_URL
    int TYPE_CLASS -> TYPE_CLASS
    int TYPE_CURRENCY -> TYPE_CURRENCY
    int TYPE_BYTE_ARRAY -> TYPE_BYTE_ARRAY
    int _kind -> _kind
    java.lang.Class _keyClass -> _keyClass
    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser -> _deser
    void <init>(int,java.lang.Class) -> <init>
    void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class) -> forType
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
    java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception) -> _weirdKey
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _keyClass -> _keyClass
    com.fasterxml.jackson.databind.JsonDeserializer _delegate -> _delegate
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.EnumResolver _byNameResolver -> _byNameResolver
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> _factory
    com.fasterxml.jackson.databind.util.EnumResolver _byToStringResolver -> _byToStringResolver
    com.fasterxml.jackson.databind.util.EnumResolver _byIndexResolver -> _byIndexResolver
    com.fasterxml.jackson.databind.util.EnumResolver _byEnumNamingResolver -> _byEnumNamingResolver
    java.lang.Enum _enumDefaultValue -> _enumDefaultValue
    void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    com.fasterxml.jackson.databind.util.EnumResolver _resolveCurrentResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _resolveCurrentResolver
    com.fasterxml.jackson.databind.util.EnumResolver _getToStringResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringResolver
    com.fasterxml.jackson.databind.util.EnumResolver _getIndexResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _getIndexResolver
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Constructor _ctor -> _ctor
    void <init>(java.lang.reflect.Constructor) -> <init>
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    void <init>(java.lang.reflect.Method) -> <init>
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString -> sString
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject -> sObject
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> forType
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructDelegatingKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findStringBasedKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _constructCreatorKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructCreatorKeyDeserializer
    com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata _findStringConstructor(com.fasterxml.jackson.databind.BeanDescription) -> _findStringConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _findExplicitStringFactoryMethod(java.util.List) -> _findExplicitStringFactoryMethod
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
    boolean lambda$findStringBasedKeyDeserializer$0(com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata) -> lambda$findStringBasedKeyDeserializer$0
com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _treeDeserializer -> _treeDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer) -> <init>
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    java.lang.Object convert(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.DeserializationContext) -> convert
    java.lang.Object convert(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> convert
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer -> com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer) -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator -> com.fasterxml.jackson.databind.deser.std.StdValueInstantiator:
    long serialVersionUID -> serialVersionUID
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    java.lang.Class _valueClass -> _valueClass
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _constructorArguments -> _constructorArguments
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArguments -> _delegateArguments
    com.fasterxml.jackson.databind.JavaType _arrayDelegateType -> _arrayDelegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _arrayDelegateCreator -> _arrayDelegateCreator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArguments -> _arrayDelegateArguments
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigIntegerCreator -> _fromBigIntegerCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigDecimalCreator -> _fromBigDecimalCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.StdValueInstantiator) -> <init>
    void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromObjectSettings
    void configureFromArraySettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromArraySettings
    void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromBigIntegerCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBigIntegerCreator
    void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBigDecimalCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBigDecimalCreator
    void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    java.lang.Class getValueClass() -> getValueClass
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromBigInteger() -> canCreateFromBigInteger
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBigDecimal() -> canCreateFromBigDecimal
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    boolean canInstantiate() -> canInstantiate
    com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDefaultOrWithoutArguments(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefaultOrWithoutArguments
    java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    java.lang.Double tryConvertToDouble(java.math.BigDecimal) -> tryConvertToDouble
    java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    com.fasterxml.jackson.databind.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
    com.fasterxml.jackson.databind.JsonMappingException unwrapAndWrapException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> unwrapAndWrapException
    com.fasterxml.jackson.databind.JsonMappingException wrapAsJsonMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> wrapAsJsonMappingException
    com.fasterxml.jackson.databind.JsonMappingException rewrapCtorProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> rewrapCtorProblem
    java.lang.Object _createUsingDelegate(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _createUsingDelegate
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] NO_STRINGS -> NO_STRINGS
    com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer instance -> instance
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> _elementDeserializer
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> _nullProvider
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    boolean _skipNullValues -> _skipNullValues
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.String[] _deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> _deserializeCustom
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> deserialize
    java.lang.String[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    java.util.Collection deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer) -> deserializeUsingCustom
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StringDeserializer -> com.fasterxml.jackson.databind.deser.std.StringDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.StringDeserializer instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    boolean isCachable() -> isCachable
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer -> com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.String PROP_NAME_MESSAGE -> PROP_NAME_MESSAGE
    java.lang.String PROP_NAME_SUPPRESSED -> PROP_NAME_SUPPRESSED
    java.lang.String PROP_NAME_LOCALIZED_MESSAGE -> PROP_NAME_LOCALIZED_MESSAGE
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer) -> <init>
    com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BeanDeserializer) -> construct
    void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer -> com.fasterxml.jackson.databind.deser.std.UUIDDeserializer:
    long serialVersionUID -> serialVersionUID
    int[] HEX_DIGITS -> HEX_DIGITS
    void <init>() -> <init>
    java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _badFormat
    int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> intFromChars
    int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> shortFromChars
    int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> byteFromChars
    int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char) -> _badChar
    java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext) -> _fromBytes
    long _long(byte[],int) -> _long
    int _int(byte[],int) -> _int
    java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    com.fasterxml.jackson.databind.JsonDeserializer _mapDeserializer -> _mapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _listDeserializer -> _listDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _stringDeserializer -> _stringDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _numberDeserializer -> _numberDeserializer
    com.fasterxml.jackson.databind.JavaType _listType -> _listType
    com.fasterxml.jackson.databind.JavaType _mapType -> _mapType
    boolean _nonMerging -> _nonMerging
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean) -> <init>
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findCustomDeser
    com.fasterxml.jackson.databind.JsonDeserializer _clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer) -> _clearIfStdImpl
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> mapArray
    java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> mapObject
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std -> std
    boolean _nonMerging -> _nonMerging
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean) -> instance
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR:
    long serialVersionUID -> serialVersionUID
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std -> std
    boolean _nonMerging -> _nonMerging
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR instance(boolean) -> instance
    com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeObjectAtName
    java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope) -> _deserializeNR
    java.lang.Object _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int) -> _deserializeAnyScalar
    java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope:
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _parent -> _parent
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _child -> _child
    boolean _isObject -> _isObject
    boolean _squashDups -> _squashDups
    java.lang.String _deferredKey -> _deferredKey
    java.util.Map _map -> _map
    java.util.List _list -> _list
    void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope) -> <init>
    void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootObjectScope(boolean) -> rootObjectScope
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootArrayScope() -> rootArrayScope
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope resetAsArray() -> resetAsArray
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope resetAsObject(boolean) -> resetAsObject
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject() -> childObject
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject(java.lang.String) -> childObject
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray() -> childArray
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray(java.lang.String) -> childArray
    boolean isObject() -> isObject
    void putValue(java.lang.String,java.lang.Object) -> putValue
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope putDeferredValue(java.lang.Object) -> putDeferredValue
    void addValue(java.lang.Object) -> addValue
    java.lang.Object finishRootObject() -> finishRootObject
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchObject() -> finishBranchObject
    java.lang.Object finishRootArray(boolean) -> finishRootArray
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchArray(boolean) -> finishBranchArray
    void _putValueHandleDups(java.lang.String,java.lang.Object) -> _putValueHandleDups
    java.util.Map emptyMap() -> emptyMap
    java.util.List emptyList() -> emptyList
com.fasterxml.jackson.databind.deser.std.package-info -> com.fasterxml.jackson.databind.deser.std.package-info:
com.fasterxml.jackson.databind.exc.IgnoredPropertyException -> com.fasterxml.jackson.databind.exc.IgnoredPropertyException:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    com.fasterxml.jackson.databind.exc.IgnoredPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.exc.InvalidDefinitionException -> com.fasterxml.jackson.databind.exc.InvalidDefinitionException:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition _property -> _property
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition getProperty() -> getProperty
com.fasterxml.jackson.databind.exc.InvalidFormatException -> com.fasterxml.jackson.databind.exc.InvalidFormatException:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _value -> _value
    void <init>(java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> from
    java.lang.Object getValue() -> getValue
com.fasterxml.jackson.databind.exc.InvalidNullException -> com.fasterxml.jackson.databind.exc.InvalidNullException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyName _propertyName -> _propertyName
    void <init>(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.exc.InvalidNullException from(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> from
    com.fasterxml.jackson.databind.PropertyName getPropertyName() -> getPropertyName
com.fasterxml.jackson.databind.exc.InvalidTypeIdException -> com.fasterxml.jackson.databind.exc.InvalidTypeIdException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    java.lang.String _typeId -> _typeId
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.exc.InvalidTypeIdException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
    com.fasterxml.jackson.databind.JavaType getBaseType() -> getBaseType
    java.lang.String getTypeId() -> getTypeId
com.fasterxml.jackson.databind.exc.MismatchedInputException -> com.fasterxml.jackson.databind.exc.MismatchedInputException:
    java.lang.Class _targetType -> _targetType
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
    com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String) -> from
    com.fasterxml.jackson.databind.exc.MismatchedInputException setTargetType(com.fasterxml.jackson.databind.JavaType) -> setTargetType
    java.lang.Class getTargetType() -> getTargetType
com.fasterxml.jackson.databind.exc.PropertyBindingException -> com.fasterxml.jackson.databind.exc.PropertyBindingException:
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _propertyName -> _propertyName
    java.util.Collection _propertyIds -> _propertyIds
    java.lang.String _propertiesAsString -> _propertiesAsString
    int MAX_DESC_LENGTH -> MAX_DESC_LENGTH
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    java.lang.String getMessageSuffix() -> getMessageSuffix
    java.lang.Class getReferringClass() -> getReferringClass
    java.lang.String getPropertyName() -> getPropertyName
    java.util.Collection getKnownPropertyIds() -> getKnownPropertyIds
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -> com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.exc.ValueInstantiationException -> com.fasterxml.jackson.databind.exc.ValueInstantiationException:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.Throwable) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.exc.ValueInstantiationException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    com.fasterxml.jackson.databind.exc.ValueInstantiationException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.Throwable) -> from
    com.fasterxml.jackson.databind.JavaType getType() -> getType
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers:
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> _dataTypeFactory
    int TYPE_DURATION -> TYPE_DURATION
    int TYPE_G_CALENDAR -> TYPE_G_CALENDAR
    int TYPE_QNAME -> TYPE_QNAME
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std:
    long serialVersionUID -> serialVersionUID
    int _kind -> _kind
    void <init>(java.lang.Class,int) -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    javax.xml.datatype.XMLGregorianCalendar _gregorianFromDate(com.fasterxml.jackson.databind.DeserializationContext,java.util.Date) -> _gregorianFromDate
com.fasterxml.jackson.databind.ext.CoreXMLSerializers -> com.fasterxml.jackson.databind.ext.CoreXMLSerializers:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer:
    com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _delegate -> _delegate
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,javax.xml.datatype.XMLGregorianCalendar) -> isEmpty
    void serialize(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.Calendar _convert(javax.xml.datatype.XMLGregorianCalendar) -> _convert
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.DOMDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer:
    long serialVersionUID -> serialVersionUID
    javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY -> DEFAULT_PARSER_FACTORY
    void <init>(java.lang.Class) -> <init>
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    org.w3c.dom.Document parse(java.lang.String) -> parse
    javax.xml.parsers.DocumentBuilder documentBuilder() -> documentBuilder
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    org.w3c.dom.Document _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    org.w3c.dom.Node _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMSerializer -> com.fasterxml.jackson.databind.ext.DOMSerializer:
    javax.xml.transform.TransformerFactory transformerFactory -> transformerFactory
    void <init>() -> <init>
    void serialize(org.w3c.dom.Node,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void setTransformerFactoryAttribute(javax.xml.transform.TransformerFactory,java.lang.String,java.lang.Object) -> setTransformerFactoryAttribute
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.Java7Handlers -> com.fasterxml.jackson.databind.ext.Java7Handlers:
    com.fasterxml.jackson.databind.ext.Java7Handlers IMPL -> IMPL
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ext.Java7Handlers instance() -> instance
    java.lang.Class getClassJavaNioFilePath() -> getClassJavaNioFilePath
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7HandlersImpl -> com.fasterxml.jackson.databind.ext.Java7HandlersImpl:
    java.lang.Class _pathClass -> _pathClass
    void <init>() -> <init>
    java.lang.Class getClassJavaNioFilePath() -> getClassJavaNioFilePath
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
com.fasterxml.jackson.databind.ext.Java7Support -> com.fasterxml.jackson.databind.ext.Java7Support:
    com.fasterxml.jackson.databind.ext.Java7Support IMPL -> IMPL
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ext.Java7Support instance() -> instance
    java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7SupportImpl -> com.fasterxml.jackson.databind.ext.Java7SupportImpl:
    java.lang.Class _bogus -> _bogus
    void <init>() -> <init>
    java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
com.fasterxml.jackson.databind.ext.NioPathDeserializer -> com.fasterxml.jackson.databind.ext.NioPathDeserializer:
    long serialVersionUID -> serialVersionUID
    boolean areWindowsFilePathsSupported -> areWindowsFilePathsSupported
    void <init>() -> <init>
    java.nio.file.Path deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.NioPathSerializer -> com.fasterxml.jackson.databind.ext.NioPathSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void serialize(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory -> com.fasterxml.jackson.databind.ext.OptionalHandlerFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.String PACKAGE_PREFIX_JAVAX_XML -> PACKAGE_PREFIX_JAVAX_XML
    java.lang.String SERIALIZERS_FOR_JAVAX_XML -> SERIALIZERS_FOR_JAVAX_XML
    java.lang.String DESERIALIZERS_FOR_JAVAX_XML -> DESERIALIZERS_FOR_JAVAX_XML
    java.lang.String SERIALIZER_FOR_DOM_NODE -> SERIALIZER_FOR_DOM_NODE
    java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT -> DESERIALIZER_FOR_DOM_DOCUMENT
    java.lang.String DESERIALIZER_FOR_DOM_NODE -> DESERIALIZER_FOR_DOM_NODE
    java.lang.Class CLASS_DOM_NODE -> CLASS_DOM_NODE
    java.lang.Class CLASS_DOM_DOCUMENT -> CLASS_DOM_DOCUMENT
    com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper -> _jdk7Helper
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance -> instance
    java.util.Map _sqlDeserializers -> _sqlDeserializers
    java.util.Map _sqlSerializers -> _sqlSerializers
    java.lang.String CLS_NAME_JAVA_SQL_TIMESTAMP -> CLS_NAME_JAVA_SQL_TIMESTAMP
    java.lang.String CLS_NAME_JAVA_SQL_DATE -> CLS_NAME_JAVA_SQL_DATE
    java.lang.String CLS_NAME_JAVA_SQL_TIME -> CLS_NAME_JAVA_SQL_TIME
    java.lang.String CLS_NAME_JAVA_SQL_BLOB -> CLS_NAME_JAVA_SQL_BLOB
    java.lang.String CLS_NAME_JAVA_SQL_SERIALBLOB -> CLS_NAME_JAVA_SQL_SERIALBLOB
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findDeserializer
    boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    boolean _IsXOfY(java.lang.Class,java.lang.Class) -> _IsXOfY
    java.lang.Object instantiate(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> instantiate
    java.lang.Object instantiate(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> instantiate
    boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String) -> hasSuperClassStartingWith
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.SqlBlobSerializer -> com.fasterxml.jackson.databind.ext.SqlBlobSerializer:
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.sql.Blob) -> isEmpty
    void serialize(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void _writeValue(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _writeValue
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ext.package-info -> com.fasterxml.jackson.databind.ext.package-info:
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy -> com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy:
    void <init>() -> <init>
    java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Base -> com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Base:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider -> com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forPOJO(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forPOJO
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.BeanDescription) -> forBuilder
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forRecord(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forRecord
com.fasterxml.jackson.databind.introspect.Annotated -> com.fasterxml.jackson.databind.introspect.Annotated:
    void <init>() -> <init>
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getRawType() -> getRawType
    java.lang.Iterable annotations() -> annotations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata -> com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata:
    com.fasterxml.jackson.databind.introspect.Annotated annotated -> annotated
    java.lang.Object metadata -> metadata
    void <init>(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata of(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> of
com.fasterxml.jackson.databind.introspect.AnnotatedClass -> com.fasterxml.jackson.databind.introspect.AnnotatedClass:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators NO_CREATORS -> NO_CREATORS
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    java.util.List _superTypes -> _superTypes
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    boolean _collectAnnotations -> _collectAnnotations
    com.fasterxml.jackson.databind.util.Annotations _classAnnotations -> _classAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators -> _creators
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    java.lang.Boolean _nonStaticInnerClass -> _nonStaticInnerClass
    void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> construct
    com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> construct
    com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> constructWithoutSuperTypes
    com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    java.lang.Class getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.Class getRawType() -> getRawType
    java.lang.Iterable annotations() -> annotations
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    int getMemberMethodCount() -> getMemberMethodCount
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    int getFieldCount() -> getFieldCount
    java.lang.Iterable fields() -> fields
    boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    java.util.List _fields() -> _fields
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _methods() -> _methods
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators() -> _creators
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators -> com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators:
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor defaultConstructor -> defaultConstructor
    java.util.List constructors -> constructors
    java.util.List creatorMethods -> creatorMethods
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List,java.util.List) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver -> com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> NO_ANNOTATIONS
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.Class CLS_ENUM -> CLS_ENUM
    java.lang.Class CLS_LIST -> CLS_LIST
    java.lang.Class CLS_MAP -> CLS_MAP
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.Class _class -> _class
    java.lang.Class _primaryMixin -> _primaryMixin
    boolean _collectAnnotations -> _collectAnnotations
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolve(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolve
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> resolveWithoutSuperTypes
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolveWithoutSuperTypes
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolveWithoutSuperTypes
    boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> skippableArray
    com.fasterxml.jackson.databind.introspect.AnnotatedClass createPrimordial(java.lang.Class) -> createPrimordial
    com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> createArrayType
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully() -> resolveFully
    com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes() -> resolveWithoutSuperTypes
    void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean) -> _addSuperTypes
    void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean) -> _addSuperInterfaces
    boolean _contains(java.util.List,java.lang.Class) -> _contains
    com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List) -> resolveClassAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class) -> _addClassMixIns
    com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> _addAnnotationsIfNotPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> _addFromBundleIfNotPresent
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor -> com.fasterxml.jackson.databind.introspect.AnnotatedConstructor:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Constructor _constructor -> _constructor
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization _serialization -> _serialization
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getRawType() -> getRawType
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization -> com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> clazz
    java.lang.Class[] args -> args
    void <init>(java.lang.reflect.Constructor) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> _typeContext
    boolean _collectAnnotations -> _collectAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,boolean) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collectCreators(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> collectCreators
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> collect
    java.util.List _findPotentialConstructors(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialConstructors
    java.util.List _findPotentialFactories(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialFactories
    boolean _isIncludableFactoryMethod(java.lang.reflect.Method) -> _isIncludableFactoryMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructDefaultConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructNonDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructNonDefaultConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod constructFactoryCreator(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method) -> constructFactoryCreator
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] collectAnnotations(java.lang.annotation.Annotation[][],java.lang.annotation.Annotation[][]) -> collectAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> collectAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(java.lang.reflect.AnnotatedElement,java.lang.reflect.AnnotatedElement) -> collectAnnotations
    boolean isIncludableConstructor(java.lang.reflect.Constructor) -> isIncludableConstructor
com.fasterxml.jackson.databind.introspect.AnnotatedField -> com.fasterxml.jackson.databind.introspect.AnnotatedField:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Field _field -> _field
    com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization -> _serialization
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization) -> <init>
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    int getAnnotationCount() -> getAnnotationCount
    boolean isTransient() -> isTransient
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization -> com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> clazz
    java.lang.String name -> name
    void <init>(java.lang.reflect.Field) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    boolean _collectAnnotations -> _collectAnnotations
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> <init>
    java.util.List collectFields(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,boolean) -> collectFields
    java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType) -> collect
    java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map) -> _findFields
    void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder -> com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> typeContext
    java.lang.reflect.Field field -> field
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> annotations
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedField build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMember -> com.fasterxml.jackson.databind.introspect.AnnotatedMember:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> _typeContext
    com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations -> _annotations
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    java.lang.String getFullName() -> getFullName
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext getTypeContext() -> getTypeContext
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.Iterable annotations() -> annotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void fixAccess(boolean) -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
com.fasterxml.jackson.databind.introspect.AnnotatedMethod -> com.fasterxml.jackson.databind.introspect.AnnotatedMethod:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramClasses -> _paramClasses
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization -> _serialization
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getRawType() -> getRawType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Object callOn(java.lang.Object) -> callOn
    java.lang.Object callOnWith(java.lang.Object,java.lang.Object[]) -> callOnWith
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Method getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.String getFullName() -> getFullName
    java.lang.Class[] getRawParameterTypes() -> getRawParameterTypes
    java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    java.lang.Class getRawReturnType() -> getRawReturnType
    boolean hasReturnType() -> hasReturnType
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    java.lang.reflect.Member getMember() -> getMember
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization -> com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> clazz
    java.lang.String name -> name
    java.lang.Class[] args -> args
    void <init>(java.lang.reflect.Method) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector:
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    boolean _collectAnnotations -> _collectAnnotations
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collectMethods(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class,boolean) -> collectMethods
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> collect
    void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMemberMethods
    void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMethodMixIns
    boolean _isIncludableMemberMethod(java.lang.reflect.Method) -> _isIncludableMemberMethod
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder:
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> typeContext
    java.lang.reflect.Method method -> method
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> annotations
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap:
    java.util.Map _methods -> _methods
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    int size() -> size
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.introspect.AnnotatedParameter -> com.fasterxml.jackson.databind.introspect.AnnotatedParameter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner -> _owner
    com.fasterxml.jackson.databind.JavaType _type -> _type
    int _index -> _index
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,int) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams -> com.fasterxml.jackson.databind.introspect.AnnotatedWithParams:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> replaceParameterAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
com.fasterxml.jackson.databind.introspect.AnnotationCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector:
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> NO_ANNOTATIONS
    java.lang.Object _data -> _data
    void <init>(java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.util.Annotations emptyAnnotations() -> emptyAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector() -> emptyCollector
    com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector(java.lang.Object) -> emptyCollector
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    java.lang.Object getData() -> getData
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector:
    com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector instance -> instance
    void <init>(java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector:
    java.util.HashMap _annotations -> _annotations
    void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _type -> _type
    java.lang.annotation.Annotation _value -> _value
    void <init>(java.lang.Class,java.lang.annotation.Annotation) -> <init>
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector:
    java.lang.Class _type -> _type
    java.lang.annotation.Annotation _value -> _value
    void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations -> com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    java.lang.annotation.Annotation _value1 -> _value1
    java.lang.annotation.Annotation _value2 -> _value2
    void <init>(java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair -> com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.AnnotationIntrospector _primary -> _primary
    com.fasterxml.jackson.databind.AnnotationIntrospector _secondary -> _secondary
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.AnnotationIntrospector create(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> create
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated,boolean) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean _isExplicitClassOrOb(java.lang.Object,java.lang.Class) -> _isExplicitClassOrOb
    java.lang.Object _explicitClassOrOb(java.lang.Object,java.lang.Class) -> _explicitClassOrOb
com.fasterxml.jackson.databind.introspect.AnnotationMap -> com.fasterxml.jackson.databind.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotationMap of(java.lang.Class,java.lang.annotation.Annotation) -> of
    void <init>(java.util.HashMap) -> <init>
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.Iterable annotations() -> annotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> merge
    int size() -> size
    boolean addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    boolean add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    boolean _add(java.lang.annotation.Annotation) -> _add
com.fasterxml.jackson.databind.introspect.BasicBeanDescription -> com.fasterxml.jackson.databind.introspect.BasicBeanDescription:
    java.lang.Class[] NO_VIEWS -> NO_VIEWS
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector _propCollector -> _propCollector
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo -> _classInfo
    java.lang.Class[] _defaultViews -> _defaultViews
    boolean _defaultViewsResolved -> _defaultViewsResolved
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> _objectIdInfo
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> <init>
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forDeserialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forSerialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forOtherUse
    java.util.List _properties() -> _properties
    boolean removeProperty(java.lang.String) -> removeProperty
    boolean addProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> addProperty
    boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> hasProperty
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    java.util.List findProperties() -> findProperties
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor() -> findJsonKeyAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    java.util.List getConstructorsWithMode() -> getConstructorsWithMode
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    java.lang.Class[] findDefaultViews() -> findDefaultViews
    com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    java.util.List findBackReferences() -> findBackReferences
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.util.List getFactoryMethodsWithMode() -> getFactoryMethodsWithMode
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isFactoryMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata findFactoryMethodMetadata(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findFactoryMethodMetadata
    com.fasterxml.jackson.databind.PropertyName _findCreatorPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _findCreatorPropertyName
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    java.lang.String findClassDescription() -> findClassDescription
    java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
    com.fasterxml.jackson.databind.util.Converter _createConverter(java.lang.Object) -> _createConverter
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector -> com.fasterxml.jackson.databind.introspect.BasicClassIntrospector:
    long serialVersionUID -> serialVersionUID
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.Class CLS_STRING -> CLS_STRING
    java.lang.Class CLS_JSON_NODE -> CLS_JSON_NODE
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription OBJECT_DESC -> OBJECT_DESC
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.ClassIntrospector copy() -> copy
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String) -> collectProperties
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription,boolean) -> collectPropertiesWithBuilder
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectPropertiesWithBuilder
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy) -> constructPropertyCollector
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String) -> constructPropertyCollector
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdTypeDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> _findStdTypeDesc
    boolean _isStdJDKCollection(com.fasterxml.jackson.databind.JavaType) -> _isStdJDKCollection
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> _findStdJdkCollectionDesc
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> _resolveAnnotatedClass
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> _resolveAnnotatedWithoutSuperTypes
    com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition -> com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition:
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> EMPTY_INCLUDE
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    java.lang.String getInternalName() -> getInternalName
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean isExplicitlyNamed() -> isExplicitlyNamed
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    boolean isRequired() -> isRequired
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    java.util.Iterator getConstructorParameters() -> getConstructorParameters
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator() -> getNonConstructorMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    java.lang.Class[] findViews() -> findViews
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    java.lang.String findReferenceName() -> findReferenceName
    boolean isTypeId() -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ClassIntrospector -> com.fasterxml.jackson.databind.introspect.ClassIntrospector:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.ClassIntrospector copy() -> copy
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver -> com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
com.fasterxml.jackson.databind.introspect.CollectorBase -> com.fasterxml.jackson.databind.introspect.CollectorBase:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> NO_ANNOTATIONS
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.annotation.Annotation[]) -> collectAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectFromBundle
    com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectDefaultAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectDefaultFromBundle
    boolean _ignorableAnnotation(java.lang.annotation.Annotation) -> _ignorableAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase -> com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    java.util.List _aliases -> _aliases
    void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase) -> <init>
    boolean isRequired() -> isRequired
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    boolean isVirtual() -> isVirtual
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy -> com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _forClass -> _forClass
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator -> _baseNameValidator
    boolean _stdBeanNaming -> _stdBeanNaming
    boolean _isGettersNonBoolean -> _isGettersNonBoolean
    java.lang.String _getterPrefix -> _getterPrefix
    java.lang.String _isGetterPrefix -> _isGetterPrefix
    java.lang.String _mutatorPrefix -> _mutatorPrefix
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    boolean _booleanType(com.fasterxml.jackson.databind.JavaType) -> _booleanType
    java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
    java.lang.String legacyManglePropertyName(java.lang.String,int) -> legacyManglePropertyName
    java.lang.String stdManglePropertyName(java.lang.String,int) -> stdManglePropertyName
    boolean _isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _isCglibGetCallbacks
    boolean _isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _isGroovyMetaClassGetter
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator -> com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator:
    boolean accept(char,java.lang.String,int) -> accept
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator -> com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator:
    boolean _allowLowerCaseFirstChar -> _allowLowerCaseFirstChar
    boolean _allowNonLetterFirstChar -> _allowNonLetterFirstChar
    void <init>(boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator forFirstNameRule(boolean,boolean) -> forFirstNameRule
    boolean accept(char,java.lang.String,int) -> accept
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider -> com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider:
    long serialVersionUID -> serialVersionUID
    java.lang.String _setterPrefix -> _setterPrefix
    java.lang.String _withPrefix -> _withPrefix
    java.lang.String _getterPrefix -> _getterPrefix
    java.lang.String _isGetterPrefix -> _isGetterPrefix
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator -> _baseNameValidator
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withSetterPrefix(java.lang.String) -> withSetterPrefix
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withBuilderPrefix(java.lang.String) -> withBuilderPrefix
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withGetterPrefix(java.lang.String) -> withGetterPrefix
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withIsGetterPrefix(java.lang.String) -> withIsGetterPrefix
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withFirstCharAcceptance(boolean,boolean) -> withFirstCharAcceptance
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withBaseNameValidator(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> withBaseNameValidator
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forPOJO(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forPOJO
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.BeanDescription) -> forBuilder
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forRecord(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forRecord
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$RecordNaming -> com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$RecordNaming:
    java.util.Set _fieldNames -> _fieldNames
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
com.fasterxml.jackson.databind.introspect.EnumNamingStrategyFactory -> com.fasterxml.jackson.databind.introspect.EnumNamingStrategyFactory:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.EnumNamingStrategy createEnumNamingStrategyInstance(java.lang.Object,boolean) -> createEnumNamingStrategyInstance
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector:
    long serialVersionUID -> serialVersionUID
    java.lang.Class[] ANNOTATIONS_TO_INFER_SER -> ANNOTATIONS_TO_INFER_SER
    java.lang.Class[] ANNOTATIONS_TO_INFER_DESER -> ANNOTATIONS_TO_INFER_DESER
    com.fasterxml.jackson.databind.ext.Java7Support _java7Helper -> _java7Helper
    com.fasterxml.jackson.databind.util.LRUMap _annotationsInside -> _annotationsInside
    boolean _cfgConstructorPropertiesImpliesCreator -> _cfgConstructorPropertiesImpliesCreator
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector setConstructorPropertiesImpliesCreator(boolean) -> setConstructorPropertiesImpliesCreator
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.util.List findSubtypesCheckRepeatedNames(java.lang.String,com.fasterxml.jackson.annotation.JsonSubTypes$Type[]) -> findSubtypesCheckRepeatedNames
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value _refinePropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Value) -> _refinePropertyInclusion
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    java.lang.Boolean _findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated) -> _findSortAlpha
    void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> _constructVirtualProperty
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> _constructVirtualProperty
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated) -> _isIgnorable
    java.lang.Class _classIfExplicit(java.lang.Class) -> _classIfExplicit
    java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class) -> _classIfExplicit
    com.fasterxml.jackson.databind.PropertyName _propertyName(java.lang.String,java.lang.String) -> _propertyName
    com.fasterxml.jackson.databind.PropertyName _findConstructorName(com.fasterxml.jackson.databind.introspect.Annotated) -> _findConstructorName
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> _findTypeResolver
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    boolean _primitiveAndWrapper(java.lang.Class,java.lang.Class) -> _primitiveAndWrapper
    boolean _primitiveAndWrapper(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _primitiveAndWrapper
    com.fasterxml.jackson.databind.JsonMappingException _databindException(java.lang.String) -> _databindException
    com.fasterxml.jackson.databind.JsonMappingException _databindException(java.lang.Throwable,java.lang.String) -> _databindException
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion -> $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MemberKey -> com.fasterxml.jackson.databind.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    void <init>(java.lang.reflect.Method) -> <init>
    void <init>(java.lang.reflect.Constructor) -> <init>
    void <init>(java.lang.String,java.lang.Class[]) -> <init>
    java.lang.String getName() -> getName
    int argCount() -> argCount
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver -> com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext narrowMethodTypeParameters(java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> narrowMethodTypeParameters
    com.fasterxml.jackson.databind.type.TypeBindings bindMethodTypeParameters(java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> bindMethodTypeParameters
    java.lang.reflect.TypeVariable maybeGetTypeVariable(java.lang.reflect.Type) -> maybeGetTypeVariable
    java.lang.reflect.ParameterizedType maybeGetParameterizedType(java.lang.reflect.Type) -> maybeGetParameterizedType
    boolean pessimisticallyValidateBounds(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type[]) -> pessimisticallyValidateBounds
    boolean pessimisticallyValidateBound(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type) -> pessimisticallyValidateBound
    java.lang.reflect.TypeVariable findByName(java.lang.reflect.TypeVariable[],java.lang.String) -> findByName
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.databind.introspect.ObjectIdInfo -> com.fasterxml.jackson.databind.introspect.ObjectIdInfo:
    com.fasterxml.jackson.databind.PropertyName _propertyName -> _propertyName
    java.lang.Class _generator -> _generator
    java.lang.Class _resolver -> _resolver
    java.lang.Class _scope -> _scope
    boolean _alwaysAsId -> _alwaysAsId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo EMPTY -> EMPTY
    void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo empty() -> empty
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean) -> withAlwaysAsId
    com.fasterxml.jackson.databind.PropertyName getPropertyName() -> getPropertyName
    java.lang.Class getScope() -> getScope
    java.lang.Class getGeneratorType() -> getGeneratorType
    java.lang.Class getResolverType() -> getResolverType
    boolean getAlwaysAsId() -> getAlwaysAsId
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector -> com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy _accessorNaming -> _accessorNaming
    boolean _forSerialization -> _forSerialization
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef -> _classDef
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    boolean _useAnnotations -> _useAnnotations
    boolean _isRecordType -> _isRecordType
    boolean _collected -> _collected
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.Map _fieldRenameMappings -> _fieldRenameMappings
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anyGetterField -> _anyGetterField
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _anySetterField -> _anySetterField
    java.util.LinkedList _jsonKeyAccessors -> _jsonKeyAccessors
    java.util.LinkedList _jsonValueAccessors -> _jsonValueAccessors
    java.util.HashSet _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.LinkedHashMap _injectables -> _injectables
    boolean _stdBeanNaming -> _stdBeanNaming
    java.lang.String _mutatorPrefix -> _mutatorPrefix
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy _accessorNaming(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> _accessorNaming
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    boolean isRecordType() -> isRecordType
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef() -> getClassDef
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonKeyAccessor() -> getJsonKeyAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonValueAccessor() -> getJsonValueAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter() -> getAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetterField() -> getAnyGetterField
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetterMethod() -> getAnyGetterMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnySetterField() -> getAnySetterField
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    java.util.Map getPropertyMap() -> getPropertyMap
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    java.lang.Class findPOJOBuilderClass() -> findPOJOBuilderClass
    void collectAll() -> collectAll
    void _addFields(java.util.Map) -> _addFields
    void _addCreators(java.util.Map) -> _addCreators
    void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _addCreatorParam
    void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> _addCreatorParam
    void _addMethods(java.util.Map) -> _addMethods
    void _addGetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addGetterMethod
    void _addSetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addSetterMethod
    void _addInjectables(java.util.Map) -> _addInjectables
    void _doAddInjectable(com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _doAddInjectable
    com.fasterxml.jackson.databind.PropertyName _propNameFromSimple(java.lang.String) -> _propNameFromSimple
    java.lang.String _checkRenameByField(java.lang.String) -> _checkRenameByField
    void _removeUnwantedProperties(java.util.Map) -> _removeUnwantedProperties
    void _removeUnwantedAccessor(java.util.Map) -> _removeUnwantedAccessor
    void _collectIgnorals(java.lang.String) -> _collectIgnorals
    void _renameProperties(java.util.Map) -> _renameProperties
    void _renameUsing(java.util.Map,com.fasterxml.jackson.databind.PropertyNamingStrategy) -> _renameUsing
    void _renameWithWrappers(java.util.Map) -> _renameWithWrappers
    void _sortProperties(java.util.Map) -> _sortProperties
    boolean _anyIndexed(java.util.Collection) -> _anyIndexed
    boolean _resolveFieldVsGetter(java.util.List) -> _resolveFieldVsGetter
    void reportProblem(java.lang.String,java.lang.Object[]) -> reportProblem
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,com.fasterxml.jackson.databind.PropertyName) -> _property
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,java.lang.String) -> _property
    com.fasterxml.jackson.databind.PropertyNamingStrategy _findNamingStrategy() -> _findNamingStrategy
    void _updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> _updateCreatorProperty
    boolean _replaceCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> _replaceCreatorProperty
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty NOT_REFEFERENCE_PROP -> NOT_REFEFERENCE_PROP
    boolean _forSerialization -> _forSerialization
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.PropertyName _name -> _name
    com.fasterxml.jackson.databind.PropertyName _internalName -> _internalName
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields -> _fields
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters -> _ctorParameters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters -> _getters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters -> _setters
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty _referenceInfo -> _referenceInfo
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withSimpleName(java.lang.String) -> withSimpleName
    int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    java.lang.String getInternalName() -> getInternalName
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean isExplicitlyNamed() -> isExplicitlyNamed
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _getSetterInfo
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetterUnchecked() -> getGetterUnchecked
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetterUnchecked() -> getSetterUnchecked
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _selectSetterFromMultiple(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _selectSetterFromMultiple
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _selectSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _selectSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedField getFieldUnchecked() -> getFieldUnchecked
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    java.util.Iterator getConstructorParameters() -> getConstructorParameters
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMemberUnchecked() -> getPrimaryMemberUnchecked
    int _getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _getterPriority
    int _setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _setterPriority
    java.lang.Class[] findViews() -> findViews
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    boolean isTypeId() -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    com.fasterxml.jackson.annotation.JsonProperty$Access findAccess() -> findAccess
    void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addField
    void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addCtor
    void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addGetter
    void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addSetter
    void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> addAll
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> merge
    void removeIgnored() -> removeIgnored
    com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean) -> removeNonVisible
    com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean,com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> removeNonVisible
    void removeConstructors() -> removeConstructors
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]) -> _mergeAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _getAllAnnotations
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> _applyAnnotations
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeIgnored
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeNonVisible
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _trimByVisibility
    boolean _anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicits
    boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitNames
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyVisible
    boolean anyIgnorals() -> anyIgnorals
    boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyIgnorals
    boolean anyExplicitsWithoutIgnoral() -> anyExplicitsWithoutIgnoral
    boolean _anyExplicitsWithoutIgnoral(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitsWithoutIgnoral
    boolean _anyExplicitNamesWithoutIgnoral(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitNamesWithoutIgnoral
    java.util.Set findExplicitNames() -> findExplicitNames
    java.util.Collection explode(java.util.Collection) -> explode
    void _explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _explode
    java.util.Set _findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,java.util.Set) -> _findExplicitNames
    java.lang.String toString() -> toString
    java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember) -> fromMemberAnnotations
    java.lang.Object fromMemberAnnotationsExcept(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember,java.lang.Object) -> fromMemberAnnotationsExcept
    java.lang.Class _rawTypeOf(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _rawTypeOf
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    java.lang.Class[] withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    com.fasterxml.jackson.annotation.JsonProperty$Access withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access -> $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked:
    java.lang.Object value -> value
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> next
    com.fasterxml.jackson.databind.PropertyName name -> name
    boolean isNameExplicit -> isNameExplicit
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    void <init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNext() -> withoutNext
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object) -> withValue
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> withNext
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored() -> withoutIgnored
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible() -> withoutNonVisible
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> append
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility() -> trimByVisibility
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> next
    void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> <init>
    boolean hasNext() -> hasNext
    com.fasterxml.jackson.databind.introspect.AnnotatedMember next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver -> com.fasterxml.jackson.databind.introspect.SimpleMixInResolver:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _overrides -> _overrides
    java.util.Map _localMixIns -> _localMixIns
    void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,java.util.Map) -> <init>
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> withOverrides
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withoutLocalDefinitions() -> withoutLocalDefinitions
    void setLocalDefinitions(java.util.Map) -> setLocalDefinitions
    void addLocalDefinition(java.lang.Class,java.lang.Class) -> addLocalDefinition
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver copy() -> copy
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int localSize() -> localSize
    boolean hasMixIns() -> hasMixIns
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
com.fasterxml.jackson.databind.introspect.TypeResolutionContext -> com.fasterxml.jackson.databind.introspect.TypeResolutionContext:
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic -> com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty -> com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember -> com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _declaringClass -> _declaringClass
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.String _name -> _name
    void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    int getAnnotationCount() -> getAnnotationCount
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.VisibilityChecker -> com.fasterxml.jackson.databind.introspect.VisibilityChecker:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
com.fasterxml.jackson.databind.introspect.VisibilityChecker$1 -> com.fasterxml.jackson.databind.introspect.VisibilityChecker$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std -> com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std ALL_PUBLIC -> ALL_PUBLIC
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std allPublicInstance() -> allPublicInstance
    void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect) -> <init>
    void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std construct(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> construct
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std _with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _defaultOrOverride(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _defaultOrOverride
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.WithMember -> com.fasterxml.jackson.databind.introspect.WithMember:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.package-info -> com.fasterxml.jackson.databind.introspect.package-info:
com.fasterxml.jackson.databind.jdk14.JDK14Util -> com.fasterxml.jackson.databind.jdk14.JDK14Util:
    void <init>() -> <init>
    java.lang.String[] getRecordFieldNames(java.lang.Class) -> getRecordFieldNames
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findRecordConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> findRecordConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findRecordConstructor(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.List) -> findRecordConstructor
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator -> com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator:
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _recordClass -> _recordClass
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> _intr
    java.util.List _constructors -> _constructors
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _primaryConstructor -> _primaryConstructor
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] _recordFields -> _recordFields
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor locate(java.util.List) -> locate
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName -> com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName:
    java.lang.Class rawType -> rawType
    java.lang.String name -> name
    void <init>(java.lang.Class,java.lang.String) -> <init>
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor -> com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor:
    java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS -> RECORD_GET_RECORD_COMPONENTS
    java.lang.reflect.Method RECORD_COMPONENT_GET_NAME -> RECORD_COMPONENT_GET_NAME
    java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE -> RECORD_COMPONENT_GET_TYPE
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE -> INSTANCE
    java.lang.RuntimeException PROBLEM -> PROBLEM
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor instance() -> instance
    java.lang.String[] getRecordFieldNames(java.lang.Class) -> getRecordFieldNames
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] getRecordFields(java.lang.Class) -> getRecordFields
    java.lang.Object[] recordComponents(java.lang.Class) -> recordComponents
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jdk14.package-info -> com.fasterxml.jackson.databind.jdk14.package-info:
com.fasterxml.jackson.databind.json.JsonMapper -> com.fasterxml.jackson.databind.json.JsonMapper:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.json.JsonMapper) -> <init>
    com.fasterxml.jackson.databind.json.JsonMapper copy() -> copy
    com.fasterxml.jackson.databind.json.JsonMapper$Builder builder() -> builder
    com.fasterxml.jackson.databind.json.JsonMapper$Builder builder(com.fasterxml.jackson.core.JsonFactory) -> builder
    com.fasterxml.jackson.databind.json.JsonMapper$Builder rebuild() -> rebuild
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    boolean isEnabled(com.fasterxml.jackson.core.json.JsonReadFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.json.JsonWriteFeature) -> isEnabled
    com.fasterxml.jackson.databind.ObjectMapper copy() -> copy
com.fasterxml.jackson.databind.json.JsonMapper$Builder -> com.fasterxml.jackson.databind.json.JsonMapper$Builder:
    void <init>(com.fasterxml.jackson.databind.json.JsonMapper) -> <init>
    com.fasterxml.jackson.databind.json.JsonMapper$Builder enable(com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    com.fasterxml.jackson.databind.json.JsonMapper$Builder disable(com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    com.fasterxml.jackson.databind.json.JsonMapper$Builder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    com.fasterxml.jackson.databind.json.JsonMapper$Builder enable(com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    com.fasterxml.jackson.databind.json.JsonMapper$Builder disable(com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    com.fasterxml.jackson.databind.json.JsonMapper$Builder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor$Base:
    void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor:
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> itemsFormat
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> itemsFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor$Base:
    com.fasterxml.jackson.databind.SerializerProvider _provider -> _provider
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> itemsFormat
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> itemsFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor$Base:
    void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes STRING -> STRING
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NUMBER -> NUMBER
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes INTEGER -> INTEGER
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes OBJECT -> OBJECT
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ARRAY -> ARRAY
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NULL -> NULL
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ANY -> ANY
    java.util.Map _byLCName -> _byLCName
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] values() -> values
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    java.lang.String value() -> value
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes forValue(java.lang.String) -> forValue
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable:
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider:
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType) -> expectArrayFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType) -> expectStringFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType) -> expectNumberFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType) -> expectIntegerFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor expectBooleanFormat(com.fasterxml.jackson.databind.JavaType) -> expectBooleanFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor expectNullFormat(com.fasterxml.jackson.databind.JavaType) -> expectNullFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType) -> expectAnyFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(com.fasterxml.jackson.databind.JavaType) -> expectMapFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base:
    com.fasterxml.jackson.databind.SerializerProvider _provider -> _provider
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType) -> expectArrayFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType) -> expectStringFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType) -> expectNumberFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType) -> expectIntegerFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor expectBooleanFormat(com.fasterxml.jackson.databind.JavaType) -> expectBooleanFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor expectNullFormat(com.fasterxml.jackson.databind.JavaType) -> expectNullFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType) -> expectAnyFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(com.fasterxml.jackson.databind.JavaType) -> expectMapFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor:
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor$Base:
    void <init>() -> <init>
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor:
    void keyFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> keyFormat
    void valueFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> valueFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor$Base:
    com.fasterxml.jackson.databind.SerializerProvider _provider -> _provider
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    void keyFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> keyFormat
    void valueFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> valueFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor$Base:
    void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor:
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor$Base:
    void <init>() -> <init>
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor:
    void property(com.fasterxml.jackson.databind.BeanProperty) -> property
    void property(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> property
    void optionalProperty(com.fasterxml.jackson.databind.BeanProperty) -> optionalProperty
    void optionalProperty(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> optionalProperty
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base:
    com.fasterxml.jackson.databind.SerializerProvider _provider -> _provider
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    void property(com.fasterxml.jackson.databind.BeanProperty) -> property
    void property(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> property
    void optionalProperty(com.fasterxml.jackson.databind.BeanProperty) -> optionalProperty
    void optionalProperty(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> optionalProperty
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor$Base:
    void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat COLOR -> COLOR
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE -> DATE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE_TIME -> DATE_TIME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat EMAIL -> EMAIL
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat HOST_NAME -> HOST_NAME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IP_ADDRESS -> IP_ADDRESS
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IPV6 -> IPV6
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat PHONE -> PHONE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat REGEX -> REGEX
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat STYLE -> STYLE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat TIME -> TIME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat URI -> URI
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UTC_MILLISEC -> UTC_MILLISEC
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UUID -> UUID
    java.lang.String _desc -> _desc
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] values() -> values
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor:
    void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> format
    void enumTypes(java.util.Set) -> enumTypes
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor$Base:
    void <init>() -> <init>
    void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> format
    void enumTypes(java.util.Set) -> enumTypes
com.fasterxml.jackson.databind.jsonFormatVisitors.package-info -> com.fasterxml.jackson.databind.jsonFormatVisitors.package-info:
com.fasterxml.jackson.databind.jsonschema.JsonSchema -> com.fasterxml.jackson.databind.jsonschema.JsonSchema:
    com.fasterxml.jackson.databind.node.ObjectNode schema -> schema
    void <init>(com.fasterxml.jackson.databind.node.ObjectNode) -> <init>
    com.fasterxml.jackson.databind.node.ObjectNode getSchemaNode() -> getSchemaNode
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema -> com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema:
    java.lang.String NO_VALUE -> NO_VALUE
    java.lang.String id() -> id
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
com.fasterxml.jackson.databind.jsonschema.SchemaAware -> com.fasterxml.jackson.databind.jsonschema.SchemaAware:
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
com.fasterxml.jackson.databind.jsonschema.package-info -> com.fasterxml.jackson.databind.jsonschema.package-info:
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator:
    long serialVersionUID -> serialVersionUID
    java.util.Set _invalidBaseTypes -> _invalidBaseTypes
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers -> _baseTypeMatchers
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers -> _subTypeNameMatchers
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers -> _subClassMatchers
    void <init>(java.util.Set,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[]) -> <init>
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder builder() -> builder
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder:
    java.util.Set _invalidBaseTypes -> _invalidBaseTypes
    java.util.List _baseTypeMatchers -> _baseTypeMatchers
    java.util.List _subTypeNameMatchers -> _subTypeNameMatchers
    java.util.List _subTypeClassMatchers -> _subTypeClassMatchers
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.Class) -> allowIfBaseType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.util.regex.Pattern) -> allowIfBaseType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.String) -> allowIfBaseType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> allowIfBaseType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder denyForExactBaseType(java.lang.Class) -> denyForExactBaseType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.Class) -> allowIfSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.util.regex.Pattern) -> allowIfSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.String) -> allowIfSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> allowIfSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubTypeIsArray() -> allowIfSubTypeIsArray
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator build() -> build
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> _appendBaseMatcher
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher) -> _appendSubNameMatcher
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> _appendSubClassMatcher
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1:
    java.lang.Class val$baseOfBase -> val$baseOfBase
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2:
    java.util.regex.Pattern val$patternForBase -> val$patternForBase
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3:
    java.lang.String val$prefixForBase -> val$prefixForBase
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4:
    java.lang.Class val$subTypeBase -> val$subTypeBase
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5:
    java.util.regex.Pattern val$patternForSubType -> val$patternForSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6:
    java.lang.String val$prefixForSubType -> val$prefixForSubType
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7 -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7:
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder) -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher:
    void <init>() -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher -> com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher:
    void <init>() -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator -> com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
    boolean isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> isUnsafeBaseType
    boolean isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> isSafeSubType
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes -> com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes:
    com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance -> instance
    java.util.Set UNSAFE -> UNSAFE
    void <init>() -> <init>
    boolean isUnsafeBaseType(java.lang.Class) -> isUnsafeBaseType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.NamedType -> com.fasterxml.jackson.databind.jsontype.NamedType:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator -> com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base -> com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity -> com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity:
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED -> ALLOWED
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED -> DENIED
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE -> INDETERMINATE
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity[] values() -> values
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.SubtypeResolver -> com.fasterxml.jackson.databind.jsontype.SubtypeResolver:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy() -> copy
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
com.fasterxml.jackson.databind.jsontype.TypeDeserializer -> com.fasterxml.jackson.databind.jsontype.TypeDeserializer:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    boolean hasDefaultImpl() -> hasDefaultImpl
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> deserializeIfNatural
    java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> deserializeIfNatural
com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1 -> com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.TypeIdResolver -> com.fasterxml.jackson.databind.jsontype.TypeIdResolver:
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    java.lang.String idFromBaseType() -> idFromBaseType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
com.fasterxml.jackson.databind.jsontype.TypeSerializer -> com.fasterxml.jackson.databind.jsontype.TypeSerializer:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> typeId
    com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> typeId
    com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> typeId
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
    void _writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> _writeLegacySuffix
com.fasterxml.jackson.databind.jsontype.TypeSerializer$1 -> com.fasterxml.jackson.databind.jsontype.TypeSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _locateTypeId
    boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer:
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    java.util.BitSet EMPTY_CLASS_FINGERPRINT -> EMPTY_CLASS_FINGERPRINT
    java.util.Map fieldBitIndex -> fieldBitIndex
    java.util.Map subtypeFingerprints -> subtypeFingerprints
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    java.util.Map buildFingerprints(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection) -> buildFingerprints
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    void prune(java.util.List,int) -> prune
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer:
    com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE -> INSTANCE
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer instance() -> instance
    com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer:
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void _writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeScalarPrefix
    void _writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeObjectPrefix
    void _writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeArrayPrefix
    void _writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeScalarSuffix
    void _writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeObjectSuffix
    void _writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeArraySuffix
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _inclusion -> _inclusion
    boolean _strictTypeIdHandling -> _strictTypeIdHandling
    java.lang.String _msgForMissingId -> _msgForMissingId
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As,boolean) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String) -> _deserializeTypedForId
    java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer:
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String _validTypeId(java.lang.String) -> _validTypeId
    void _writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeTypeId
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver:
    java.lang.String JAVA_UTIL_PKG -> JAVA_UTIL_PKG
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator -> _subTypeValidator
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory) -> _idFrom
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator -> com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver -> com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver) -> <init>
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy() -> copy
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
    void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map) -> _collectAndResolveByTypeId
    java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map) -> _combineNamedAndUnnamed
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType -> _idType
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    boolean _typeIdVisible -> _typeIdVisible
    java.lang.Class _defaultImpl -> _defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.annotation.JsonTypeInfo$As,java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder,java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.JavaType defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> defineDefaultImpl
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.String getTypeProperty() -> getTypeProperty
    boolean isTypeIdVisible() -> isTypeIdVisible
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean) -> idResolver
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig) -> subTypeValidator
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> verifyBaseTypeValidity
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> reportInvalidBaseType
    boolean allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> allowPrimitiveTypes
    boolean _strictTypeIdHandling(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _strictTypeIdHandling
    boolean _hasTypeResolver(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _hasTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 -> com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id -> $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator -> com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator:
    java.lang.String PREFIX_SPRING -> PREFIX_SPRING
    java.lang.String PREFIX_C3P0 -> PREFIX_C3P0
    java.util.Set DEFAULT_NO_DESER_CLASS_NAMES -> DEFAULT_NO_DESER_CLASS_NAMES
    java.util.Set _cfgIllegalClassNames -> _cfgIllegalClassNames
    com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance -> instance
    void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance() -> instance
    void validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> validateSubType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.JavaType _defaultImpl -> _defaultImpl
    java.lang.String _typePropertyName -> _typePropertyName
    boolean _typeIdVisible -> _typeIdVisible
    java.util.Map _deserializers -> _deserializers
    com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    boolean hasDefaultImpl() -> hasDefaultImpl
    com.fasterxml.jackson.databind.JavaType baseType() -> baseType
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _findDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findDefaultImplDeserializer
    java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWithNativeTypeId
    java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserializeWithNativeTypeId
    com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleUnknownTypeId
    com.fasterxml.jackson.databind.JavaType _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleMissingTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromBaseType() -> idFromBaseType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    java.util.concurrent.ConcurrentHashMap _typeToId -> _typeToId
    java.util.Map _idToType -> _idToType
    boolean _caseInsensitive -> _caseInsensitive
    void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.concurrent.ConcurrentHashMap,java.util.HashMap) -> <init>
    com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> construct
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromClass(java.lang.Class) -> idFromClass
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String) -> _typeFromId
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId) -> _generateTypeId
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    void handleMissingId(java.lang.Object) -> handleMissingId
com.fasterxml.jackson.databind.jsontype.impl.package-info -> com.fasterxml.jackson.databind.jsontype.impl.package-info:
com.fasterxml.jackson.databind.jsontype.package-info -> com.fasterxml.jackson.databind.jsontype.package-info:
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver -> com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _mappings -> _mappings
    void <init>() -> <init>
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.module.SimpleDeserializers -> com.fasterxml.jackson.databind.module.SimpleDeserializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    boolean _hasEnumDeserializer -> _hasEnumDeserializer
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    void addDeserializers(java.util.Map) -> addDeserializers
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
    com.fasterxml.jackson.databind.JsonDeserializer _find(com.fasterxml.jackson.databind.JavaType) -> _find
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers -> com.fasterxml.jackson.databind.module.SimpleKeyDeserializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    void <init>() -> <init>
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.module.SimpleModule -> com.fasterxml.jackson.databind.module.SimpleModule:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicInteger MODULE_ID_SEQ -> MODULE_ID_SEQ
    java.lang.String _name -> _name
    com.fasterxml.jackson.core.Version _version -> _version
    boolean _hasExplicitName -> _hasExplicitName
    com.fasterxml.jackson.databind.module.SimpleSerializers _serializers -> _serializers
    com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers -> _deserializers
    com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers -> _keySerializers
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier _deserializerModifier -> _deserializerModifier
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier _serializerModifier -> _serializerModifier
    java.util.HashMap _mixins -> _mixins
    java.util.LinkedHashSet _subtypes -> _subtypes
    com.fasterxml.jackson.databind.PropertyNamingStrategy _namingStrategy -> _namingStrategy
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.Version) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.Version) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map,java.util.List) -> <init>
    java.lang.Object getTypeId() -> getTypeId
    void setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setSerializers
    void setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers) -> setDeserializers
    void setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setKeySerializers
    void setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers) -> setKeyDeserializers
    void setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    void setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators) -> setValueInstantiators
    com.fasterxml.jackson.databind.module.SimpleModule setDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> setDeserializerModifier
    com.fasterxml.jackson.databind.module.SimpleModule setSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> setSerializerModifier
    com.fasterxml.jackson.databind.module.SimpleModule setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
    com.fasterxml.jackson.databind.module.SimpleModule addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.module.SimpleModule addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.module.SimpleModule addKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addKeySerializer
    com.fasterxml.jackson.databind.module.SimpleModule addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    com.fasterxml.jackson.databind.module.SimpleModule addKeyDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addKeyDeserializer
    com.fasterxml.jackson.databind.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(java.lang.Class[]) -> registerSubtypes
    com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(java.util.Collection) -> registerSubtypes
    com.fasterxml.jackson.databind.module.SimpleModule addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    com.fasterxml.jackson.databind.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    java.lang.String getModuleName() -> getModuleName
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    com.fasterxml.jackson.core.Version version() -> version
    void _checkNotNull(java.lang.Object,java.lang.String) -> _checkNotNull
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.module.SimpleSerializers -> com.fasterxml.jackson.databind.module.SimpleSerializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    boolean _hasEnumSerializer -> _hasEnumSerializer
    void <init>() -> <init>
    void <init>(java.util.List) -> <init>
    void addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    void addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    void addSerializers(java.util.List) -> addSerializers
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _findInterfaceMapping(java.lang.Class,com.fasterxml.jackson.databind.type.ClassKey) -> _findInterfaceMapping
    void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> _addSerializer
com.fasterxml.jackson.databind.module.SimpleValueInstantiators -> com.fasterxml.jackson.databind.module.SimpleValueInstantiators:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    void <init>() -> <init>
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.module.package-info -> com.fasterxml.jackson.databind.module.package-info:
com.fasterxml.jackson.databind.node.ArrayNode -> com.fasterxml.jackson.databind.node.ArrayNode:
    long serialVersionUID -> serialVersionUID
    java.util.List _children -> _children
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,int) -> <init>
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.List) -> <init>
    com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    com.fasterxml.jackson.databind.node.ArrayNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.ObjectNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withObjectAddTailElement
    com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withArrayAddTailElement
    void _withXxxSetArrayElement(int,com.fasterxml.jackson.databind.JsonNode) -> _withXxxSetArrayElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    boolean isArray() -> isArray
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator elements() -> elements
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    com.fasterxml.jackson.databind.JsonNode required(int) -> required
    boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    com.fasterxml.jackson.databind.JsonNode set(int,com.fasterxml.jackson.databind.JsonNode) -> set
    com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode) -> add
    com.fasterxml.jackson.databind.node.ArrayNode addAll(com.fasterxml.jackson.databind.node.ArrayNode) -> addAll
    com.fasterxml.jackson.databind.node.ArrayNode addAll(java.util.Collection) -> addAll
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,com.fasterxml.jackson.databind.JsonNode) -> insert
    com.fasterxml.jackson.databind.JsonNode remove(int) -> remove
    com.fasterxml.jackson.databind.node.ArrayNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.node.ArrayNode addArray() -> addArray
    com.fasterxml.jackson.databind.node.ObjectNode addObject() -> addObject
    com.fasterxml.jackson.databind.node.ArrayNode addPOJO(java.lang.Object) -> addPOJO
    com.fasterxml.jackson.databind.node.ArrayNode addRawValue(com.fasterxml.jackson.databind.util.RawValue) -> addRawValue
    com.fasterxml.jackson.databind.node.ArrayNode addNull() -> addNull
    com.fasterxml.jackson.databind.node.ArrayNode add(short) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Short) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(int) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Integer) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(long) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Long) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(float) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Float) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(double) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Double) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.math.BigDecimal) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.math.BigInteger) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.String) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(boolean) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Boolean) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(byte[]) -> add
    com.fasterxml.jackson.databind.node.ArrayNode insertArray(int) -> insertArray
    com.fasterxml.jackson.databind.node.ObjectNode insertObject(int) -> insertObject
    com.fasterxml.jackson.databind.node.ArrayNode insertNull(int) -> insertNull
    com.fasterxml.jackson.databind.node.ArrayNode insertPOJO(int,java.lang.Object) -> insertPOJO
    com.fasterxml.jackson.databind.node.ArrayNode insertRawValue(int,com.fasterxml.jackson.databind.util.RawValue) -> insertRawValue
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,short) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Short) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,int) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Integer) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,long) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Long) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,float) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Float) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,double) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Double) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigDecimal) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigInteger) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.String) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,boolean) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Boolean) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,byte[]) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode setNull(int) -> setNull
    com.fasterxml.jackson.databind.node.ArrayNode setPOJO(int,java.lang.Object) -> setPOJO
    com.fasterxml.jackson.databind.node.ArrayNode setRawValue(int,com.fasterxml.jackson.databind.util.RawValue) -> setRawValue
    com.fasterxml.jackson.databind.node.ArrayNode set(int,short) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Short) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,int) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Integer) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,long) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Long) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,float) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Float) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,double) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Double) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.math.BigDecimal) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.math.BigInteger) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.String) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,boolean) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Boolean) -> set
    com.fasterxml.jackson.databind.node.ArrayNode set(int,byte[]) -> set
    boolean equals(java.lang.Object) -> equals
    boolean _childrenEqual(com.fasterxml.jackson.databind.node.ArrayNode) -> _childrenEqual
    int hashCode() -> hashCode
    com.fasterxml.jackson.databind.node.ArrayNode _set(int,com.fasterxml.jackson.databind.JsonNode) -> _set
    com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode) -> _add
    com.fasterxml.jackson.databind.node.ArrayNode _insert(int,com.fasterxml.jackson.databind.JsonNode) -> _insert
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.BaseJsonNode -> com.fasterxml.jackson.databind.node.BaseJsonNode:
    long serialVersionUID -> serialVersionUID
    java.lang.Object writeReplace() -> writeReplace
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    int hashCode() -> hashCode
    com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    com.fasterxml.jackson.databind.JsonNode required(int) -> required
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    com.fasterxml.jackson.core.JsonParser traverse(com.fasterxml.jackson.core.ObjectCodec) -> traverse
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    void _withXxxVerifyReplace(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean,com.fasterxml.jackson.databind.JsonNode) -> _withXxxVerifyReplace
    boolean _withXxxMayReplace(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode$OverwriteMode) -> _withXxxMayReplace
    com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.String toString() -> toString
    java.lang.String toPrettyString() -> toPrettyString
    java.lang.Object _reportWrongNodeType(java.lang.String,java.lang.Object[]) -> _reportWrongNodeType
    java.lang.Object _reportWrongNodeOperation(java.lang.String,java.lang.Object[]) -> _reportWrongNodeOperation
    com.fasterxml.jackson.core.JsonPointer _jsonPointerIfValid(java.lang.String) -> _jsonPointerIfValid
    java.math.BigInteger _bigIntFromBigDec(java.math.BigDecimal) -> _bigIntFromBigDec
com.fasterxml.jackson.databind.node.BaseJsonNode$1 -> com.fasterxml.jackson.databind.node.BaseJsonNode$1:
    int[] $SwitchMap$com$fasterxml$jackson$databind$JsonNode$OverwriteMode -> $SwitchMap$com$fasterxml$jackson$databind$JsonNode$OverwriteMode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BigIntegerNode -> com.fasterxml.jackson.databind.node.BigIntegerNode:
    java.math.BigInteger MIN_INTEGER -> MIN_INTEGER
    java.math.BigInteger MAX_INTEGER -> MAX_INTEGER
    java.math.BigInteger MIN_LONG -> MIN_LONG
    java.math.BigInteger MAX_LONG -> MAX_LONG
    java.math.BigInteger _value -> _value
    void <init>(java.math.BigInteger) -> <init>
    com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isBigInteger() -> isBigInteger
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BinaryNode -> com.fasterxml.jackson.databind.node.BinaryNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    void <init>(byte[]) -> <init>
    void <init>(byte[],int,int) -> <init>
    com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]) -> valueOf
    com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BooleanNode -> com.fasterxml.jackson.databind.node.BooleanNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.BooleanNode TRUE -> TRUE
    com.fasterxml.jackson.databind.node.BooleanNode FALSE -> FALSE
    boolean _value -> _value
    void <init>(boolean) -> <init>
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.node.BooleanNode getTrue() -> getTrue
    com.fasterxml.jackson.databind.node.BooleanNode getFalse() -> getFalse
    com.fasterxml.jackson.databind.node.BooleanNode valueOf(boolean) -> valueOf
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean booleanValue() -> booleanValue
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ContainerNode -> com.fasterxml.jackson.databind.node.ContainerNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    void <init>() -> <init>
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    java.lang.String asText() -> asText
    int size() -> size
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
com.fasterxml.jackson.databind.node.DecimalNode -> com.fasterxml.jackson.databind.node.DecimalNode:
    com.fasterxml.jackson.databind.node.DecimalNode ZERO -> ZERO
    java.math.BigDecimal MIN_INTEGER -> MIN_INTEGER
    java.math.BigDecimal MAX_INTEGER -> MAX_INTEGER
    java.math.BigDecimal MIN_LONG -> MIN_LONG
    java.math.BigDecimal MAX_LONG -> MAX_LONG
    java.math.BigDecimal _value -> _value
    void <init>(java.math.BigDecimal) -> <init>
    com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isBigDecimal() -> isBigDecimal
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.DoubleNode -> com.fasterxml.jackson.databind.node.DoubleNode:
    double _value -> _value
    void <init>(double) -> <init>
    com.fasterxml.jackson.databind.node.DoubleNode valueOf(double) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isDouble() -> isDouble
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean isNaN() -> isNaN
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.FloatNode -> com.fasterxml.jackson.databind.node.FloatNode:
    float _value -> _value
    void <init>(float) -> <init>
    com.fasterxml.jackson.databind.node.FloatNode valueOf(float) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isFloat() -> isFloat
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean isNaN() -> isNaN
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.IntNode -> com.fasterxml.jackson.databind.node.IntNode:
    int MIN_CANONICAL -> MIN_CANONICAL
    int MAX_CANONICAL -> MAX_CANONICAL
    com.fasterxml.jackson.databind.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    void <init>(int) -> <init>
    com.fasterxml.jackson.databind.node.IntNode valueOf(int) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isInt() -> isInt
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.InternalNodeMapper -> com.fasterxml.jackson.databind.node.InternalNodeMapper:
    com.fasterxml.jackson.databind.json.JsonMapper JSON_MAPPER -> JSON_MAPPER
    com.fasterxml.jackson.databind.ObjectWriter STD_WRITER -> STD_WRITER
    com.fasterxml.jackson.databind.ObjectWriter PRETTY_WRITER -> PRETTY_WRITER
    com.fasterxml.jackson.databind.ObjectReader NODE_READER -> NODE_READER
    void <init>() -> <init>
    java.lang.String nodeToString(com.fasterxml.jackson.databind.node.BaseJsonNode) -> nodeToString
    java.lang.String nodeToPrettyString(com.fasterxml.jackson.databind.node.BaseJsonNode) -> nodeToPrettyString
    byte[] valueToBytes(java.lang.Object) -> valueToBytes
    com.fasterxml.jackson.databind.JsonNode bytesToNode(byte[]) -> bytesToNode
    com.fasterxml.jackson.databind.JsonSerializable _wrapper(com.fasterxml.jackson.databind.node.BaseJsonNode) -> _wrapper
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack -> com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack:
    java.util.Iterator[] _stack -> _stack
    int _top -> _top
    int _end -> _end
    void <init>() -> <init>
    void push(java.util.Iterator) -> push
    java.util.Iterator popOrNull() -> popOrNull
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer -> com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer:
    com.fasterxml.jackson.databind.node.BaseJsonNode _root -> _root
    com.fasterxml.jackson.databind.SerializerProvider _context -> _context
    void <init>(com.fasterxml.jackson.databind.node.BaseJsonNode) -> <init>
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode) -> _serializeNonRecursive
    void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack,java.util.Iterator) -> _serializeNonRecursive
com.fasterxml.jackson.databind.node.JsonNodeCreator -> com.fasterxml.jackson.databind.node.JsonNodeCreator:
    com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
com.fasterxml.jackson.databind.node.JsonNodeFactory -> com.fasterxml.jackson.databind.node.JsonNodeFactory:
    long serialVersionUID -> serialVersionUID
    int MAX_ELEMENT_INDEX_FOR_INSERT -> MAX_ELEMENT_INDEX_FOR_INSERT
    boolean _cfgBigDecimalExact -> _cfgBigDecimalExact
    com.fasterxml.jackson.databind.node.JsonNodeFactory instance -> instance
    void <init>(boolean) -> <init>
    void <init>() -> <init>
    com.fasterxml.jackson.databind.node.JsonNodeFactory withExactBigDecimals(boolean) -> withExactBigDecimals
    int getMaxElementIndexForInsert() -> getMaxElementIndexForInsert
    boolean willStripTrailingBigDecimalZeroes() -> willStripTrailingBigDecimalZeroes
    com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    boolean _inIntRange(long) -> _inIntRange
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeType -> com.fasterxml.jackson.databind.node.JsonNodeType:
    com.fasterxml.jackson.databind.node.JsonNodeType ARRAY -> ARRAY
    com.fasterxml.jackson.databind.node.JsonNodeType BINARY -> BINARY
    com.fasterxml.jackson.databind.node.JsonNodeType BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.databind.node.JsonNodeType MISSING -> MISSING
    com.fasterxml.jackson.databind.node.JsonNodeType NULL -> NULL
    com.fasterxml.jackson.databind.node.JsonNodeType NUMBER -> NUMBER
    com.fasterxml.jackson.databind.node.JsonNodeType OBJECT -> OBJECT
    com.fasterxml.jackson.databind.node.JsonNodeType POJO -> POJO
    com.fasterxml.jackson.databind.node.JsonNodeType STRING -> STRING
    com.fasterxml.jackson.databind.node.JsonNodeType[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.node.JsonNodeType[] values() -> values
    com.fasterxml.jackson.databind.node.JsonNodeType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.LongNode -> com.fasterxml.jackson.databind.node.LongNode:
    long _value -> _value
    void <init>(long) -> <init>
    com.fasterxml.jackson.databind.node.LongNode valueOf(long) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isLong() -> isLong
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.MissingNode -> com.fasterxml.jackson.databind.node.MissingNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.MissingNode instance -> instance
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
    boolean isMissingNode() -> isMissingNode
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.MissingNode getInstance() -> getInstance
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    java.lang.String asText() -> asText
    java.lang.String asText(java.lang.String) -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode require() -> require
    com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toPrettyString() -> toPrettyString
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NodeCursor -> com.fasterxml.jackson.databind.node.NodeCursor:
    com.fasterxml.jackson.databind.node.NodeCursor _parent -> _parent
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    void <init>(int,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    com.fasterxml.jackson.databind.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    com.fasterxml.jackson.databind.node.NodeCursor iterateChildren() -> iterateChildren
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor -> com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor:
    java.util.Iterator _contents -> _contents
    com.fasterxml.jackson.databind.JsonNode _currentElement -> _currentElement
    void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor -> com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor -> com.fasterxml.jackson.databind.node.NodeCursor$RootCursor:
    com.fasterxml.jackson.databind.JsonNode _node -> _node
    boolean _done -> _done
    void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeSerialization -> com.fasterxml.jackson.databind.node.NodeSerialization:
    int LONGEST_EAGER_ALLOC -> LONGEST_EAGER_ALLOC
    long serialVersionUID -> serialVersionUID
    byte[] json -> json
    void <init>() -> <init>
    void <init>(byte[]) -> <init>
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.node.NodeSerialization from(java.lang.Object) -> from
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    byte[] _read(java.io.ObjectInput,int) -> _read
com.fasterxml.jackson.databind.node.NullNode -> com.fasterxml.jackson.databind.node.NullNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.NullNode instance -> instance
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.node.NullNode getInstance() -> getInstance
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    java.lang.String asText(java.lang.String) -> asText
    java.lang.String asText() -> asText
    com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NumericNode -> com.fasterxml.jackson.databind.node.NumericNode:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean isNaN() -> isNaN
com.fasterxml.jackson.databind.node.ObjectNode -> com.fasterxml.jackson.databind.node.ObjectNode:
    long serialVersionUID -> serialVersionUID
    java.util.Map _children -> _children
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map) -> <init>
    com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    com.fasterxml.jackson.databind.node.ObjectNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.ObjectNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withObjectAddTailProperty
    com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withArrayAddTailProperty
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    boolean isObject() -> isObject
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator elements() -> elements
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    java.util.Iterator fields() -> fields
    java.util.Set properties() -> properties
    boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeFilteredContents(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean,boolean) -> serializeFilteredContents
    com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> set
    com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map) -> setAll
    com.fasterxml.jackson.databind.JsonNode setAll(com.fasterxml.jackson.databind.node.ObjectNode) -> setAll
    com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> replace
    com.fasterxml.jackson.databind.JsonNode without(java.lang.String) -> without
    com.fasterxml.jackson.databind.JsonNode without(java.util.Collection) -> without
    com.fasterxml.jackson.databind.JsonNode put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> put
    com.fasterxml.jackson.databind.JsonNode putIfAbsent(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> putIfAbsent
    com.fasterxml.jackson.databind.JsonNode remove(java.lang.String) -> remove
    com.fasterxml.jackson.databind.node.ObjectNode remove(java.util.Collection) -> remove
    com.fasterxml.jackson.databind.node.ObjectNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode putAll(java.util.Map) -> putAll
    com.fasterxml.jackson.databind.JsonNode putAll(com.fasterxml.jackson.databind.node.ObjectNode) -> putAll
    com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection) -> retain
    com.fasterxml.jackson.databind.node.ObjectNode retain(java.lang.String[]) -> retain
    com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String) -> putArray
    com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String) -> putObject
    com.fasterxml.jackson.databind.node.ObjectNode putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    com.fasterxml.jackson.databind.node.ObjectNode putRawValue(java.lang.String,com.fasterxml.jackson.databind.util.RawValue) -> putRawValue
    com.fasterxml.jackson.databind.node.ObjectNode putNull(java.lang.String) -> putNull
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,short) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Short) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,int) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Integer) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,long) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Long) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,float) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Float) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,double) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Double) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.math.BigDecimal) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.math.BigInteger) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,boolean) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Boolean) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,byte[]) -> put
    boolean equals(java.lang.Object) -> equals
    boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode) -> _childrenEqual
    int hashCode() -> hashCode
    com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> _put
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.POJONode -> com.fasterxml.jackson.databind.node.POJONode:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _value -> _value
    void <init>(java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    java.lang.String asText(java.lang.String) -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode) -> _pojoEquals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.ShortNode -> com.fasterxml.jackson.databind.node.ShortNode:
    short _value -> _value
    void <init>(short) -> <init>
    com.fasterxml.jackson.databind.node.ShortNode valueOf(short) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isShort() -> isShort
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.TextNode -> com.fasterxml.jackson.databind.node.TextNode:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    void <init>(java.lang.String) -> <init>
    com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String) -> valueOf
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    java.lang.String textValue() -> textValue
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    java.lang.String asText(java.lang.String) -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.TreeTraversingParser -> com.fasterxml.jackson.databind.node.TreeTraversingParser:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor -> _nodeCursor
    boolean _closed -> _closed
    void <init>(com.fasterxml.jackson.databind.JsonNode) -> <init>
    void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    boolean isNaN() -> isNaN
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.node.TreeTraversingParser$1 -> com.fasterxml.jackson.databind.node.TreeTraversingParser$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ValueNode -> com.fasterxml.jackson.databind.node.ValueNode:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean isEmpty() -> isEmpty
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    boolean has(int) -> has
    boolean hasNonNull(int) -> hasNonNull
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    boolean has(java.lang.String) -> has
    boolean hasNonNull(java.lang.String) -> hasNonNull
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.package-info -> com.fasterxml.jackson.databind.node.package-info:
com.fasterxml.jackson.databind.package-info -> com.fasterxml.jackson.databind.package-info:
com.fasterxml.jackson.databind.ser.AnyGetterWriter -> com.fasterxml.jackson.databind.ser.AnyGetterWriter:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.ser.std.MapSerializer _mapSerializer -> _mapSerializer
    void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> getAndSerialize
    void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter) -> getAndFilter
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.BasicSerializerFactory -> com.fasterxml.jackson.databind.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig -> _factoryConfig
    void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByLookup
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializerByAnnotations
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByPrimaryType
    com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findOptionalStdSerializer
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByAddonType
    com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializerFromAnnotation
    com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingSerializer
    com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildContainerSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildIndexedListSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType) -> buildEnumSetSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildMapSerializer
    com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer) -> _checkMapContentInclusion
    com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> buildMapEntrySerializer
    com.fasterxml.jackson.annotation.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findInclusionWithContent
    com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildAtomicReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIteratorSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIterableSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildEnumSerializer
    com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findContentSerializer
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findFilterId
    boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> usesStaticTyping
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1 -> com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanPropertyFilter -> com.fasterxml.jackson.databind.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.BeanPropertyWriter -> com.fasterxml.jackson.databind.ser.BeanPropertyWriter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.core.io.SerializedString _name -> _name
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> _wrapperName
    com.fasterxml.jackson.databind.JavaType _declaredType -> _declaredType
    com.fasterxml.jackson.databind.JavaType _cfgSerializationType -> _cfgSerializationType
    com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.JsonSerializer _nullSerializer -> _nullSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    java.util.HashMap _internalSettings -> _internalSettings
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object) -> <init>
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _new(com.fasterxml.jackson.databind.PropertyName) -> _new
    void assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> assignTypeSerializer
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingWriter
    void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType) -> setNonTrivialBaseType
    void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    java.lang.Object readResolve() -> readResolve
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode) -> _depositSchemaProperty
    java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    com.fasterxml.jackson.core.SerializableString getSerializedName() -> getSerializedName
    boolean hasSerializer() -> hasSerializer
    boolean hasNullSerializer() -> hasNullSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> getTypeSerializer
    boolean isUnwrapping() -> isUnwrapping
    boolean willSuppressNulls() -> willSuppressNulls
    boolean wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName) -> wouldConflictWithName
    com.fasterxml.jackson.databind.JsonSerializer getSerializer() -> getSerializer
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
    java.lang.Class getRawSerializationType() -> getRawSerializationType
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> _handleSelfReference
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializer -> com.fasterxml.jackson.databind.ser.BeanSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType) -> createDummy
    com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> createDummy
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder -> com.fasterxml.jackson.databind.ser.BeanSerializerBuilder:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> <init>
    void setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> setTypeId
    void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> setObjectIdWriter
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    java.util.List getProperties() -> getProperties
    boolean hasProperties() -> hasProperties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter() -> getAnyGetter
    java.lang.Object getFilterId() -> getFilterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId() -> getTypeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter() -> getObjectIdWriter
    com.fasterxml.jackson.databind.JsonSerializer build() -> build
    com.fasterxml.jackson.databind.ser.BeanSerializer createDummy() -> createDummy
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerFactory -> com.fasterxml.jackson.databind.ser.BeanSerializerFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance -> instance
    void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    java.lang.Iterable customSerializers() -> customSerializers
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> _createSerializer2
    com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findBeanSerializer
    com.fasterxml.jackson.databind.JsonSerializer findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findBeanOrAddOnSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializer
    com.fasterxml.jackson.databind.JsonSerializer constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> constructBeanOrAddOnSerializer
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> constructObjectIdHandler
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructPropertyBuilder
    com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializerBuilder
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> findBeanProperties
    java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterBeanProperties
    java.util.List filterUnwantedJDKProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterUnwantedJDKProperties
    void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeSetterlessGetters
    java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List) -> removeOverlappingTypeIds
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructWriter
    com.fasterxml.jackson.databind.JsonSerializer _findUnsupportedTypeSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _findUnsupportedTypeSerializer
    boolean _isUnserializableJacksonType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> _isUnserializableJacksonType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerModifier -> com.fasterxml.jackson.databind.ser.BeanSerializerModifier:
    void <init>() -> <init>
    java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> orderProperties
    com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> updateBuilder
    com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifySerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyEnumSerializer
    com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyKeySerializer
com.fasterxml.jackson.databind.ser.ContainerSerializer -> com.fasterxml.jackson.databind.ser.ContainerSerializer:
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(java.lang.Class,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer) -> <init>
    com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> hasContentTypeAnnotation
com.fasterxml.jackson.databind.ser.ContextualSerializer -> com.fasterxml.jackson.databind.ser.ContextualSerializer:
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:
    long serialVersionUID -> serialVersionUID
    java.util.Map _seenObjectIds -> _seenObjectIds
    java.util.ArrayList _objectIdGenerators -> _objectIdGenerators
    com.fasterxml.jackson.core.JsonGenerator _generator -> _generator
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> <init>
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy() -> copy
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    java.util.Map _createObjectIdMap() -> _createObjectIdMap
    boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> hasSerializerFor
    com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> serializeValue
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> serializeValue
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> serializeValue
    void serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializePolymorphic
    void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName) -> _serialize
    void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer) -> _serialize
    void _serializeNull(com.fasterxml.jackson.core.JsonGenerator) -> _serializeNull
    java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> _wrapAsIOE
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl) -> <init>
    void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy() -> copy
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
com.fasterxml.jackson.databind.ser.FilterProvider -> com.fasterxml.jackson.databind.ser.FilterProvider:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
    com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> findPropertyFilter
com.fasterxml.jackson.databind.ser.PropertyBuilder -> com.fasterxml.jackson.databind.ser.PropertyBuilder:
    java.lang.Object NO_DEFAULT_MARKER -> NO_DEFAULT_MARKER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> _defaultInclusion
    boolean _useRealPropertyDefaults -> _useRealPropertyDefaults
    void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> <init>
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> buildWriter
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> _constructPropertyWriter
    com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getPropertyDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> getPropertyDefaultValue
    java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> getDefaultValue
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyBuilder$1 -> com.fasterxml.jackson.databind.ser.PropertyBuilder$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyFilter -> com.fasterxml.jackson.databind.ser.PropertyFilter:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.PropertyWriter -> com.fasterxml.jackson.databind.ser.PropertyWriter:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.PropertyWriter) -> <init>
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    java.lang.annotation.Annotation findAnnotation(java.lang.Class) -> findAnnotation
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.ResolvableSerializer -> com.fasterxml.jackson.databind.ser.ResolvableSerializer:
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.SerializerCache -> com.fasterxml.jackson.databind.ser.SerializerCache:
    int DEFAULT_MAX_CACHED -> DEFAULT_MAX_CACHED
    com.fasterxml.jackson.databind.util.LRUMap _sharedMap -> _sharedMap
    java.util.concurrent.atomic.AtomicReference _readOnlyMap -> _readOnlyMap
    void <init>() -> <init>
    void <init>(int) -> <init>
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _makeReadOnlyLookupMap() -> _makeReadOnlyLookupMap
    int size() -> size
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    void flush() -> flush
com.fasterxml.jackson.databind.ser.SerializerFactory -> com.fasterxml.jackson.databind.ser.SerializerFactory:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
com.fasterxml.jackson.databind.ser.Serializers -> com.fasterxml.jackson.databind.ser.Serializers:
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.Serializers$Base -> com.fasterxml.jackson.databind.ser.Serializers$Base:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value,java.lang.Class[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    boolean _suppressNulls(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressNulls
    java.lang.Object _suppressableValue(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressableValue
    boolean isVirtual() -> isVirtual
    java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter -> com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter:
    long serialVersionUID -> serialVersionUID
    java.lang.String _attrName -> _attrName
    void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> construct
    void <init>(com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter) -> <init>
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer -> com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer -> _defaultSerializer
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider) -> hasSingleElement
    void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsArray
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.impl.FailingSerializer -> com.fasterxml.jackson.databind.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    void <init>(java.lang.String) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> <init>
    com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    boolean _inView(java.lang.Class) -> _inView
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.List) -> isEmpty
    boolean hasSingleElement(java.util.List) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int) -> serializeContents
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer -> com.fasterxml.jackson.databind.ser.impl.IteratorSerializer:
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator) -> isEmpty
    boolean hasSingleElement(java.util.Iterator) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    void serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void _serializeDynamicContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeDynamicContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer -> com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer:
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    com.fasterxml.jackson.databind.JavaType _entryType -> _entryType
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> withResolved
    com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean hasSingleElement(java.util.Map$Entry) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map$Entry) -> isEmpty
    void serialize(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1 -> com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter -> com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter:
    com.fasterxml.jackson.databind.JavaType idType -> idType
    com.fasterxml.jackson.core.SerializableString propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    boolean alwaysAsId -> alwaysAsId
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean) -> construct
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> withSerializer
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean) -> withAlwaysAsId
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property -> _property
    void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap:
    boolean _resetWhenFull -> _resetWhenFull
    void <init>(boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> findAndAddRootValueSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> findAndAddRootValueSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddKeySerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties() -> emptyForProperties
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForRootValues() -> emptyForRootValues
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    com.fasterxml.jackson.databind.JsonSerializer _serializer1 -> _serializer1
    com.fasterxml.jackson.databind.JsonSerializer _serializer2 -> _serializer2
    void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES -> FOR_PROPERTIES
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES -> FOR_ROOT_VALUES
    void <init>(boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi:
    int MAX_ENTRIES -> MAX_ENTRIES
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[]) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map -> map
    void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap -> com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap:
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _mask -> _mask
    void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    int findSize(int) -> findSize
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(com.fasterxml.jackson.databind.util.LRUMap) -> from
    int size() -> size
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    void lambda$new$0(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[],com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> lambda$new$0
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket -> com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket:
    com.fasterxml.jackson.databind.JsonSerializer value -> value
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next -> next
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket,com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    boolean matchesTyped(java.lang.Class) -> matchesTyped
    boolean matchesUntyped(java.lang.Class) -> matchesUntyped
    boolean matchesTyped(com.fasterxml.jackson.databind.JavaType) -> matchesTyped
    boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType) -> matchesUntyped
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll() -> serializeAll
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAll() -> filterOutAll
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll(java.util.Set) -> serializeAll
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
    com.fasterxml.jackson.databind.ser.PropertyFilter from(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> from
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    boolean includeElement(java.lang.Object) -> includeElement
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter val$src -> val$src
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> <init>
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter EXCLUDE_ALL -> EXCLUDE_ALL
    java.util.Set _propertiesToInclude -> _propertiesToInclude
    void <init>(java.util.Set) -> <init>
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL -> INCLUDE_ALL
    java.util.Set _propertiesToExclude -> _propertiesToExclude
    void <init>(java.util.Set) -> <init>
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider -> com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider:
    long serialVersionUID -> serialVersionUID
    java.util.Map _filtersById -> _filtersById
    com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter -> _defaultFilter
    boolean _cfgFailOnUnknownId -> _cfgFailOnUnknownId
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    java.util.Map _convert(java.util.Map) -> _convert
    com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> _convert
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> setDefaultFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter) -> setDefaultFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter) -> setDefaultFilter
    com.fasterxml.jackson.databind.ser.PropertyFilter getDefaultFilter() -> getDefaultFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    boolean willFailOnUnknownId() -> willFailOnUnknownId
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> addFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.PropertyFilter) -> addFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter) -> addFilter
    com.fasterxml.jackson.databind.ser.PropertyFilter removeFilter(java.lang.String) -> removeFilter
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
    com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> findPropertyFilter
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer -> com.fasterxml.jackson.databind.ser.impl.StringArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String[]) -> isEmpty
    boolean hasSingleElement(java.lang.String[]) -> hasSingleElement
    void serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsSlow
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer -> com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer:
    com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance -> instance
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer -> com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonSerializer valueSerializer() -> valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer() -> typeSerializer
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer -> com.fasterxml.jackson.databind.ser.impl.UnknownSerializer:
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> failForEmpty
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer -> com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _type -> _type
    java.lang.String _message -> _message
    void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> _new
    boolean isUnwrapping() -> isUnwrapping
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode) -> _depositSchemaProperty
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1 -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor val$visitor -> val$visitor
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor) -> <init>
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.impl.WritableObjectId -> com.fasterxml.jackson.databind.ser.impl.WritableObjectId:
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    java.lang.Object id -> id
    boolean idWritten -> idWritten
    void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> <init>
    boolean writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsId
    java.lang.Object generateId(java.lang.Object) -> generateId
    void writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsField
com.fasterxml.jackson.databind.ser.impl.package-info -> com.fasterxml.jackson.databind.ser.impl.package-info:
com.fasterxml.jackson.databind.ser.package-info -> com.fasterxml.jackson.databind.ser.package-info:
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.ArraySerializerBase:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider) -> _shouldUnwrapSingle
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase:
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _staticTyping -> _staticTyping
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer -> com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference) -> _isValuePresent
    java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference) -> _getReferenced
    java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference) -> _getReferencedIfPresent
    java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    boolean _isValuePresent(java.lang.Object) -> _isValuePresent
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase -> com.fasterxml.jackson.databind.ser.std.BeanSerializerBase:
    com.fasterxml.jackson.databind.PropertyName NAME_FOR_OBJECT_REF -> NAME_FOR_OBJECT_REF
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props -> _props
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> findConvertingSerializer
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.Iterator properties() -> properties
    boolean usesObjectId() -> usesObjectId
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean) -> _serializeWithObjectId
    void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _serializeWithObjectId
    void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId) -> _serializeObjectId
    com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> _typeIdDef
    java.lang.String _customTypeId(java.lang.Object) -> _customTypeId
    void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFieldsFiltered
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1 -> com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BooleanSerializer -> com.fasterxml.jackson.databind.ser.std.BooleanSerializer:
    long serialVersionUID -> serialVersionUID
    boolean _forPrimitive -> _forPrimitive
    void <init>(boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber -> com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber:
    long serialVersionUID -> serialVersionUID
    boolean _forPrimitive -> _forPrimitive
    void <init>(boolean) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer -> com.fasterxml.jackson.databind.ser.std.ByteArraySerializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,byte[]) -> isEmpty
    void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer -> com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer:
    void <init>() -> <init>
    void serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CalendarSerializer -> com.fasterxml.jackson.databind.ser.std.CalendarSerializer:
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance -> instance
    void <init>() -> <init>
    void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    long _timestamp(java.util.Calendar) -> _timestamp
    void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ClassSerializer -> com.fasterxml.jackson.databind.ser.std.ClassSerializer:
    void <init>() -> <init>
    void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CollectionSerializer -> com.fasterxml.jackson.databind.ser.std.CollectionSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    boolean hasSingleElement(java.util.Collection) -> hasSingleElement
    void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.DateSerializer -> com.fasterxml.jackson.databind.ser.std.DateSerializer:
    com.fasterxml.jackson.databind.ser.std.DateSerializer instance -> instance
    void <init>() -> <init>
    void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    long _timestamp(java.util.Date) -> _timestamp
    void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase -> com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase:
    java.lang.Boolean _useTimestamp -> _useTimestamp
    java.text.DateFormat _customFormat -> _customFormat
    java.util.concurrent.atomic.AtomicReference _reusedCustomFormat -> _reusedCustomFormat
    void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider) -> _asTimestamp
    void _acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,boolean) -> _acceptJsonFormatVisitor
    void _serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsString
com.fasterxml.jackson.databind.ser.std.EnumSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.EnumValues _values -> _values
    java.lang.Boolean _serializeAsIndex -> _serializeAsIndex
    com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming -> _valuesByEnumNaming
    void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value) -> construct
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsIndex
    java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean,java.lang.Boolean) -> _isShapeWrittenUsingIndex
    com.fasterxml.jackson.databind.util.EnumValues constructEnumNamingStrategyValues(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> constructEnumNamingStrategyValues
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSetSerializer:
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.EnumSet) -> isEmpty
    boolean hasSingleElement(java.util.EnumSet) -> hasSingleElement
    void serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.FileSerializer -> com.fasterxml.jackson.databind.ser.std.FileSerializer:
    void <init>() -> <init>
    void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer -> com.fasterxml.jackson.databind.ser.std.InetAddressSerializer:
    boolean _asNumeric -> _asNumeric
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer -> com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer:
    void <init>() -> <init>
    void serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.IterableSerializer -> com.fasterxml.jackson.databind.ser.std.IterableSerializer:
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable) -> isEmpty
    boolean hasSingleElement(java.lang.Iterable) -> hasSingleElement
    void serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer -> com.fasterxml.jackson.databind.ser.std.JsonValueSerializer:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    boolean _forceTypeInformation -> _forceTypeInformation
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    java.lang.Class _notNullClass(java.lang.Class) -> _notNullClass
    com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> withResolved
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    boolean _acceptJsonFormatVisitorForEnum(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _acceptJsonFormatVisitorForEnum
    boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> isNaturalTypeWithStdHandling
    com.fasterxml.jackson.databind.JsonSerializer _findDynamicSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> _findDynamicSerializer
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter -> com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    java.lang.Object _forObject -> _forObject
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
com.fasterxml.jackson.databind.ser.std.MapProperty -> com.fasterxml.jackson.databind.ser.std.MapProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.BeanProperty BOGUS_PROP -> BOGUS_PROP
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.lang.Object _key -> _key
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> reset
    void reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> reset
    java.lang.String getName() -> getName
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer -> com.fasterxml.jackson.databind.ser.std.MapSerializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    java.util.Set _ignoredEntries -> _ignoredEntries
    java.util.Set _includedEntries -> _includedEntries
    java.lang.Object _filterId -> _filterId
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker -> _inclusionChecker
    boolean _sortKeys -> _sortKeys
    void <init>(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean) -> withResolved
    com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,boolean) -> withResolved
    com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    void _ensureOverride(java.lang.String) -> _ensureOverride
    void _ensureOverride() -> _ensureOverride
    void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object) -> withContentInclusion
    com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map) -> isEmpty
    boolean hasSingleElement(java.util.Map) -> hasSingleElement
    com.fasterxml.jackson.databind.JsonSerializer getKeySerializer() -> getKeySerializer
    void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithoutTypeInfo(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeWithoutTypeInfo
    void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeOptionalFields
    void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeFieldsUsing
    void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredFields
    void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeTypedFields
    void serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.util.Map,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredAnyProperties
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _orderEntries
    boolean _hasNullKey(java.util.Map) -> _hasNullKey
    void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _writeNullKeyedEntry
    com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _findSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer$1 -> com.fasterxml.jackson.databind.ser.std.MapSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase -> com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase:
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,boolean) -> <init>
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NullSerializer -> com.fasterxml.jackson.databind.ser.std.NullSerializer:
    com.fasterxml.jackson.databind.ser.std.NullSerializer instance -> instance
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializer instance -> instance
    int MAX_BIG_DECIMAL_SCALE -> MAX_BIG_DECIMAL_SCALE
    boolean _isInt -> _isInt
    void <init>(java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer bigDecimalAsStringSerializer() -> bigDecimalAsStringSerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$1 -> com.fasterxml.jackson.databind.ser.std.NumberSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE -> BD_INSTANCE
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String valueToString(java.lang.Object) -> valueToString
    boolean _verifyBigDecimalRange(com.fasterxml.jackson.core.JsonGenerator,java.math.BigDecimal) -> _verifyBigDecimalRange
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers -> com.fasterxml.jackson.databind.ser.std.NumberSerializers:
    void <init>() -> <init>
    void addAll(java.util.Map) -> addAll
com.fasterxml.jackson.databind.ser.std.NumberSerializers$1 -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base:
    com.fasterxml.jackson.core.JsonParser$NumberType _numberType -> _numberType
    java.lang.String _schemaType -> _schemaType
    boolean _isInt -> _isInt
    void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer:
    void <init>(java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean notFinite(double) -> notFinite
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance -> instance
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance -> instance
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer:
    void <init>(java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer:
    void <init>(java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance -> instance
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer -> com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object[]) -> isEmpty
    boolean hasSingleElement(java.lang.Object[]) -> hasSingleElement
    void serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.RawSerializer -> com.fasterxml.jackson.databind.ser.std.RawSerializer:
    void <init>(java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer -> com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.JavaType _referredType -> _referredType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.util.NameTransformer _unwrapper -> _unwrapper
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    java.lang.Object _suppressableValue -> _suppressableValue
    boolean _suppressNulls -> _suppressNulls
    void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    boolean _isValuePresent(java.lang.Object) -> _isValuePresent
    java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> _useStatic
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.JavaType getReferredType() -> getReferredType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> _findCachedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> _findSerializer
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1 -> com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SerializableSerializer -> com.fasterxml.jackson.databind.ser.std.SerializableSerializer:
    com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance -> instance
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializable) -> isEmpty
    void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SqlDateSerializer -> com.fasterxml.jackson.databind.ser.std.SqlDateSerializer:
    void <init>() -> <init>
    void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    long _timestamp(java.sql.Date) -> _timestamp
    void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer -> com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer:
    void <init>() -> <init>
    void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase -> com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase:
    java.lang.Boolean _unwrapSingle -> _unwrapSingle
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers:
    java.util.HashMap _arraySerializers -> _arraySerializers
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class) -> findStandardImpl
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,boolean[]) -> isEmpty
    boolean hasSingleElement(boolean[]) -> hasSingleElement
    void serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer:
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,char[]) -> isEmpty
    void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]) -> _writeArrayContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,double[]) -> isEmpty
    boolean hasSingleElement(double[]) -> hasSingleElement
    void serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,float[]) -> isEmpty
    boolean hasSingleElement(float[]) -> hasSingleElement
    void serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,int[]) -> isEmpty
    boolean hasSingleElement(int[]) -> hasSingleElement
    void serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,long[]) -> isEmpty
    boolean hasSingleElement(long[]) -> hasSingleElement
    void serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> VALUE_TYPE
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,short[]) -> isEmpty
    boolean hasSingleElement(short[]) -> hasSingleElement
    void serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer:
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer -> com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer:
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer -> _delegateSerializer
    void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.Converter) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> withDelegate
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.util.Converter getConverter() -> getConverter
    com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    java.lang.Object convertValue(java.lang.Object) -> convertValue
    com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider) -> _findSerializer
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers:
    void <init>() -> <init>
    java.util.Collection all() -> all
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void <init>() -> <init>
    void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void <init>() -> <init>
    void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void <init>() -> <init>
    void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializer:
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean) -> getStdKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> getFallbackKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getFallbackKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getDefault() -> getDefault
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default:
    int TYPE_DATE -> TYPE_DATE
    int TYPE_CALENDAR -> TYPE_CALENDAR
    int TYPE_CLASS -> TYPE_CLASS
    int TYPE_ENUM -> TYPE_ENUM
    int TYPE_INTEGER -> TYPE_INTEGER
    int TYPE_LONG -> TYPE_LONG
    int TYPE_BYTE_ARRAY -> TYPE_BYTE_ARRAY
    int TYPE_TO_STRING -> TYPE_TO_STRING
    int _typeId -> _typeId
    void <init>(int,java.lang.Class) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer:
    com.fasterxml.jackson.databind.util.EnumValues _values -> _values
    com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming -> _valuesByEnumNaming
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> construct
    com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.util.EnumValues) -> construct
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer:
    void <init>() -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdScalarSerializer -> com.fasterxml.jackson.databind.ser.std.StdScalarSerializer:
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdScalarSerializer) -> <init>
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.StdSerializer -> com.fasterxml.jackson.databind.ser.std.StdSerializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object KEY_CONTENT_CONVERTER_LOCK -> KEY_CONTENT_CONVERTER_LOCK
    java.lang.Class _handledType -> _handledType
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void <init>(java.lang.Class,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer) -> <init>
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    void visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> visitStringFormat
    void visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> visitStringFormat
    void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType) -> visitIntFormat
    void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> visitIntFormat
    void visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType) -> visitFloatFormat
    void visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JavaType) -> visitArrayFormat
    void visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> visitArrayFormat
    void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findContextualConvertingSerializer
    com.fasterxml.jackson.databind.JsonSerializer findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingContentSerializer
    com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object) -> findPropertyFilter
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    com.fasterxml.jackson.annotation.JsonInclude$Value findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findIncludeOverrides
    com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAnnotatedContentSerializer
    boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isDefaultSerializer
    boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    boolean _nonEmpty(java.util.Collection) -> _nonEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StringSerializer -> com.fasterxml.jackson.databind.ser.std.StringSerializer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer -> com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer:
    void <init>() -> <init>
    void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer -> com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer:
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.ToStringSerializer -> com.fasterxml.jackson.databind.ser.std.ToStringSerializer:
    com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance -> instance
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    java.lang.String valueToString(java.lang.Object) -> valueToString
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase -> com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase:
    void <init>(java.lang.Class) -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    java.lang.String valueToString(java.lang.Object) -> valueToString
com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer -> com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer:
    void <init>() -> <init>
    void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.UUIDSerializer -> com.fasterxml.jackson.databind.ser.std.UUIDSerializer:
    char[] HEX_CHARS -> HEX_CHARS
    java.lang.Boolean _asBinary -> _asBinary
    void <init>() -> <init>
    void <init>(java.lang.Boolean) -> <init>
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID) -> isEmpty
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean _writeAsBinary(com.fasterxml.jackson.core.JsonGenerator) -> _writeAsBinary
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void _appendInt(int,char[],int) -> _appendInt
    void _appendShort(int,char[],int) -> _appendShort
    byte[] _asBytes(java.util.UUID) -> _asBytes
    void _appendInt(int,byte[],int) -> _appendInt
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.ArrayType -> com.fasterxml.jackson.databind.type.ArrayType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings) -> construct
    com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object) -> construct
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.ArrayType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    com.fasterxml.jackson.databind.JavaType _reportUnsupported() -> _reportUnsupported
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    boolean isContainerType() -> isContainerType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    java.lang.Object getContentValueHandler() -> getContentValueHandler
    java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    boolean hasHandlers() -> hasHandlers
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.Object[] getEmptyArray() -> getEmptyArray
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.ClassKey -> com.fasterxml.jackson.databind.type.ClassKey:
    long serialVersionUID -> serialVersionUID
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    void <init>() -> <init>
    void <init>(java.lang.Class) -> <init>
    void reset(java.lang.Class) -> reset
    int compareTo(com.fasterxml.jackson.databind.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.type.ClassStack -> com.fasterxml.jackson.databind.type.ClassStack:
    com.fasterxml.jackson.databind.type.ClassStack _parent -> _parent
    java.lang.Class _current -> _current
    java.util.ArrayList _selfRefs -> _selfRefs
    void <init>(java.lang.Class) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class) -> <init>
    com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class) -> child
    void addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType) -> addSelfReference
    void resolveSelfReferences(com.fasterxml.jackson.databind.JavaType) -> resolveSelfReferences
    com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class) -> find
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.CollectionLikeType -> com.fasterxml.jackson.databind.type.CollectionLikeType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.type.CollectionLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.CollectionLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.CollectionLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    java.lang.Object getContentValueHandler() -> getContentValueHandler
    java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    boolean hasHandlers() -> hasHandlers
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.CollectionType -> com.fasterxml.jackson.databind.type.CollectionType:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.CollectionType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.IdentityEqualityType -> com.fasterxml.jackson.databind.type.IdentityEqualityType:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.type.LogicalType -> com.fasterxml.jackson.databind.type.LogicalType:
    com.fasterxml.jackson.databind.type.LogicalType Array -> Array
    com.fasterxml.jackson.databind.type.LogicalType Collection -> Collection
    com.fasterxml.jackson.databind.type.LogicalType Map -> Map
    com.fasterxml.jackson.databind.type.LogicalType POJO -> POJO
    com.fasterxml.jackson.databind.type.LogicalType Untyped -> Untyped
    com.fasterxml.jackson.databind.type.LogicalType Integer -> Integer
    com.fasterxml.jackson.databind.type.LogicalType Float -> Float
    com.fasterxml.jackson.databind.type.LogicalType Boolean -> Boolean
    com.fasterxml.jackson.databind.type.LogicalType Enum -> Enum
    com.fasterxml.jackson.databind.type.LogicalType Textual -> Textual
    com.fasterxml.jackson.databind.type.LogicalType Binary -> Binary
    com.fasterxml.jackson.databind.type.LogicalType DateTime -> DateTime
    com.fasterxml.jackson.databind.type.LogicalType OtherScalar -> OtherScalar
    com.fasterxml.jackson.databind.type.LogicalType[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.type.LogicalType[] values() -> values
    com.fasterxml.jackson.databind.type.LogicalType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    com.fasterxml.jackson.databind.type.LogicalType fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType) -> fromClass
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.MapLikeType -> com.fasterxml.jackson.databind.type.MapLikeType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.type.MapLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    com.fasterxml.jackson.databind.type.MapLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    java.lang.Object getContentValueHandler() -> getContentValueHandler
    java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    boolean hasHandlers() -> hasHandlers
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.type.MapType -> com.fasterxml.jackson.databind.type.MapType:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.MapType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.MapType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    com.fasterxml.jackson.databind.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.PlaceholderForType -> com.fasterxml.jackson.databind.type.PlaceholderForType:
    long serialVersionUID -> serialVersionUID
    int _ordinal -> _ordinal
    com.fasterxml.jackson.databind.JavaType _actualType -> _actualType
    void <init>(int) -> <init>
    com.fasterxml.jackson.databind.JavaType actualType() -> actualType
    void actualType(com.fasterxml.jackson.databind.JavaType) -> actualType
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    boolean isContainerType() -> isContainerType
    java.lang.String toString() -> toString
    java.lang.Object _unsupported() -> _unsupported
com.fasterxml.jackson.databind.type.ReferenceType -> com.fasterxml.jackson.databind.type.ReferenceType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _referencedType -> _referencedType
    com.fasterxml.jackson.databind.JavaType _anchorType -> _anchorType
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.type.ReferenceType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.ReferenceType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.ReferenceType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.ReferenceType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.ReferenceType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    java.lang.String buildCanonicalName() -> buildCanonicalName
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    boolean hasContentType() -> hasContentType
    boolean isReferenceType() -> isReferenceType
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    com.fasterxml.jackson.databind.JavaType getAnchorType() -> getAnchorType
    boolean isAnchorType() -> isAnchorType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.ResolvedRecursiveType -> com.fasterxml.jackson.databind.type.ResolvedRecursiveType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _referencedType -> _referencedType
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    void setReference(com.fasterxml.jackson.databind.JavaType) -> setReference
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    com.fasterxml.jackson.databind.JavaType getSelfReferencedType() -> getSelfReferencedType
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    boolean isContainerType() -> isContainerType
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.SimpleType -> com.fasterxml.jackson.databind.type.SimpleType:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    com.fasterxml.jackson.databind.type.SimpleType construct(java.lang.Class) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean hasContentType() -> hasContentType
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    com.fasterxml.jackson.databind.JavaType _buildSuperClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _buildSuperClass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.TypeBase -> com.fasterxml.jackson.databind.type.TypeBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS -> NO_BINDINGS
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.JavaType _superClass -> _superClass
    com.fasterxml.jackson.databind.JavaType[] _superInterfaces -> _superInterfaces
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    java.lang.String _canonicalName -> _canonicalName
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.type.TypeBase) -> <init>
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    java.util.List getInterfaces() -> getInterfaces
    com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class) -> findTypeParameters
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
    com.fasterxml.jackson.databind.JavaType _bogusSuperClass(java.lang.Class) -> _bogusSuperClass
    boolean _hasNTypeParameters(int) -> _hasNTypeParameters
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings -> com.fasterxml.jackson.databind.type.TypeBindings:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] NO_STRINGS -> NO_STRINGS
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY -> EMPTY
    java.lang.String[] _names -> _names
    com.fasterxml.jackson.databind.JavaType[] _types -> _types
    java.lang.String[] _unboundVariables -> _unboundVariables
    int _hashCode -> _hashCode
    void <init>(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[]) -> <init>
    com.fasterxml.jackson.databind.type.TypeBindings emptyBindings() -> emptyBindings
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,java.util.List) -> create
    com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> create
    com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> create
    com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> create
    com.fasterxml.jackson.databind.type.TypeBindings create(java.util.List,java.util.List) -> create
    com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> createIfNeeded
    com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> createIfNeeded
    com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String) -> withUnboundVariable
    com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String) -> findBoundType
    boolean invalidCacheKey() -> invalidCacheKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.String getBoundName(int) -> getBoundName
    com.fasterxml.jackson.databind.JavaType getBoundType(int) -> getBoundType
    java.util.List getTypeParameters() -> getTypeParameters
    boolean hasUnbound(java.lang.String) -> hasUnbound
    java.lang.Object asKey(java.lang.Class) -> asKey
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType[] typeParameterArray() -> typeParameterArray
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings$AsKey -> com.fasterxml.jackson.databind.type.TypeBindings$AsKey:
    java.lang.Class _raw -> _raw
    com.fasterxml.jackson.databind.JavaType[] _params -> _params
    int _hash -> _hash
    void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType[],int) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash -> com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash:
    java.lang.reflect.TypeVariable[] VARS_ABSTRACT_LIST -> VARS_ABSTRACT_LIST
    java.lang.reflect.TypeVariable[] VARS_COLLECTION -> VARS_COLLECTION
    java.lang.reflect.TypeVariable[] VARS_ITERABLE -> VARS_ITERABLE
    java.lang.reflect.TypeVariable[] VARS_LIST -> VARS_LIST
    java.lang.reflect.TypeVariable[] VARS_ARRAY_LIST -> VARS_ARRAY_LIST
    java.lang.reflect.TypeVariable[] VARS_MAP -> VARS_MAP
    java.lang.reflect.TypeVariable[] VARS_HASH_MAP -> VARS_HASH_MAP
    java.lang.reflect.TypeVariable[] VARS_LINKED_HASH_MAP -> VARS_LINKED_HASH_MAP
    void <init>() -> <init>
    java.lang.reflect.TypeVariable[] paramsFor1(java.lang.Class) -> paramsFor1
    java.lang.reflect.TypeVariable[] paramsFor2(java.lang.Class) -> paramsFor2
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeFactory -> com.fasterxml.jackson.databind.type.TypeFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> NO_TYPES
    com.fasterxml.jackson.databind.type.TypeFactory instance -> instance
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS -> EMPTY_BINDINGS
    java.lang.Class CLS_STRING -> CLS_STRING
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.Class CLS_COMPARABLE -> CLS_COMPARABLE
    java.lang.Class CLS_ENUM -> CLS_ENUM
    java.lang.Class CLS_JSON_NODE -> CLS_JSON_NODE
    java.lang.Class CLS_BOOL -> CLS_BOOL
    java.lang.Class CLS_INT -> CLS_INT
    java.lang.Class CLS_LONG -> CLS_LONG
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL -> CORE_TYPE_BOOL
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT -> CORE_TYPE_INT
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG -> CORE_TYPE_LONG
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING -> CORE_TYPE_STRING
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT -> CORE_TYPE_OBJECT
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE -> CORE_TYPE_COMPARABLE
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM -> CORE_TYPE_ENUM
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE -> CORE_TYPE_JSON_NODE
    com.fasterxml.jackson.databind.util.LookupCache _typeCache -> _typeCache
    com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.type.TypeParser _parser -> _parser
    java.lang.ClassLoader _classLoader -> _classLoader
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.LookupCache) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.LRUMap,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader) -> <init>
    com.fasterxml.jackson.databind.type.TypeFactory withModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> withModifier
    com.fasterxml.jackson.databind.type.TypeFactory withClassLoader(java.lang.ClassLoader) -> withClassLoader
    com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LRUMap) -> withCache
    com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LookupCache) -> withCache
    com.fasterxml.jackson.databind.type.TypeFactory defaultInstance() -> defaultInstance
    void clearCache() -> clearCache
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    com.fasterxml.jackson.databind.JavaType unknownType() -> unknownType
    java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    java.lang.Class findClass(java.lang.String) -> findClass
    java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader) -> classForName
    java.lang.Class classForName(java.lang.String) -> classForName
    java.lang.Class _findPrimitive(java.lang.String) -> _findPrimitive
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> constructSpecializedType
    com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType,int,java.lang.Class,boolean) -> _bindingsForSubtype
    java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _resolveTypePlaceholders
    boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _verifyAndResolvePlaceholders
    com.fasterxml.jackson.databind.JavaType constructGeneralizedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructGeneralizedType
    com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType moreSpecificType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> moreSpecificType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    com.fasterxml.jackson.databind.JavaType resolveMemberType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> resolveMemberType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType) -> constructType
    com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    com.fasterxml.jackson.databind.type.ArrayType constructArrayType(com.fasterxml.jackson.databind.JavaType) -> constructArrayType
    com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionLikeType
    com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapType
    com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapLikeType
    com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructSimpleType
    com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructSimpleType
    com.fasterxml.jackson.databind.JavaType constructReferenceType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructReferenceType
    com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructParametricType
    com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> constructParametricType
    com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructParametrizedType
    com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class,java.lang.Class,java.lang.Class[]) -> constructParametrizedType
    com.fasterxml.jackson.databind.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    com.fasterxml.jackson.databind.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    com.fasterxml.jackson.databind.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _mapType
    com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _collectionType
    com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _referenceType
    com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _constructSimple
    com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _newSimpleType
    com.fasterxml.jackson.databind.JavaType _unknownType() -> _unknownType
    com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class) -> _findWellKnownSimple
    com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromAny
    com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType) -> _applyModifiers
    com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromClass
    com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperClass
    com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperInterfaces
    com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownClass
    com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownInterface
    com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromParamType
    com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromArrayType
    com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromVariable
    com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromWildcard
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeModifier -> com.fasterxml.jackson.databind.type.TypeModifier:
    void <init>() -> <init>
    com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory) -> modifyType
com.fasterxml.jackson.databind.type.TypeParser -> com.fasterxml.jackson.databind.type.TypeParser:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.type.TypeFactory _factory -> _factory
    void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    com.fasterxml.jackson.databind.type.TypeParser withFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> withFactory
    com.fasterxml.jackson.databind.JavaType parse(java.lang.String) -> parse
    com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer -> com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    void <init>(java.lang.String) -> <init>
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> pushBack
    java.lang.String getAllInput() -> getAllInput
    java.lang.String getRemainingInput() -> getRemainingInput
com.fasterxml.jackson.databind.type.package-info -> com.fasterxml.jackson.databind.type.package-info:
com.fasterxml.jackson.databind.util.AccessPattern -> com.fasterxml.jackson.databind.util.AccessPattern:
    com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL -> ALWAYS_NULL
    com.fasterxml.jackson.databind.util.AccessPattern CONSTANT -> CONSTANT
    com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC -> DYNAMIC
    com.fasterxml.jackson.databind.util.AccessPattern[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.util.AccessPattern[] values() -> values
    com.fasterxml.jackson.databind.util.AccessPattern valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Annotations -> com.fasterxml.jackson.databind.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.util.ArrayBuilders -> com.fasterxml.jackson.databind.util.ArrayBuilders:
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    void <init>() -> <init>
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
com.fasterxml.jackson.databind.util.ArrayBuilders$1 -> com.fasterxml.jackson.databind.util.ArrayBuilders$1:
    java.lang.Class val$defaultValueType -> val$defaultValueType
    int val$length -> val$length
    java.lang.Object val$defaultValue -> val$defaultValue
    void <init>(java.lang.Class,int,java.lang.Object) -> <init>
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder:
    void <init>() -> <init>
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder:
    void <init>() -> <init>
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder:
    void <init>() -> <init>
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder:
    void <init>() -> <init>
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder:
    void <init>() -> <init>
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder:
    void <init>() -> <init>
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder:
    void <init>() -> <init>
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayIterator -> com.fasterxml.jackson.databind.util.ArrayIterator:
    java.lang.Object[] _a -> _a
    int _index -> _index
    void <init>(java.lang.Object[]) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.util.BeanUtil -> com.fasterxml.jackson.databind.util.BeanUtil:
    void <init>() -> <init>
    java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> okNameForGetter
    java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForIsGetter
    java.lang.String okNameForSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> okNameForSetter
    java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForMutator
    java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> getDefaultValue
    boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String legacyManglePropertyName(java.lang.String,int) -> legacyManglePropertyName
    java.lang.String stdManglePropertyName(java.lang.String,int) -> stdManglePropertyName
    java.lang.String checkUnsupportedType(com.fasterxml.jackson.databind.JavaType) -> checkUnsupportedType
    boolean isJava8TimeClass(java.lang.Class) -> isJava8TimeClass
    boolean isJava8TimeClass(java.lang.String) -> isJava8TimeClass
    boolean isJodaTimeClass(java.lang.Class) -> isJodaTimeClass
    boolean isJodaTimeClass(java.lang.String) -> isJodaTimeClass
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream -> com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream:
    java.nio.ByteBuffer _b -> _b
    void <init>(java.nio.ByteBuffer) -> <init>
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream -> com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream:
    java.nio.ByteBuffer _b -> _b
    void <init>(java.nio.ByteBuffer) -> <init>
    void write(int) -> write
    void write(byte[],int,int) -> write
com.fasterxml.jackson.databind.util.ClassUtil -> com.fasterxml.jackson.databind.util.ClassUtil:
    java.lang.Class CLS_OBJECT -> CLS_OBJECT
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> NO_ANNOTATIONS
    com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] NO_CTORS -> NO_CTORS
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    void <init>() -> <init>
    java.util.Iterator emptyIterator() -> emptyIterator
    java.util.List findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> findSuperTypes
    java.util.List findRawSuperTypes(java.lang.Class,java.lang.Class,boolean) -> findRawSuperTypes
    java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean) -> findSuperClasses
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addRawSuperTypes
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    boolean isBogusClass(java.lang.Class) -> isBogusClass
    boolean isRecordType(java.lang.Class) -> isRecordType
    boolean isObjectOrPrimitive(java.lang.Class) -> isObjectOrPrimitive
    boolean hasClass(java.lang.Object,java.lang.Class) -> hasClass
    void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String) -> verifyMustOverride
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable throwIfError(java.lang.Throwable) -> throwIfError
    java.lang.Throwable throwIfRTE(java.lang.Throwable) -> throwIfRTE
    java.lang.Throwable throwIfIOE(java.lang.Throwable) -> throwIfIOE
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.lang.Throwable throwRootCauseIfIOE(java.lang.Throwable) -> throwRootCauseIfIOE
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    java.lang.Object throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException) -> throwAsMappingException
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Class classOf(java.lang.Object) -> classOf
    java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType) -> rawClass
    java.lang.Object nonNull(java.lang.Object,java.lang.Object) -> nonNull
    java.lang.String nullOrToString(java.lang.Object) -> nullOrToString
    java.lang.String nonNullString(java.lang.String) -> nonNullString
    java.lang.String quotedOr(java.lang.Object,java.lang.String) -> quotedOr
    java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType) -> getTypeDescription
    java.lang.String classNameOf(java.lang.Object) -> classNameOf
    java.lang.String nameOf(java.lang.Class) -> nameOf
    java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named) -> nameOf
    java.lang.String name(java.lang.String) -> name
    java.lang.String name(com.fasterxml.jackson.databind.PropertyName) -> name
    java.lang.String backticked(java.lang.String) -> backticked
    java.lang.String apostrophed(java.lang.String) -> apostrophed
    java.lang.String exceptionMessage(java.lang.Throwable) -> exceptionMessage
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    java.lang.Class primitiveType(java.lang.Class) -> primitiveType
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    void checkAndFixAccess(java.lang.reflect.Member,boolean) -> checkAndFixAccess
    boolean isEnumType(java.lang.Class) -> isEnumType
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
    java.lang.Enum findFirstAnnotatedEnumValue(java.lang.Class,java.lang.Class) -> findFirstAnnotatedEnumValue
    boolean isJacksonStdImpl(java.lang.Object) -> isJacksonStdImpl
    boolean isJacksonStdImpl(java.lang.Class) -> isJacksonStdImpl
    boolean isJDKClass(java.lang.Class) -> isJDKClass
    boolean isJDK17OrAbove() -> isJDK17OrAbove
    int getJDKMajorVersion() -> getJDKMajorVersion
    boolean isNonStaticInnerClass(java.lang.Class) -> isNonStaticInnerClass
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    boolean hasEnclosingMethod(java.lang.Class) -> hasEnclosingMethod
    java.lang.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    java.lang.annotation.Annotation[] findClassAnnotations(java.lang.Class) -> findClassAnnotations
    java.lang.reflect.Method[] getClassMethods(java.lang.Class) -> getClassMethods
    java.lang.reflect.Method[] _failGetClassMethods(java.lang.Class,java.lang.Throwable) -> _failGetClassMethods
    com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] getConstructors(java.lang.Class) -> getConstructors
    java.lang.Class getDeclaringClass(java.lang.Class) -> getDeclaringClass
    java.lang.reflect.Type getGenericSuperclass(java.lang.Class) -> getGenericSuperclass
    java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class) -> getGenericInterfaces
    java.lang.Class getEnclosingClass(java.lang.Class) -> getEnclosingClass
    java.lang.Class[] _interfaces(java.lang.Class) -> _interfaces
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ClassUtil$Ctor -> com.fasterxml.jackson.databind.util.ClassUtil$Ctor:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.annotation.Annotation[] _annotations -> _annotations
    java.lang.annotation.Annotation[][] _paramAnnotations -> _paramAnnotations
    int _paramCount -> _paramCount
    void <init>(java.lang.reflect.Constructor) -> <init>
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    int getParamCount() -> getParamCount
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator -> com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator:
    com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    java.lang.String failForEnumSet -> failForEnumSet
    java.lang.String failForEnumMap -> failForEnumMap
    void <init>() -> <init>
    java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.CompactStringObjectMap -> com.fasterxml.jackson.databind.util.CompactStringObjectMap:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY -> EMPTY
    int _hashMask -> _hashMask
    int _spillCount -> _spillCount
    java.lang.Object[] _hashArea -> _hashArea
    void <init>(int,int,java.lang.Object[]) -> <init>
    com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map) -> construct
    int findSize(int) -> findSize
    java.lang.Object find(java.lang.String) -> find
    java.lang.Object _find2(java.lang.String,int,java.lang.Object) -> _find2
    java.lang.Object findCaseInsensitive(java.lang.String) -> findCaseInsensitive
    java.util.List keys() -> keys
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Converter -> com.fasterxml.jackson.databind.util.Converter:
    java.lang.Object convert(java.lang.Object) -> convert
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
com.fasterxml.jackson.databind.util.Converter$None -> com.fasterxml.jackson.databind.util.Converter$None:
    void <init>() -> <init>
com.fasterxml.jackson.databind.util.EnumResolver -> com.fasterxml.jackson.databind.util.EnumResolver:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    java.lang.Enum _defaultValue -> _defaultValue
    boolean _isIgnoreCase -> _isIgnoreCase
    boolean _isFromIntValue -> _isFromIntValue
    void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean) -> <init>
    com.fasterxml.jackson.databind.util.EnumResolver constructFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructFor
    com.fasterxml.jackson.databind.util.EnumResolver _constructFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructFor
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructUsingToString
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructUsingIndex
    com.fasterxml.jackson.databind.util.EnumResolver _constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructUsingIndex
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> constructUsingEnumNamingStrategy
    com.fasterxml.jackson.databind.util.EnumResolver _constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> _constructUsingEnumNamingStrategy
    com.fasterxml.jackson.databind.util.EnumResolver _constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructUsingToString
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructUsingMethod
    com.fasterxml.jackson.databind.util.EnumResolver _constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructUsingMethod
    com.fasterxml.jackson.databind.util.CompactStringObjectMap constructLookup() -> constructLookup
    java.lang.Class _enumClass(java.lang.Class) -> _enumClass
    java.lang.Enum[] _enumConstants(java.lang.Class) -> _enumConstants
    java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class) -> _enumDefault
    boolean _isIntType(java.lang.Class) -> _isIntType
    void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean) -> <init>
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum _findEnumCaseInsensitive(java.lang.String) -> _findEnumCaseInsensitive
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Enum getDefaultValue() -> getDefaultValue
    java.lang.Enum[] getRawEnums() -> getRawEnums
    java.util.List getEnums() -> getEnums
    java.util.Collection getEnumIds() -> getEnumIds
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
    boolean isFromIntValue() -> isFromIntValue
com.fasterxml.jackson.databind.util.EnumValues -> com.fasterxml.jackson.databind.util.EnumValues:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _values -> _values
    com.fasterxml.jackson.core.SerializableString[] _textual -> _textual
    java.util.EnumMap _asMap -> _asMap
    void <init>(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> <init>
    com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> construct
    com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> constructFromName
    com.fasterxml.jackson.databind.util.EnumValues constructFromToString(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> constructFromToString
    com.fasterxml.jackson.databind.util.EnumValues constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> constructUsingEnumNamingStrategy
    com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,java.util.List) -> construct
    com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> construct
    com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum) -> serializedValueFor
    java.util.Collection values() -> values
    java.util.List enums() -> enums
    java.util.EnumMap internalMap() -> internalMap
    java.lang.Class getEnumClass() -> getEnumClass
com.fasterxml.jackson.databind.util.ExceptionUtil -> com.fasterxml.jackson.databind.util.ExceptionUtil:
    void <init>() -> <init>
    void rethrowIfFatal(java.lang.Throwable) -> rethrowIfFatal
    boolean isFatal(java.lang.Throwable) -> isFatal
    java.lang.Object throwSneaky(java.io.IOException) -> throwSneaky
    void _sneaky(java.lang.Throwable) -> _sneaky
com.fasterxml.jackson.databind.util.ISO8601DateFormat -> com.fasterxml.jackson.databind.util.ISO8601DateFormat:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.util.Date parse(java.lang.String) -> parse
    java.lang.Object clone() -> clone
com.fasterxml.jackson.databind.util.ISO8601Utils -> com.fasterxml.jackson.databind.util.ISO8601Utils:
    int DEF_8601_LEN -> DEF_8601_LEN
    java.util.TimeZone TIMEZONE_Z -> TIMEZONE_Z
    void <init>() -> <init>
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Date,boolean) -> format
    java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    java.lang.String format(java.util.Date,boolean,java.util.TimeZone,java.util.Locale) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    boolean checkOffset(java.lang.String,int,char) -> checkOffset
    int parseInt(java.lang.String,int,int) -> parseInt
    int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil -> com.fasterxml.jackson.databind.util.IgnorePropertiesUtil:
    void <init>() -> <init>
    boolean shouldIgnore(java.lang.Object,java.util.Collection,java.util.Collection) -> shouldIgnore
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set) -> buildCheckerIfNeeded
    java.util.Set combineNamesToInclude(java.util.Set,java.util.Set) -> combineNamesToInclude
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker -> com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker:
    long serialVersionUID -> serialVersionUID
    java.util.Set _toIgnore -> _toIgnore
    java.util.Set _toInclude -> _toInclude
    void <init>(java.util.Set,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker construct(java.util.Set,java.util.Set) -> construct
    boolean shouldIgnore(java.lang.Object) -> shouldIgnore
com.fasterxml.jackson.databind.util.JSONPObject -> com.fasterxml.jackson.databind.util.JSONPObject:
    java.lang.String _function -> _function
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JavaType _serializationType -> _serializationType
    void <init>(java.lang.String,java.lang.Object) -> <init>
    void <init>(java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> <init>
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String getFunction() -> getFunction
    java.lang.Object getValue() -> getValue
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.JSONWrappedObject -> com.fasterxml.jackson.databind.util.JSONWrappedObject:
    java.lang.String _prefix -> _prefix
    java.lang.String _suffix -> _suffix
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JavaType _serializationType -> _serializationType
    void <init>(java.lang.String,java.lang.String,java.lang.Object) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> <init>
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.Object getValue() -> getValue
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.LRUMap -> com.fasterxml.jackson.databind.util.LRUMap:
    long serialVersionUID -> serialVersionUID
    int _initialEntries -> _initialEntries
    int _maxEntries -> _maxEntries
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map -> _map
    void <init>(int,int) -> <init>
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
    int size() -> size
    void contents(java.util.function.BiConsumer) -> contents
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.LinkedNode -> com.fasterxml.jackson.databind.util.LinkedNode:
    java.lang.Object value -> value
    com.fasterxml.jackson.databind.util.LinkedNode next -> next
    void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    void linkNext(com.fasterxml.jackson.databind.util.LinkedNode) -> linkNext
    com.fasterxml.jackson.databind.util.LinkedNode next() -> next
    java.lang.Object value() -> value
    boolean contains(com.fasterxml.jackson.databind.util.LinkedNode,java.lang.Object) -> contains
com.fasterxml.jackson.databind.util.LookupCache -> com.fasterxml.jackson.databind.util.LookupCache:
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void clear() -> clear
com.fasterxml.jackson.databind.util.NameTransformer -> com.fasterxml.jackson.databind.util.NameTransformer:
    com.fasterxml.jackson.databind.util.NameTransformer NOP -> NOP
    void <init>() -> <init>
    com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String) -> simpleTransformer
    com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> chainedTransformer
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.NameTransformer$1 -> com.fasterxml.jackson.databind.util.NameTransformer$1:
    java.lang.String val$prefix -> val$prefix
    java.lang.String val$suffix -> val$suffix
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$2 -> com.fasterxml.jackson.databind.util.NameTransformer$2:
    java.lang.String val$prefix -> val$prefix
    void <init>(java.lang.String) -> <init>
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$3 -> com.fasterxml.jackson.databind.util.NameTransformer$3:
    java.lang.String val$suffix -> val$suffix
    void <init>(java.lang.String) -> <init>
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$Chained -> com.fasterxml.jackson.databind.util.NameTransformer$Chained:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.NameTransformer _t1 -> _t1
    com.fasterxml.jackson.databind.util.NameTransformer _t2 -> _t2
    void <init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer -> com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
com.fasterxml.jackson.databind.util.Named -> com.fasterxml.jackson.databind.util.Named:
    java.lang.String getName() -> getName
com.fasterxml.jackson.databind.util.NativeImageUtil -> com.fasterxml.jackson.databind.util.NativeImageUtil:
    boolean RUNNING_IN_SVM -> RUNNING_IN_SVM
    void <init>() -> <init>
    boolean isRunningInNativeImage() -> isRunningInNativeImage
    boolean isUnsupportedFeatureError(java.lang.Throwable) -> isUnsupportedFeatureError
    boolean needsReflectionConfiguration(java.lang.Class) -> needsReflectionConfiguration
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ObjectBuffer -> com.fasterxml.jackson.databind.util.ObjectBuffer:
    int SMALL_CHUNK -> SMALL_CHUNK
    int MAX_CHUNK -> MAX_CHUNK
    com.fasterxml.jackson.databind.util.LinkedNode _head -> _head
    com.fasterxml.jackson.databind.util.LinkedNode _tail -> _tail
    int _size -> _size
    java.lang.Object[] _freeBuffer -> _freeBuffer
    void <init>() -> <init>
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] resetAndStart(java.lang.Object[],int) -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    int bufferedSize() -> bufferedSize
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder -> com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    java.lang.Object _freeBuffer -> _freeBuffer
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    void <init>() -> <init>
    int bufferedSize() -> bufferedSize
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node -> com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next -> _next
    void <init>(java.lang.Object,int) -> <init>
    java.lang.Object getData() -> getData
    int copyData(java.lang.Object,int) -> copyData
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next() -> next
    void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node) -> linkNext
com.fasterxml.jackson.databind.util.RawValue -> com.fasterxml.jackson.databind.util.RawValue:
    java.lang.Object _value -> _value
    void <init>(java.lang.String) -> <init>
    void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    void <init>(com.fasterxml.jackson.databind.JsonSerializable) -> <init>
    void <init>(java.lang.Object,boolean) -> <init>
    java.lang.Object rawValue() -> rawValue
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    void _serialize(com.fasterxml.jackson.core.JsonGenerator) -> _serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.RootNameLookup -> com.fasterxml.jackson.databind.util.RootNameLookup:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.LRUMap _rootNames -> _rootNames
    void <init>() -> <init>
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition -> com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition:
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> _metadata
    com.fasterxml.jackson.databind.PropertyName _fullName -> _fullName
    com.fasterxml.jackson.annotation.JsonInclude$Value _inclusion -> _inclusion
    void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> construct
    com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName) -> construct
    com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> construct
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withMetadata(com.fasterxml.jackson.databind.PropertyMetadata) -> withMetadata
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withInclusion
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    java.lang.String getInternalName() -> getInternalName
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean isExplicitlyNamed() -> isExplicitlyNamed
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    java.util.Iterator getConstructorParameters() -> getConstructorParameters
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
com.fasterxml.jackson.databind.util.StdConverter -> com.fasterxml.jackson.databind.util.StdConverter:
    void <init>() -> <init>
    java.lang.Object convert(java.lang.Object) -> convert
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
    com.fasterxml.jackson.databind.JavaType _findConverterType(com.fasterxml.jackson.databind.type.TypeFactory) -> _findConverterType
com.fasterxml.jackson.databind.util.StdDateFormat -> com.fasterxml.jackson.databind.util.StdDateFormat:
    java.lang.String PATTERN_PLAIN_STR -> PATTERN_PLAIN_STR
    java.util.regex.Pattern PATTERN_PLAIN -> PATTERN_PLAIN
    java.util.regex.Pattern PATTERN_ISO8601 -> PATTERN_ISO8601
    java.lang.String DATE_FORMAT_STR_ISO8601 -> DATE_FORMAT_STR_ISO8601
    java.lang.String DATE_FORMAT_STR_PLAIN -> DATE_FORMAT_STR_PLAIN
    java.lang.String DATE_FORMAT_STR_RFC1123 -> DATE_FORMAT_STR_RFC1123
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.util.TimeZone DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    java.util.Locale DEFAULT_LOCALE -> DEFAULT_LOCALE
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    com.fasterxml.jackson.databind.util.StdDateFormat instance -> instance
    java.util.Calendar CALENDAR -> CALENDAR
    java.util.TimeZone _timezone -> _timezone
    java.util.Locale _locale -> _locale
    java.lang.Boolean _lenient -> _lenient
    java.util.Calendar _calendar -> _calendar
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    boolean _tzSerializedWithColon -> _tzSerializedWithColon
    void <init>() -> <init>
    void <init>(java.util.TimeZone,java.util.Locale) -> <init>
    void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> <init>
    void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean) -> <init>
    java.util.TimeZone getDefaultTimeZone() -> getDefaultTimeZone
    com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone) -> withTimeZone
    com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale) -> withLocale
    com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean) -> withLenient
    com.fasterxml.jackson.databind.util.StdDateFormat withColonInTimeZone(boolean) -> withColonInTimeZone
    com.fasterxml.jackson.databind.util.StdDateFormat clone() -> clone
    java.text.DateFormat getISO8601Format(java.util.TimeZone,java.util.Locale) -> getISO8601Format
    java.text.DateFormat getRFC1123Format(java.util.TimeZone,java.util.Locale) -> getRFC1123Format
    java.util.TimeZone getTimeZone() -> getTimeZone
    void setTimeZone(java.util.TimeZone) -> setTimeZone
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    boolean isColonIncludedInTimeZone() -> isColonIncludedInTimeZone
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.util.Date _parseDate(java.lang.String,java.text.ParsePosition) -> _parseDate
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer) -> _format
    void _formatBCEYear(java.lang.StringBuffer,int) -> _formatBCEYear
    void pad2(java.lang.StringBuffer,int) -> pad2
    void pad3(java.lang.StringBuffer,int) -> pad3
    void pad4(java.lang.StringBuffer,int) -> pad4
    java.lang.String toString() -> toString
    java.lang.String toPattern() -> toPattern
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date _parseDateFromLong(java.lang.String,java.text.ParsePosition) -> _parseDateFromLong
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date _parseAsISO8601(java.lang.String,java.text.ParsePosition) -> _parseAsISO8601
    int _parse4D(java.lang.String,int) -> _parse4D
    int _parse2D(java.lang.String,int) -> _parse2D
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    java.text.DateFormat _cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> _cloneFormat
    void _clearFormats() -> _clearFormats
    java.util.Calendar _getCalendar(java.util.TimeZone) -> _getCalendar
    boolean _equals(java.lang.Object,java.lang.Object) -> _equals
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer -> com.fasterxml.jackson.databind.util.TokenBuffer:
    int DEFAULT_GENERATOR_FEATURES -> DEFAULT_GENERATOR_FEATURES
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.JsonStreamContext _parentContext -> _parentContext
    int _generatorFeatures -> _generatorFeatures
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    boolean _closed -> _closed
    boolean _hasNativeTypeIds -> _hasNativeTypeIds
    boolean _hasNativeObjectIds -> _hasNativeObjectIds
    boolean _mayHaveNativeIds -> _mayHaveNativeIds
    boolean _forceBigDecimal -> _forceBigDecimal
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first -> _first
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last -> _last
    int _appendAt -> _appendAt
    java.lang.Object _typeId -> _typeId
    java.lang.Object _objectId -> _objectId
    boolean _hasNativeId -> _hasNativeId
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> asCopyOfValue
    com.fasterxml.jackson.databind.util.TokenBuffer overrideParentContext(com.fasterxml.jackson.core.JsonStreamContext) -> overrideParentContext
    com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean) -> forceUseOfBigDecimal
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonParser asParser() -> asParser
    com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() -> asParserOnFirstToken
    com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec) -> asParser
    com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.StreamReadConstraints) -> asParser
    com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser) -> asParser
    com.fasterxml.jackson.core.JsonToken firstToken() -> firstToken
    boolean isEmpty() -> isEmpty
    com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) -> append
    void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    void _appendNativeIds(java.lang.StringBuilder) -> _appendNativeIds
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void writeStartArray() -> writeStartArray
    void writeStartArray(java.lang.Object) -> writeStartArray
    void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeStartObject(java.lang.Object) -> writeStartObject
    void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeString(java.io.Reader,int) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeLazyInteger(java.lang.Object) -> writeLazyInteger
    void writeLazyDecimal(java.lang.Object) -> writeLazyDecimal
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    boolean canWriteTypeId() -> canWriteTypeId
    boolean canWriteObjectId() -> canWriteObjectId
    void writeTypeId(java.lang.Object) -> writeTypeId
    void writeObjectId(java.lang.Object) -> writeObjectId
    void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    void _copyBufferContents(com.fasterxml.jackson.core.JsonParser) -> _copyBufferContents
    void _copyBufferValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> _copyBufferValue
    void _checkNativeIds(com.fasterxml.jackson.core.JsonParser) -> _checkNativeIds
    void _appendValue(com.fasterxml.jackson.core.JsonToken) -> _appendValue
    void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> _appendValue
    void _appendFieldName(java.lang.Object) -> _appendFieldName
    void _appendStartMarker(com.fasterxml.jackson.core.JsonToken) -> _appendStartMarker
    void _appendEndMarker(com.fasterxml.jackson.core.JsonToken) -> _appendEndMarker
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$1 -> com.fasterxml.jackson.databind.util.TokenBuffer$1:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> $SwitchMap$com$fasterxml$jackson$core$JsonToken
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$Parser -> com.fasterxml.jackson.databind.util.TokenBuffer$Parser:
    com.fasterxml.jackson.core.ObjectCodec _codec -> _codec
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> _streamReadConstraints
    boolean _hasNativeTypeIds -> _hasNativeTypeIds
    boolean _hasNativeObjectIds -> _hasNativeObjectIds
    boolean _hasNativeIds -> _hasNativeIds
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    com.fasterxml.jackson.databind.util.TokenBufferReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.StreamReadConstraints) -> <init>
    void setLocation(com.fasterxml.jackson.core.JsonLocation) -> setLocation
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    com.fasterxml.jackson.core.JsonToken peekNextToken() -> peekNextToken
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    java.lang.String nextFieldName() -> nextFieldName
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String currentName() -> currentName
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    boolean isNaN() -> isNaN
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    java.lang.Number getNumberValue(boolean) -> getNumberValue
    boolean _smallerThanInt(java.lang.Number) -> _smallerThanInt
    boolean _smallerThanLong(java.lang.Number) -> _smallerThanLong
    int _convertNumberToInt(java.lang.Number) -> _convertNumberToInt
    long _convertNumberToLong(java.lang.Number) -> _convertNumberToLong
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    boolean canReadObjectId() -> canReadObjectId
    boolean canReadTypeId() -> canReadTypeId
    java.lang.Object getTypeId() -> getTypeId
    java.lang.Object getObjectId() -> getObjectId
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.util.TokenBuffer$Segment -> com.fasterxml.jackson.databind.util.TokenBuffer$Segment:
    int TOKENS_PER_SEGMENT -> TOKENS_PER_SEGMENT
    com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    java.util.TreeMap _nativeIds -> _nativeIds
    void <init>() -> <init>
    com.fasterxml.jackson.core.JsonToken type(int) -> type
    int rawType(int) -> rawType
    java.lang.Object get(int) -> get
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment next() -> next
    boolean hasIds() -> hasIds
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken) -> append
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> append
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> append
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> append
    void set(int,com.fasterxml.jackson.core.JsonToken) -> set
    void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> set
    void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> set
    void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> set
    void assignNativeIds(int,java.lang.Object,java.lang.Object) -> assignNativeIds
    java.lang.Object findObjectId(int) -> findObjectId
    java.lang.Object findTypeId(int) -> findTypeId
    int _typeIdIndex(int) -> _typeIdIndex
    int _objectIdIndex(int) -> _objectIdIndex
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBufferReadContext -> com.fasterxml.jackson.databind.util.TokenBufferReadContext:
    com.fasterxml.jackson.core.JsonStreamContext _parent -> _parent
    com.fasterxml.jackson.core.JsonLocation _startLocation -> _startLocation
    java.lang.String _currentName -> _currentName
    java.lang.Object _currentValue -> _currentValue
    void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.io.ContentReference) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonStreamContext,java.lang.Object) -> <init>
    void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.JsonLocation) -> <init>
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.util.TokenBufferReadContext,int,int) -> <init>
    java.lang.Object getCurrentValue() -> getCurrentValue
    void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.databind.util.TokenBufferReadContext createRootContext(com.fasterxml.jackson.core.JsonStreamContext) -> createRootContext
    com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildArrayContext() -> createChildArrayContext
    com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildObjectContext() -> createChildObjectContext
    com.fasterxml.jackson.databind.util.TokenBufferReadContext parentOrCopy() -> parentOrCopy
    java.lang.String getCurrentName() -> getCurrentName
    boolean hasCurrentName() -> hasCurrentName
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    void setCurrentName(java.lang.String) -> setCurrentName
    void updateForValue() -> updateForValue
com.fasterxml.jackson.databind.util.TypeKey -> com.fasterxml.jackson.databind.util.TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    void <init>() -> <init>
    void <init>(com.fasterxml.jackson.databind.util.TypeKey) -> <init>
    void <init>(java.lang.Class,boolean) -> <init>
    void <init>(com.fasterxml.jackson.databind.JavaType,boolean) -> <init>
    int untypedHash(java.lang.Class) -> untypedHash
    int typedHash(java.lang.Class) -> typedHash
    int untypedHash(com.fasterxml.jackson.databind.JavaType) -> untypedHash
    int typedHash(com.fasterxml.jackson.databind.JavaType) -> typedHash
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(com.fasterxml.jackson.databind.JavaType) -> resetTyped
    void resetUntyped(com.fasterxml.jackson.databind.JavaType) -> resetUntyped
    boolean isTyped() -> isTyped
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ViewMatcher -> com.fasterxml.jackson.databind.util.ViewMatcher:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.ViewMatcher EMPTY -> EMPTY
    void <init>() -> <init>
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
    com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]) -> construct
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ViewMatcher$Multi -> com.fasterxml.jackson.databind.util.ViewMatcher$Multi:
    long serialVersionUID -> serialVersionUID
    java.lang.Class[] _views -> _views
    void <init>(java.lang.Class[]) -> <init>
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.ViewMatcher$Single -> com.fasterxml.jackson.databind.util.ViewMatcher$Single:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _view -> _view
    void <init>(java.lang.Class) -> <init>
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.internal.Linked -> com.fasterxml.jackson.databind.util.internal.Linked:
    com.fasterxml.jackson.databind.util.internal.Linked getPrevious() -> getPrevious
    void setPrevious(com.fasterxml.jackson.databind.util.internal.Linked) -> setPrevious
    com.fasterxml.jackson.databind.util.internal.Linked getNext() -> getNext
    void setNext(com.fasterxml.jackson.databind.util.internal.Linked) -> setNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque -> com.fasterxml.jackson.databind.util.internal.LinkedDeque:
    com.fasterxml.jackson.databind.util.internal.Linked first -> first
    com.fasterxml.jackson.databind.util.internal.Linked last -> last
    void <init>() -> <init>
    void linkFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> linkFirst
    void linkLast(com.fasterxml.jackson.databind.util.internal.Linked) -> linkLast
    com.fasterxml.jackson.databind.util.internal.Linked unlinkFirst() -> unlinkFirst
    com.fasterxml.jackson.databind.util.internal.Linked unlinkLast() -> unlinkLast
    void unlink(com.fasterxml.jackson.databind.util.internal.Linked) -> unlink
    boolean isEmpty() -> isEmpty
    void checkNotEmpty() -> checkNotEmpty
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean contains(com.fasterxml.jackson.databind.util.internal.Linked) -> contains
    void moveToFront(com.fasterxml.jackson.databind.util.internal.Linked) -> moveToFront
    void moveToBack(com.fasterxml.jackson.databind.util.internal.Linked) -> moveToBack
    com.fasterxml.jackson.databind.util.internal.Linked peek() -> peek
    com.fasterxml.jackson.databind.util.internal.Linked peekFirst() -> peekFirst
    com.fasterxml.jackson.databind.util.internal.Linked peekLast() -> peekLast
    com.fasterxml.jackson.databind.util.internal.Linked getFirst() -> getFirst
    com.fasterxml.jackson.databind.util.internal.Linked getLast() -> getLast
    com.fasterxml.jackson.databind.util.internal.Linked element() -> element
    boolean offer(com.fasterxml.jackson.databind.util.internal.Linked) -> offer
    boolean offerFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> offerFirst
    boolean offerLast(com.fasterxml.jackson.databind.util.internal.Linked) -> offerLast
    boolean add(com.fasterxml.jackson.databind.util.internal.Linked) -> add
    void addFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> addFirst
    void addLast(com.fasterxml.jackson.databind.util.internal.Linked) -> addLast
    com.fasterxml.jackson.databind.util.internal.Linked poll() -> poll
    com.fasterxml.jackson.databind.util.internal.Linked pollFirst() -> pollFirst
    com.fasterxml.jackson.databind.util.internal.Linked pollLast() -> pollLast
    com.fasterxml.jackson.databind.util.internal.Linked remove() -> remove
    boolean remove(java.lang.Object) -> remove
    boolean remove(com.fasterxml.jackson.databind.util.internal.Linked) -> remove
    com.fasterxml.jackson.databind.util.internal.Linked removeFirst() -> removeFirst
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    com.fasterxml.jackson.databind.util.internal.Linked removeLast() -> removeLast
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean removeAll(java.util.Collection) -> removeAll
    void push(com.fasterxml.jackson.databind.util.internal.Linked) -> push
    com.fasterxml.jackson.databind.util.internal.Linked pop() -> pop
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    boolean add(java.lang.Object) -> add
    java.lang.Object pop() -> pop
    void push(java.lang.Object) -> push
    java.lang.Object peek() -> peek
    java.lang.Object element() -> element
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peekLast() -> peekLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object removeFirst() -> removeFirst
    boolean offerLast(java.lang.Object) -> offerLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    void addLast(java.lang.Object) -> addLast
    void addFirst(java.lang.Object) -> addFirst
com.fasterxml.jackson.databind.util.internal.LinkedDeque$1 -> com.fasterxml.jackson.databind.util.internal.LinkedDeque$1:
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque$2 -> com.fasterxml.jackson.databind.util.internal.LinkedDeque$2:
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque$AbstractLinkedIterator -> com.fasterxml.jackson.databind.util.internal.LinkedDeque$AbstractLinkedIterator:
    com.fasterxml.jackson.databind.util.internal.Linked cursor -> cursor
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    boolean hasNext() -> hasNext
    com.fasterxml.jackson.databind.util.internal.Linked next() -> next
    void remove() -> remove
    com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap:
    int NCPU -> NCPU
    long MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int NUMBER_OF_READ_BUFFERS -> NUMBER_OF_READ_BUFFERS
    int READ_BUFFERS_MASK -> READ_BUFFERS_MASK
    int READ_BUFFER_THRESHOLD -> READ_BUFFER_THRESHOLD
    int READ_BUFFER_DRAIN_THRESHOLD -> READ_BUFFER_DRAIN_THRESHOLD
    int READ_BUFFER_SIZE -> READ_BUFFER_SIZE
    int READ_BUFFER_INDEX_MASK -> READ_BUFFER_INDEX_MASK
    int WRITE_BUFFER_DRAIN_THRESHOLD -> WRITE_BUFFER_DRAIN_THRESHOLD
    java.util.concurrent.ConcurrentMap data -> data
    int concurrencyLevel -> concurrencyLevel
    long[] readBufferReadCount -> readBufferReadCount
    com.fasterxml.jackson.databind.util.internal.LinkedDeque evictionDeque -> evictionDeque
    java.util.concurrent.atomic.AtomicLong weightedSize -> weightedSize
    java.util.concurrent.atomic.AtomicLong capacity -> capacity
    java.util.concurrent.locks.Lock evictionLock -> evictionLock
    java.util.Queue writeBuffer -> writeBuffer
    java.util.concurrent.atomic.AtomicLongArray readBufferWriteCount -> readBufferWriteCount
    java.util.concurrent.atomic.AtomicLongArray readBufferDrainAtWriteCount -> readBufferDrainAtWriteCount
    java.util.concurrent.atomic.AtomicReferenceArray readBuffers -> readBuffers
    java.util.concurrent.atomic.AtomicReference drainStatus -> drainStatus
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    int ceilingNextPowerOfTwo(int) -> ceilingNextPowerOfTwo
    int readBufferIndex(int,int) -> readBufferIndex
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder) -> <init>
    void checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
    void checkState(boolean) -> checkState
    long capacity() -> capacity
    void setCapacity(long) -> setCapacity
    boolean hasOverflowed() -> hasOverflowed
    void evict() -> evict
    void afterRead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> afterRead
    int readBufferIndex() -> readBufferIndex
    long recordRead(int,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> recordRead
    void drainOnReadIfNeeded(int,long) -> drainOnReadIfNeeded
    void afterWrite(java.lang.Runnable) -> afterWrite
    void tryToDrainBuffers() -> tryToDrainBuffers
    void drainBuffers() -> drainBuffers
    void drainReadBuffers() -> drainReadBuffers
    void drainReadBuffer(int) -> drainReadBuffer
    void applyRead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> applyRead
    void drainWriteBuffer() -> drainWriteBuffer
    boolean tryToRetire(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue) -> tryToRetire
    void makeRetired(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> makeRetired
    void makeDead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> makeDead
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$1 -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$1:
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$AddTask -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$AddTask:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> node
    int weight -> weight
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,int) -> <init>
    void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder:
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int concurrencyLevel -> concurrencyLevel
    int initialCapacity -> initialCapacity
    long capacity -> capacity
    void <init>() -> <init>
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder initialCapacity(int) -> initialCapacity
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder maximumCapacity(long) -> maximumCapacity
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder concurrencyLevel(int) -> concurrencyLevel
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap build() -> build
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus IDLE -> IDLE
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus REQUIRED -> REQUIRED
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus PROCESSING -> PROCESSING
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus[] $VALUES -> $VALUES
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus[] values() -> values
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
    void <init>(java.lang.String,int,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$1) -> <init>
    void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$1 -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$1:
    void <init>(java.lang.String,int) -> <init>
    boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$2 -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$2:
    void <init>(java.lang.String,int) -> <init>
    boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$3 -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$3:
    void <init>(java.lang.String,int) -> <init>
    boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntryIterator -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntryIterator:
    java.util.Iterator iterator -> iterator
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current -> current
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntrySet -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntrySet:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map -> map
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean add(java.util.Map$Entry) -> add
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator:
    java.util.Iterator iterator -> iterator
    java.lang.Object current -> current
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map -> map
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node:
    java.lang.Object key -> key
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev -> prev
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next -> next
    void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue) -> <init>
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getPrevious() -> getPrevious
    void setPrevious(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> setPrevious
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getNext() -> getNext
    void setNext(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> setNext
    java.lang.Object getValue() -> getValue
    void setNext(com.fasterxml.jackson.databind.util.internal.Linked) -> setNext
    com.fasterxml.jackson.databind.util.internal.Linked getNext() -> getNext
    void setPrevious(com.fasterxml.jackson.databind.util.internal.Linked) -> setPrevious
    com.fasterxml.jackson.databind.util.internal.Linked getPrevious() -> getPrevious
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$RemovalTask -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$RemovalTask:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> node
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> <init>
    void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy:
    int concurrencyLevel -> concurrencyLevel
    java.util.Map data -> data
    long capacity -> capacity
    long serialVersionUID -> serialVersionUID
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask:
    int weightDifference -> weightDifference
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> node
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,int) -> <init>
    void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$ValueIterator -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$ValueIterator:
    java.util.Iterator iterator -> iterator
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current -> current
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Values -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Values:
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue:
    int weight -> weight
    java.lang.Object value -> value
    void <init>(java.lang.Object,int) -> <init>
    boolean contains(java.lang.Object) -> contains
    boolean isAlive() -> isAlive
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WriteThroughEntry -> com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WriteThroughEntry:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> this$0
    void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> <init>
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.util.internal.package-info -> com.fasterxml.jackson.databind.util.internal.package-info:
com.fasterxml.jackson.databind.util.package-info -> com.fasterxml.jackson.databind.util.package-info:
