@startuml Klassendiagramm
skinparam classAttributeIconSize 0
class ApplicationWindow {
  +main(args: String[]): void
}

class BookListPanel {
  +aktualisiereListe(buecher: List<Buch>): void
  +filterAnwenden(): void
}

class BookDetails {
  +zeigeDetails(b: Buch): void
  +openAddDialog(b: Buch): void
}

class StartPanel {
  +initComponents(): void
}

ApplicationWindow --> BookListPanel
ApplicationWindow --> BookDetails
ApplicationWindow --> StartPanel
ApplicationWindow --> Controller : verwendet
BookListPanel --> Controller : verwendet
BookDetails --> Controller : verwendet

Controller ..|> ApplicationInterface

interface ApplicationInterface {
  +buchsuche(titel: String): List<Buch>
  +buchdetails(id: int): Buch
  +showRezensionen(buchId: int): List<Rezension>
  +reviewHinzufuegen(id: int, r: Rezension): void
}

class Controller implements ApplicationInterface {
  +buchsuche(titel: String): List<Buch>
  +buchdetails(id: int): Buch
  +showRezensionen(buchId: int): List<Rezension>
  +reviewHinzufuegen(id: int, r: Rezension): void
}

class Buchkatalog {
  - buecher: List<Buch>
  + buchsuche(titel: String): List<Buch>
  + buchDetails(id: int): Buch
  + reviewHinzufuegen(id: int, r: Rezension): void
  + showRezensionen(buchId: int): List<Rezension>
}

class StorageService {
  + ladeBuecher(): List<Buch>
  + ladeRezensionen(): List<Rezension>
  + speichereRezension(r: Rezension): void
}

class Buch {
  - Titel: String
  - ISBN: String
  - Erscheinungsjahr: Date
  - Beschreibung: String
}

class Autor {
  - Name: String
}

class Genre {
  - Name: String
  - Beschreibung: String
}


class Verlag {
  - Name: String
}

class Rezension {
  - Bewertung: int
  - Kommentar: String
  - Datum: Date
}

' Beziehungen
Buch "1" -- "1..*" Autor
Buch "1" -- "1" Genre
Buch "1" -- "1" Verlag
Buch "1" -- "0..*" Rezension

Controller --> Buchkatalog
Controller --> StorageService
StorageService --> Buch
StorageService --> Rezension
Buchkatalog --> Buch
Buchkatalog --> Rezension
@enduml